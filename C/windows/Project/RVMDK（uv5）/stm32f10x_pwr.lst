ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_pwr.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	PWR_DeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  22              		.type	PWR_DeInit, %function
  23              	PWR_DeInit:
  24              	.LFB29:
  25              		.file 1 "../../source/src/FWlib/src/stm32f10x_pwr.c"
   1:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
   2:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
   3:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @file    stm32f10x_pwr.c
   4:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @author  MCD Application Team
   5:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @version V3.5.0
   6:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @date    11-March-2011
   7:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief   This file provides all the PWR firmware functions.
   8:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
   9:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @attention
  10:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *
  11:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *
  18:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
  20:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  21:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  22:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Includes ------------------------------------------------------------------*/
  23:../../source/src/FWlib/src/stm32f10x_pwr.c **** #include "stm32f10x_pwr.h"
  24:../../source/src/FWlib/src/stm32f10x_pwr.c **** #include "stm32f10x_rcc.h"
  25:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  26:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  28:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  29:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  30:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR 
  31:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief PWR driver modules
  32:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 2


  33:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */ 
  34:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  35:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_TypesDefinitions
  36:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  37:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  38:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  39:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  40:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  41:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  42:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  43:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Defines
  44:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  45:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  46:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  47:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  48:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  49:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  50:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --- CR Register ---*/
  51:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  52:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of DBP bit */
  53:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  54:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define DBP_BitNumber            0x08
  55:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  56:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  57:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of PVDE bit */
  58:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define PVDE_BitNumber           0x04
  59:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  60:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  61:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --- CSR Register ---*/
  62:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  63:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of EWUP bit */
  64:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CSR_OFFSET               (PWR_OFFSET + 0x04)
  65:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define EWUP_BitNumber           0x08
  66:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CSR_EWUP_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (EWUP_BitNumber * 4))
  67:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  68:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
  69:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  70:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* CR register bit mask */
  71:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_DS_MASK               ((uint32_t)0xFFFFFFFC)
  72:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_PLS_MASK              ((uint32_t)0xFFFFFF1F)
  73:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  74:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  75:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  76:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  77:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  78:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  79:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Macros
  80:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  81:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  82:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  83:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  84:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  85:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  86:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  87:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Variables
  88:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  89:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 3


  90:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  91:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  92:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  93:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  94:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  95:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_FunctionPrototypes
  96:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  97:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  98:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  99:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 100:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
 101:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 102:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 103:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Functions
 104:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
 105:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 106:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 107:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 108:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.
 109:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  None
 110:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 111:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 112:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_DeInit(void)
 113:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
  26              		.loc 1 113 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 114:../../source/src/FWlib/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
  35              		.loc 1 114 0
  36 0002 0121     		movs	r1, #1
  37 0004 4FF08050 		mov	r0, #268435456
  38 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  39              	.LVL0:
 115:../../source/src/FWlib/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
 116:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
  40              		.loc 1 116 0
  41 000c BDE80840 		pop	{r3, lr}
  42              	.LCFI1:
  43              		.cfi_restore 14
  44              		.cfi_restore 3
  45              		.cfi_def_cfa_offset 0
 115:../../source/src/FWlib/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
  46              		.loc 1 115 0
  47 0010 0021     		movs	r1, #0
  48 0012 4FF08050 		mov	r0, #268435456
  49 0016 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  50              	.LVL1:
  51              		.cfi_endproc
  52              	.LFE29:
  53              		.size	PWR_DeInit, .-PWR_DeInit
  54              		.align	1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 4


  55 001a 00BF     		.p2align 2,,3
  56              		.global	PWR_BackupAccessCmd
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  61              		.type	PWR_BackupAccessCmd, %function
  62              	PWR_BackupAccessCmd:
  63              	.LFB30:
 117:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 118:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 119:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables access to the RTC and backup registers.
 120:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the access to the RTC and backup registers.
 121:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 122:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 123:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 124:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 125:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
  64              		.loc 1 125 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL2:
 126:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 127:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 128:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
  70              		.loc 1 128 0
  71 001c 014B     		ldr	r3, .L4
  72 001e 1860     		str	r0, [r3]
 129:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
  73              		.loc 1 129 0
  74 0020 7047     		bx	lr
  75              	.L5:
  76 0022 00BF     		.align	2
  77              	.L4:
  78 0024 20000E42 		.word	1108213792
  79              		.cfi_endproc
  80              	.LFE30:
  81              		.size	PWR_BackupAccessCmd, .-PWR_BackupAccessCmd
  82              		.align	1
  83              		.p2align 2,,3
  84              		.global	PWR_PVDCmd
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  89              		.type	PWR_PVDCmd, %function
  90              	PWR_PVDCmd:
  91              	.LFB31:
 130:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 131:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 132:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 133:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the PVD.
 134:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 135:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 136:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 5


 137:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 138:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
  92              		.loc 1 138 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.LVL3:
 139:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 140:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 141:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
  98              		.loc 1 141 0
  99 0028 014B     		ldr	r3, .L7
 100 002a 1860     		str	r0, [r3]
 142:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 101              		.loc 1 142 0
 102 002c 7047     		bx	lr
 103              	.L8:
 104 002e 00BF     		.align	2
 105              	.L7:
 106 0030 10000E42 		.word	1108213776
 107              		.cfi_endproc
 108              	.LFE31:
 109              		.size	PWR_PVDCmd, .-PWR_PVDCmd
 110              		.align	1
 111              		.p2align 2,,3
 112              		.global	PWR_PVDLevelConfig
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 117              		.type	PWR_PVDLevelConfig, %function
 118              	PWR_PVDLevelConfig:
 119              	.LFB32:
 143:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 144:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 145:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 146:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 147:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 148:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V2: PVD detection level set to 2.2V
 149:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V3: PVD detection level set to 2.3V
 150:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V4: PVD detection level set to 2.4V
 151:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V5: PVD detection level set to 2.5V
 152:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V6: PVD detection level set to 2.6V
 153:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V7: PVD detection level set to 2.7V
 154:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V8: PVD detection level set to 2.8V
 155:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V9: PVD detection level set to 2.9V
 156:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 157:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 158:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 159:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 120              		.loc 1 159 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL4:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 6


 160:../../source/src/FWlib/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 161:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 162:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 163:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 126              		.loc 1 163 0
 127 0034 034A     		ldr	r2, .L10
 128 0036 1368     		ldr	r3, [r2]
 129              	.LVL5:
 164:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear PLS[7:5] bits */
 165:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg &= CR_PLS_MASK;
 130              		.loc 1 165 0
 131 0038 23F0E003 		bic	r3, r3, #224
 132              	.LVL6:
 166:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 167:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg |= PWR_PVDLevel;
 133              		.loc 1 167 0
 134 003c 1843     		orrs	r0, r0, r3
 135              	.LVL7:
 168:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Store the new value */
 169:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 136              		.loc 1 169 0
 137 003e 1060     		str	r0, [r2]
 170:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 138              		.loc 1 170 0
 139 0040 7047     		bx	lr
 140              	.L11:
 141 0042 00BF     		.align	2
 142              	.L10:
 143 0044 00700040 		.word	1073770496
 144              		.cfi_endproc
 145              	.LFE32:
 146              		.size	PWR_PVDLevelConfig, .-PWR_PVDLevelConfig
 147              		.align	1
 148              		.p2align 2,,3
 149              		.global	PWR_WakeUpPinCmd
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 154              		.type	PWR_WakeUpPinCmd, %function
 155              	PWR_WakeUpPinCmd:
 156              	.LFB33:
 171:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 172:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 173:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 174:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 175:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 176:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 177:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 178:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_WakeUpPinCmd(FunctionalState NewState)
 179:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 157              		.loc 1 179 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL8:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 7


 180:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 181:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 182:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
 163              		.loc 1 182 0
 164 0048 014B     		ldr	r3, .L13
 165 004a 1860     		str	r0, [r3]
 183:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 166              		.loc 1 183 0
 167 004c 7047     		bx	lr
 168              	.L14:
 169 004e 00BF     		.align	2
 170              	.L13:
 171 0050 A0000E42 		.word	1108213920
 172              		.cfi_endproc
 173              	.LFE33:
 174              		.size	PWR_WakeUpPinCmd, .-PWR_WakeUpPinCmd
 175              		.align	1
 176              		.p2align 2,,3
 177              		.global	PWR_EnterSTOPMode
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 182              		.type	PWR_EnterSTOPMode, %function
 183              	PWR_EnterSTOPMode:
 184              	.LFB34:
 184:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 185:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 186:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enters STOP mode.
 187:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 188:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 189:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_ON: STOP mode with regulator ON
 190:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_LowPower: STOP mode with regulator in low power mode
 191:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 192:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 193:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 194:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 195:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 196:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 197:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 198:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 185              		.loc 1 198 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL9:
 191 0054 10B4     		push	{r4}
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 4, -4
 199:../../source/src/FWlib/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 200:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 201:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 202:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 203:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 204:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 8


 205:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 195              		.loc 1 205 0
 196 0056 0C4C     		ldr	r4, .L19
 206:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear PDDS and LPDS bits */
 207:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg &= CR_DS_MASK;
 208:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set LPDS bit according to PWR_Regulator value */
 209:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg |= PWR_Regulator;
 210:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Store the new value */
 211:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 212:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 213:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 197              		.loc 1 213 0
 198 0058 0C4A     		ldr	r2, .L19+4
 205:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear PDDS and LPDS bits */
 199              		.loc 1 205 0
 200 005a 2368     		ldr	r3, [r4]
 201              	.LVL10:
 214:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 215:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 216:../../source/src/FWlib/src/stm32f10x_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 202              		.loc 1 216 0
 203 005c 0129     		cmp	r1, #1
 207:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set LPDS bit according to PWR_Regulator value */
 204              		.loc 1 207 0
 205 005e 23F00303 		bic	r3, r3, #3
 206              	.LVL11:
 209:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Store the new value */
 207              		.loc 1 209 0
 208 0062 40EA0300 		orr	r0, r0, r3
 209              	.LVL12:
 211:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 210              		.loc 1 211 0
 211 0066 2060     		str	r0, [r4]
 213:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 212              		.loc 1 213 0
 213 0068 1369     		ldr	r3, [r2, #16]
 214 006a 43F00403 		orr	r3, r3, #4
 215 006e 1361     		str	r3, [r2, #16]
 216              		.loc 1 216 0
 217 0070 07D0     		beq	.L18
 218              	.LBB8:
 219              	.LBB9:
 220              		.file 2 "../../source/include/core_cm3.h"
   1:../../source/include/core_cm3.h **** /**************************************************************************//**
   2:../../source/include/core_cm3.h ****  * @file     core_cm3.h
   3:../../source/include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../../source/include/core_cm3.h ****  * @version  V1.30
   5:../../source/include/core_cm3.h ****  * @date     30. October 2009
   6:../../source/include/core_cm3.h ****  *
   7:../../source/include/core_cm3.h ****  * @note
   8:../../source/include/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:../../source/include/core_cm3.h ****  *
  10:../../source/include/core_cm3.h ****  * @par
  11:../../source/include/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../source/include/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../source/include/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../source/include/core_cm3.h ****  *
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 9


  15:../../source/include/core_cm3.h ****  * @par
  16:../../source/include/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../source/include/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../source/include/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../source/include/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../source/include/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../source/include/core_cm3.h ****  *
  22:../../source/include/core_cm3.h ****  ******************************************************************************/
  23:../../source/include/core_cm3.h **** 
  24:../../source/include/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:../../source/include/core_cm3.h **** #define __CM3_CORE_H__
  26:../../source/include/core_cm3.h **** 
  27:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:../../source/include/core_cm3.h ****  *
  29:../../source/include/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:../../source/include/core_cm3.h ****  *   - Error 10: \n
  31:../../source/include/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:../../source/include/core_cm3.h ****  *     Error 10: Expecting ';'
  33:../../source/include/core_cm3.h ****  * .
  34:../../source/include/core_cm3.h ****  *   - Error 530: \n
  35:../../source/include/core_cm3.h ****  *     return(__regBasePri); \n
  36:../../source/include/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:../../source/include/core_cm3.h ****  * . 
  38:../../source/include/core_cm3.h ****  *   - Error 550: \n
  39:../../source/include/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:../../source/include/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:../../source/include/core_cm3.h ****  * .
  42:../../source/include/core_cm3.h ****  *   - Error 754: \n
  43:../../source/include/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:../../source/include/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:../../source/include/core_cm3.h ****  * .
  46:../../source/include/core_cm3.h ****  *   - Error 750: \n
  47:../../source/include/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:../../source/include/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:../../source/include/core_cm3.h ****  * .
  50:../../source/include/core_cm3.h ****  *   - Error 528: \n
  51:../../source/include/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:../../source/include/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:../../source/include/core_cm3.h ****  * .
  54:../../source/include/core_cm3.h ****  *   - Error 751: \n
  55:../../source/include/core_cm3.h ****  *     } InterruptType_Type; \n
  56:../../source/include/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:../../source/include/core_cm3.h ****  * .
  58:../../source/include/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:../../source/include/core_cm3.h ****  *
  60:../../source/include/core_cm3.h ****  */
  61:../../source/include/core_cm3.h **** 
  62:../../source/include/core_cm3.h **** /*lint -save */
  63:../../source/include/core_cm3.h **** /*lint -e10  */
  64:../../source/include/core_cm3.h **** /*lint -e530 */
  65:../../source/include/core_cm3.h **** /*lint -e550 */
  66:../../source/include/core_cm3.h **** /*lint -e754 */
  67:../../source/include/core_cm3.h **** /*lint -e750 */
  68:../../source/include/core_cm3.h **** /*lint -e528 */
  69:../../source/include/core_cm3.h **** /*lint -e751 */
  70:../../source/include/core_cm3.h **** 
  71:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 10


  72:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:../../source/include/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:../../source/include/core_cm3.h ****     - CMSIS version number
  75:../../source/include/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:../../source/include/core_cm3.h ****     - Cortex-M core peripheral base address
  77:../../source/include/core_cm3.h ****   @{
  78:../../source/include/core_cm3.h ****  */
  79:../../source/include/core_cm3.h **** 
  80:../../source/include/core_cm3.h **** #ifdef __cplusplus
  81:../../source/include/core_cm3.h ****  extern "C" {
  82:../../source/include/core_cm3.h **** #endif 
  83:../../source/include/core_cm3.h **** 
  84:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:../../source/include/core_cm3.h **** 
  88:../../source/include/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:../../source/include/core_cm3.h **** 
  90:../../source/include/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:../../source/include/core_cm3.h **** 
  92:../../source/include/core_cm3.h **** #if defined (__ICCARM__)
  93:../../source/include/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:../../source/include/core_cm3.h **** #endif
  95:../../source/include/core_cm3.h **** 
  96:../../source/include/core_cm3.h **** 
  97:../../source/include/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:../../source/include/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:../../source/include/core_cm3.h **** #endif
 100:../../source/include/core_cm3.h **** 
 101:../../source/include/core_cm3.h **** 
 102:../../source/include/core_cm3.h **** 
 103:../../source/include/core_cm3.h **** 
 104:../../source/include/core_cm3.h **** /**
 105:../../source/include/core_cm3.h ****  * IO definitions
 106:../../source/include/core_cm3.h ****  *
 107:../../source/include/core_cm3.h ****  * define access restrictions to peripheral registers
 108:../../source/include/core_cm3.h ****  */
 109:../../source/include/core_cm3.h **** 
 110:../../source/include/core_cm3.h **** #ifdef __cplusplus
 111:../../source/include/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:../../source/include/core_cm3.h **** #else
 113:../../source/include/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:../../source/include/core_cm3.h **** #endif
 115:../../source/include/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:../../source/include/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:../../source/include/core_cm3.h **** 
 118:../../source/include/core_cm3.h **** 
 119:../../source/include/core_cm3.h **** 
 120:../../source/include/core_cm3.h **** /*******************************************************************************
 121:../../source/include/core_cm3.h ****  *                 Register Abstraction
 122:../../source/include/core_cm3.h ****  ******************************************************************************/
 123:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:../../source/include/core_cm3.h ****  @{
 125:../../source/include/core_cm3.h **** */
 126:../../source/include/core_cm3.h **** 
 127:../../source/include/core_cm3.h **** 
 128:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 11


 129:../../source/include/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:../../source/include/core_cm3.h ****   @{
 131:../../source/include/core_cm3.h ****  */
 132:../../source/include/core_cm3.h **** typedef struct
 133:../../source/include/core_cm3.h **** {
 134:../../source/include/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:../../source/include/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:../../source/include/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:../../source/include/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:../../source/include/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:../../source/include/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:../../source/include/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:../../source/include/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:../../source/include/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:../../source/include/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:../../source/include/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:../../source/include/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:../../source/include/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:../../source/include/core_cm3.h **** }  NVIC_Type;                                               
 148:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:../../source/include/core_cm3.h **** 
 150:../../source/include/core_cm3.h **** 
 151:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:../../source/include/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:../../source/include/core_cm3.h ****   @{
 154:../../source/include/core_cm3.h ****  */
 155:../../source/include/core_cm3.h **** typedef struct
 156:../../source/include/core_cm3.h **** {
 157:../../source/include/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:../../source/include/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:../../source/include/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:../../source/include/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:../../source/include/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:../../source/include/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:../../source/include/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:../../source/include/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:../../source/include/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:../../source/include/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:../../source/include/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:../../source/include/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:../../source/include/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:../../source/include/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:../../source/include/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:../../source/include/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:../../source/include/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:../../source/include/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:../../source/include/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:../../source/include/core_cm3.h **** } SCB_Type;                                                
 177:../../source/include/core_cm3.h **** 
 178:../../source/include/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:../../source/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:../../source/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:../../source/include/core_cm3.h **** 
 182:../../source/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:../../source/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:../../source/include/core_cm3.h **** 
 185:../../source/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 12


 186:../../source/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:../../source/include/core_cm3.h **** 
 188:../../source/include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:../../source/include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:../../source/include/core_cm3.h **** 
 191:../../source/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:../../source/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:../../source/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:../../source/include/core_cm3.h **** 
 195:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:../../source/include/core_cm3.h **** 
 198:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:../../source/include/core_cm3.h **** 
 201:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:../../source/include/core_cm3.h **** 
 204:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:../../source/include/core_cm3.h **** 
 207:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:../../source/include/core_cm3.h **** 
 210:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:../../source/include/core_cm3.h **** 
 213:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:../../source/include/core_cm3.h **** 
 216:../../source/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:../../source/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:../../source/include/core_cm3.h **** 
 219:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:../../source/include/core_cm3.h **** 
 222:../../source/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:../../source/include/core_cm3.h **** 
 226:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:../../source/include/core_cm3.h **** 
 229:../../source/include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:../../source/include/core_cm3.h **** 
 233:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:../../source/include/core_cm3.h **** 
 236:../../source/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:../../source/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:../../source/include/core_cm3.h **** 
 239:../../source/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:../../source/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:../../source/include/core_cm3.h **** 
 242:../../source/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 13


 243:../../source/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:../../source/include/core_cm3.h **** 
 245:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:../../source/include/core_cm3.h **** 
 248:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:../../source/include/core_cm3.h **** 
 251:../../source/include/core_cm3.h **** /* SCB System Control Register Definitions */
 252:../../source/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:../../source/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:../../source/include/core_cm3.h **** 
 255:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:../../source/include/core_cm3.h **** 
 258:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:../../source/include/core_cm3.h **** 
 261:../../source/include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:../../source/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:../../source/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:../../source/include/core_cm3.h **** 
 265:../../source/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:../../source/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:../../source/include/core_cm3.h **** 
 268:../../source/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:../../source/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:../../source/include/core_cm3.h **** 
 271:../../source/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:../../source/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:../../source/include/core_cm3.h **** 
 274:../../source/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:../../source/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:../../source/include/core_cm3.h **** 
 277:../../source/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:../../source/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:../../source/include/core_cm3.h **** 
 280:../../source/include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:../../source/include/core_cm3.h **** 
 284:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:../../source/include/core_cm3.h **** 
 287:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:../../source/include/core_cm3.h **** 
 290:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:../../source/include/core_cm3.h **** 
 293:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:../../source/include/core_cm3.h **** 
 296:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:../../source/include/core_cm3.h **** 
 299:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 14


 300:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:../../source/include/core_cm3.h **** 
 302:../../source/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:../../source/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:../../source/include/core_cm3.h **** 
 305:../../source/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:../../source/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:../../source/include/core_cm3.h **** 
 308:../../source/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:../../source/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:../../source/include/core_cm3.h **** 
 311:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:../../source/include/core_cm3.h ****                                      
 314:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:../../source/include/core_cm3.h **** 
 317:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:../../source/include/core_cm3.h **** 
 320:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:../../source/include/core_cm3.h **** 
 323:../../source/include/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:../../source/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:../../source/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:../../source/include/core_cm3.h **** 
 327:../../source/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:../../source/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:../../source/include/core_cm3.h **** 
 330:../../source/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:../../source/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:../../source/include/core_cm3.h **** 
 333:../../source/include/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:../../source/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:../../source/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:../../source/include/core_cm3.h **** 
 337:../../source/include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:../../source/include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:../../source/include/core_cm3.h **** 
 340:../../source/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:../../source/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:../../source/include/core_cm3.h **** 
 343:../../source/include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:../../source/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:../../source/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:../../source/include/core_cm3.h **** 
 347:../../source/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:../../source/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:../../source/include/core_cm3.h **** 
 350:../../source/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:../../source/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:../../source/include/core_cm3.h **** 
 353:../../source/include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:../../source/include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:../../source/include/core_cm3.h **** 
 356:../../source/include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 15


 357:../../source/include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:../../source/include/core_cm3.h **** 
 360:../../source/include/core_cm3.h **** 
 361:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:../../source/include/core_cm3.h ****   memory mapped structure for SysTick
 363:../../source/include/core_cm3.h ****   @{
 364:../../source/include/core_cm3.h ****  */
 365:../../source/include/core_cm3.h **** typedef struct
 366:../../source/include/core_cm3.h **** {
 367:../../source/include/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:../../source/include/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:../../source/include/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:../../source/include/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:../../source/include/core_cm3.h **** } SysTick_Type;
 372:../../source/include/core_cm3.h **** 
 373:../../source/include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:../../source/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:../../source/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:../../source/include/core_cm3.h **** 
 377:../../source/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:../../source/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:../../source/include/core_cm3.h **** 
 380:../../source/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:../../source/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:../../source/include/core_cm3.h **** 
 383:../../source/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:../../source/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:../../source/include/core_cm3.h **** 
 386:../../source/include/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:../../source/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:../../source/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:../../source/include/core_cm3.h **** 
 390:../../source/include/core_cm3.h **** /* SysTick Current Register Definitions */
 391:../../source/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:../../source/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:../../source/include/core_cm3.h **** 
 394:../../source/include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:../../source/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:../../source/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:../../source/include/core_cm3.h **** 
 398:../../source/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:../../source/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:../../source/include/core_cm3.h **** 
 401:../../source/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:../../source/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:../../source/include/core_cm3.h **** 
 405:../../source/include/core_cm3.h **** 
 406:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:../../source/include/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:../../source/include/core_cm3.h ****   @{
 409:../../source/include/core_cm3.h ****  */
 410:../../source/include/core_cm3.h **** typedef struct
 411:../../source/include/core_cm3.h **** {
 412:../../source/include/core_cm3.h ****   __O  union  
 413:../../source/include/core_cm3.h ****   {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 16


 414:../../source/include/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:../../source/include/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:../../source/include/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:../../source/include/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:../../source/include/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:../../source/include/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:../../source/include/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:../../source/include/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:../../source/include/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:../../source/include/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:../../source/include/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:../../source/include/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:../../source/include/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:../../source/include/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:../../source/include/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:../../source/include/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:../../source/include/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:../../source/include/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:../../source/include/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:../../source/include/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:../../source/include/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:../../source/include/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:../../source/include/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:../../source/include/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:../../source/include/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:../../source/include/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:../../source/include/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:../../source/include/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:../../source/include/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:../../source/include/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:../../source/include/core_cm3.h **** } ITM_Type;                                                
 445:../../source/include/core_cm3.h **** 
 446:../../source/include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:../../source/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:../../source/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:../../source/include/core_cm3.h **** 
 450:../../source/include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:../../source/include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:../../source/include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:../../source/include/core_cm3.h **** 
 454:../../source/include/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:../../source/include/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:../../source/include/core_cm3.h **** 
 457:../../source/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:../../source/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:../../source/include/core_cm3.h **** 
 460:../../source/include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:../../source/include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:../../source/include/core_cm3.h **** 
 463:../../source/include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:../../source/include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:../../source/include/core_cm3.h **** 
 466:../../source/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:../../source/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:../../source/include/core_cm3.h **** 
 469:../../source/include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:../../source/include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 17


 471:../../source/include/core_cm3.h **** 
 472:../../source/include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:../../source/include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:../../source/include/core_cm3.h **** 
 475:../../source/include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:../../source/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:../../source/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:../../source/include/core_cm3.h **** 
 479:../../source/include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:../../source/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:../../source/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:../../source/include/core_cm3.h **** 
 483:../../source/include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:../../source/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:../../source/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:../../source/include/core_cm3.h **** 
 487:../../source/include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:../../source/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:../../source/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:../../source/include/core_cm3.h **** 
 491:../../source/include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:../../source/include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:../../source/include/core_cm3.h **** 
 494:../../source/include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:../../source/include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:../../source/include/core_cm3.h **** 
 498:../../source/include/core_cm3.h **** 
 499:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:../../source/include/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:../../source/include/core_cm3.h ****   @{
 502:../../source/include/core_cm3.h ****  */
 503:../../source/include/core_cm3.h **** typedef struct
 504:../../source/include/core_cm3.h **** {
 505:../../source/include/core_cm3.h ****        uint32_t RESERVED0;
 506:../../source/include/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:../../source/include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:../../source/include/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:../../source/include/core_cm3.h **** #else
 510:../../source/include/core_cm3.h ****        uint32_t RESERVED1;
 511:../../source/include/core_cm3.h **** #endif
 512:../../source/include/core_cm3.h **** } InterruptType_Type;
 513:../../source/include/core_cm3.h **** 
 514:../../source/include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:../../source/include/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:../../source/include/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:../../source/include/core_cm3.h **** 
 518:../../source/include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:../../source/include/core_cm3.h **** 
 522:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:../../source/include/core_cm3.h **** 
 525:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 18


 528:../../source/include/core_cm3.h **** 
 529:../../source/include/core_cm3.h **** 
 530:../../source/include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:../../source/include/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:../../source/include/core_cm3.h ****   @{
 534:../../source/include/core_cm3.h ****  */
 535:../../source/include/core_cm3.h **** typedef struct
 536:../../source/include/core_cm3.h **** {
 537:../../source/include/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:../../source/include/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:../../source/include/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:../../source/include/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:../../source/include/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:../../source/include/core_cm3.h **** } MPU_Type;                                                
 549:../../source/include/core_cm3.h **** 
 550:../../source/include/core_cm3.h **** /* MPU Type Register */
 551:../../source/include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:../../source/include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:../../source/include/core_cm3.h **** 
 554:../../source/include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:../../source/include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:../../source/include/core_cm3.h **** 
 557:../../source/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:../../source/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:../../source/include/core_cm3.h **** 
 560:../../source/include/core_cm3.h **** /* MPU Control Register */
 561:../../source/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:../../source/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:../../source/include/core_cm3.h **** 
 564:../../source/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:../../source/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:../../source/include/core_cm3.h **** 
 567:../../source/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:../../source/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:../../source/include/core_cm3.h **** 
 570:../../source/include/core_cm3.h **** /* MPU Region Number Register */
 571:../../source/include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:../../source/include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:../../source/include/core_cm3.h **** 
 574:../../source/include/core_cm3.h **** /* MPU Region Base Address Register */
 575:../../source/include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:../../source/include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:../../source/include/core_cm3.h **** 
 578:../../source/include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:../../source/include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:../../source/include/core_cm3.h **** 
 581:../../source/include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:../../source/include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:../../source/include/core_cm3.h **** 
 584:../../source/include/core_cm3.h **** /* MPU Region Attribute and Size Register */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 19


 585:../../source/include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:../../source/include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:../../source/include/core_cm3.h **** 
 588:../../source/include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:../../source/include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:../../source/include/core_cm3.h **** 
 591:../../source/include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:../../source/include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:../../source/include/core_cm3.h **** 
 594:../../source/include/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:../../source/include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:../../source/include/core_cm3.h **** 
 597:../../source/include/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:../../source/include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:../../source/include/core_cm3.h **** 
 600:../../source/include/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:../../source/include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:../../source/include/core_cm3.h **** 
 603:../../source/include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:../../source/include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:../../source/include/core_cm3.h **** 
 606:../../source/include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:../../source/include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:../../source/include/core_cm3.h **** 
 609:../../source/include/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:../../source/include/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:../../source/include/core_cm3.h **** 
 612:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:../../source/include/core_cm3.h **** #endif
 614:../../source/include/core_cm3.h **** 
 615:../../source/include/core_cm3.h **** 
 616:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:../../source/include/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:../../source/include/core_cm3.h ****   @{
 619:../../source/include/core_cm3.h ****  */
 620:../../source/include/core_cm3.h **** typedef struct
 621:../../source/include/core_cm3.h **** {
 622:../../source/include/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:../../source/include/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:../../source/include/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:../../source/include/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:../../source/include/core_cm3.h **** } CoreDebug_Type;
 627:../../source/include/core_cm3.h **** 
 628:../../source/include/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:../../source/include/core_cm3.h **** 
 632:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:../../source/include/core_cm3.h **** 
 635:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:../../source/include/core_cm3.h **** 
 638:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:../../source/include/core_cm3.h **** 
 641:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 20


 642:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:../../source/include/core_cm3.h **** 
 644:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:../../source/include/core_cm3.h **** 
 647:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:../../source/include/core_cm3.h **** 
 650:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:../../source/include/core_cm3.h **** 
 653:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:../../source/include/core_cm3.h **** 
 656:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:../../source/include/core_cm3.h **** 
 659:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:../../source/include/core_cm3.h **** 
 662:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:../../source/include/core_cm3.h **** 
 665:../../source/include/core_cm3.h **** /* Debug Core Register Selector Register */
 666:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:../../source/include/core_cm3.h **** 
 669:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:../../source/include/core_cm3.h **** 
 672:../../source/include/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:../../source/include/core_cm3.h **** 
 676:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:../../source/include/core_cm3.h **** 
 679:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:../../source/include/core_cm3.h **** 
 682:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:../../source/include/core_cm3.h **** 
 685:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:../../source/include/core_cm3.h **** 
 688:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:../../source/include/core_cm3.h **** 
 691:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:../../source/include/core_cm3.h **** 
 694:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:../../source/include/core_cm3.h **** 
 697:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 21


 699:../../source/include/core_cm3.h **** 
 700:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:../../source/include/core_cm3.h **** 
 703:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:../../source/include/core_cm3.h **** 
 706:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:../../source/include/core_cm3.h **** 
 709:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:../../source/include/core_cm3.h **** 
 713:../../source/include/core_cm3.h **** 
 714:../../source/include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:../../source/include/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:../../source/include/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:../../source/include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:../../source/include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:../../source/include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:../../source/include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:../../source/include/core_cm3.h **** 
 722:../../source/include/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:../../source/include/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:../../source/include/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:../../source/include/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:../../source/include/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:../../source/include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:../../source/include/core_cm3.h **** 
 729:../../source/include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:../../source/include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:../../source/include/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:../../source/include/core_cm3.h **** #endif
 733:../../source/include/core_cm3.h **** 
 734:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:../../source/include/core_cm3.h **** 
 736:../../source/include/core_cm3.h **** 
 737:../../source/include/core_cm3.h **** /*******************************************************************************
 738:../../source/include/core_cm3.h ****  *                Hardware Abstraction Layer
 739:../../source/include/core_cm3.h ****  ******************************************************************************/
 740:../../source/include/core_cm3.h **** 
 741:../../source/include/core_cm3.h **** #if defined ( __CC_ARM   )
 742:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:../../source/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:../../source/include/core_cm3.h **** 
 745:../../source/include/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:../../source/include/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:../../source/include/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:../../source/include/core_cm3.h **** 
 749:../../source/include/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:../../source/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:../../source/include/core_cm3.h **** 
 753:../../source/include/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:../../source/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 22


 756:../../source/include/core_cm3.h **** 
 757:../../source/include/core_cm3.h **** #endif
 758:../../source/include/core_cm3.h **** 
 759:../../source/include/core_cm3.h **** 
 760:../../source/include/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:../../source/include/core_cm3.h **** 
 762:../../source/include/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:../../source/include/core_cm3.h **** /* ARM armcc specific functions */
 764:../../source/include/core_cm3.h **** 
 765:../../source/include/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:../../source/include/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:../../source/include/core_cm3.h **** 
 768:../../source/include/core_cm3.h **** #define __NOP                             __nop
 769:../../source/include/core_cm3.h **** #define __WFI                             __wfi
 770:../../source/include/core_cm3.h **** #define __WFE                             __wfe
 771:../../source/include/core_cm3.h **** #define __SEV                             __sev
 772:../../source/include/core_cm3.h **** #define __ISB()                           __isb(0)
 773:../../source/include/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:../../source/include/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:../../source/include/core_cm3.h **** #define __REV                             __rev
 776:../../source/include/core_cm3.h **** #define __RBIT                            __rbit
 777:../../source/include/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:../../source/include/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:../../source/include/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:../../source/include/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:../../source/include/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:../../source/include/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:../../source/include/core_cm3.h **** 
 784:../../source/include/core_cm3.h **** 
 785:../../source/include/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:../../source/include/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:../../source/include/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:../../source/include/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:../../source/include/core_cm3.h **** 
 790:../../source/include/core_cm3.h **** 
 791:../../source/include/core_cm3.h **** /**
 792:../../source/include/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:../../source/include/core_cm3.h ****  *
 794:../../source/include/core_cm3.h ****  * @return ProcessStackPointer
 795:../../source/include/core_cm3.h ****  *
 796:../../source/include/core_cm3.h ****  * Return the actual process stack pointer
 797:../../source/include/core_cm3.h ****  */
 798:../../source/include/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:../../source/include/core_cm3.h **** 
 800:../../source/include/core_cm3.h **** /**
 801:../../source/include/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:../../source/include/core_cm3.h ****  *
 803:../../source/include/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:../../source/include/core_cm3.h ****  *
 805:../../source/include/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:../../source/include/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:../../source/include/core_cm3.h ****  */
 808:../../source/include/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:../../source/include/core_cm3.h **** 
 810:../../source/include/core_cm3.h **** /**
 811:../../source/include/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:../../source/include/core_cm3.h ****  *
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 23


 813:../../source/include/core_cm3.h ****  * @return Main Stack Pointer
 814:../../source/include/core_cm3.h ****  *
 815:../../source/include/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:../../source/include/core_cm3.h ****  * Cortex processor register
 817:../../source/include/core_cm3.h ****  */
 818:../../source/include/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:../../source/include/core_cm3.h **** 
 820:../../source/include/core_cm3.h **** /**
 821:../../source/include/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:../../source/include/core_cm3.h ****  *
 823:../../source/include/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:../../source/include/core_cm3.h ****  *
 825:../../source/include/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:../../source/include/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:../../source/include/core_cm3.h ****  */
 828:../../source/include/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:../../source/include/core_cm3.h **** 
 830:../../source/include/core_cm3.h **** /**
 831:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:../../source/include/core_cm3.h ****  *
 833:../../source/include/core_cm3.h ****  * @param   value  value to reverse
 834:../../source/include/core_cm3.h ****  * @return         reversed value
 835:../../source/include/core_cm3.h ****  *
 836:../../source/include/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:../../source/include/core_cm3.h ****  */
 838:../../source/include/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:../../source/include/core_cm3.h **** 
 840:../../source/include/core_cm3.h **** /**
 841:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:../../source/include/core_cm3.h ****  *
 843:../../source/include/core_cm3.h ****  * @param   value  value to reverse
 844:../../source/include/core_cm3.h ****  * @return         reversed value
 845:../../source/include/core_cm3.h ****  *
 846:../../source/include/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:../../source/include/core_cm3.h ****  */
 848:../../source/include/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:../../source/include/core_cm3.h **** 
 850:../../source/include/core_cm3.h **** 
 851:../../source/include/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:../../source/include/core_cm3.h **** 
 853:../../source/include/core_cm3.h **** /**
 854:../../source/include/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:../../source/include/core_cm3.h ****  *
 856:../../source/include/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:../../source/include/core_cm3.h ****  */
 858:../../source/include/core_cm3.h **** extern void __CLREX(void);
 859:../../source/include/core_cm3.h **** 
 860:../../source/include/core_cm3.h **** /**
 861:../../source/include/core_cm3.h ****  * @brief  Return the Base Priority value
 862:../../source/include/core_cm3.h ****  *
 863:../../source/include/core_cm3.h ****  * @return BasePriority
 864:../../source/include/core_cm3.h ****  *
 865:../../source/include/core_cm3.h ****  * Return the content of the base priority register
 866:../../source/include/core_cm3.h ****  */
 867:../../source/include/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:../../source/include/core_cm3.h **** 
 869:../../source/include/core_cm3.h **** /**
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 24


 870:../../source/include/core_cm3.h ****  * @brief  Set the Base Priority value
 871:../../source/include/core_cm3.h ****  *
 872:../../source/include/core_cm3.h ****  * @param  basePri  BasePriority
 873:../../source/include/core_cm3.h ****  *
 874:../../source/include/core_cm3.h ****  * Set the base priority register
 875:../../source/include/core_cm3.h ****  */
 876:../../source/include/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:../../source/include/core_cm3.h **** 
 878:../../source/include/core_cm3.h **** /**
 879:../../source/include/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:../../source/include/core_cm3.h ****  *
 881:../../source/include/core_cm3.h ****  * @return PriMask
 882:../../source/include/core_cm3.h ****  *
 883:../../source/include/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:../../source/include/core_cm3.h ****  */
 885:../../source/include/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:../../source/include/core_cm3.h **** 
 887:../../source/include/core_cm3.h **** /**
 888:../../source/include/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:../../source/include/core_cm3.h ****  *
 890:../../source/include/core_cm3.h ****  * @param   priMask  PriMask
 891:../../source/include/core_cm3.h ****  *
 892:../../source/include/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:../../source/include/core_cm3.h ****  */
 894:../../source/include/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:../../source/include/core_cm3.h **** 
 896:../../source/include/core_cm3.h **** /**
 897:../../source/include/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:../../source/include/core_cm3.h ****  *
 899:../../source/include/core_cm3.h ****  * @return FaultMask
 900:../../source/include/core_cm3.h ****  *
 901:../../source/include/core_cm3.h ****  * Return the content of the fault mask register
 902:../../source/include/core_cm3.h ****  */
 903:../../source/include/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:../../source/include/core_cm3.h **** 
 905:../../source/include/core_cm3.h **** /**
 906:../../source/include/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:../../source/include/core_cm3.h ****  *
 908:../../source/include/core_cm3.h ****  * @param  faultMask faultMask value
 909:../../source/include/core_cm3.h ****  *
 910:../../source/include/core_cm3.h ****  * Set the fault mask register
 911:../../source/include/core_cm3.h ****  */
 912:../../source/include/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:../../source/include/core_cm3.h **** 
 914:../../source/include/core_cm3.h **** /**
 915:../../source/include/core_cm3.h ****  * @brief  Return the Control Register value
 916:../../source/include/core_cm3.h ****  * 
 917:../../source/include/core_cm3.h ****  * @return Control value
 918:../../source/include/core_cm3.h ****  *
 919:../../source/include/core_cm3.h ****  * Return the content of the control register
 920:../../source/include/core_cm3.h ****  */
 921:../../source/include/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:../../source/include/core_cm3.h **** 
 923:../../source/include/core_cm3.h **** /**
 924:../../source/include/core_cm3.h ****  * @brief  Set the Control Register value
 925:../../source/include/core_cm3.h ****  *
 926:../../source/include/core_cm3.h ****  * @param  control  Control value
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 25


 927:../../source/include/core_cm3.h ****  *
 928:../../source/include/core_cm3.h ****  * Set the control register
 929:../../source/include/core_cm3.h ****  */
 930:../../source/include/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:../../source/include/core_cm3.h **** 
 932:../../source/include/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:../../source/include/core_cm3.h **** 
 934:../../source/include/core_cm3.h **** /**
 935:../../source/include/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:../../source/include/core_cm3.h ****  *
 937:../../source/include/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:../../source/include/core_cm3.h ****  */
 939:../../source/include/core_cm3.h **** #define __CLREX                           __clrex
 940:../../source/include/core_cm3.h **** 
 941:../../source/include/core_cm3.h **** /**
 942:../../source/include/core_cm3.h ****  * @brief  Return the Base Priority value
 943:../../source/include/core_cm3.h ****  *
 944:../../source/include/core_cm3.h ****  * @return BasePriority
 945:../../source/include/core_cm3.h ****  *
 946:../../source/include/core_cm3.h ****  * Return the content of the base priority register
 947:../../source/include/core_cm3.h ****  */
 948:../../source/include/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:../../source/include/core_cm3.h **** {
 950:../../source/include/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:../../source/include/core_cm3.h ****   return(__regBasePri);
 952:../../source/include/core_cm3.h **** }
 953:../../source/include/core_cm3.h **** 
 954:../../source/include/core_cm3.h **** /**
 955:../../source/include/core_cm3.h ****  * @brief  Set the Base Priority value
 956:../../source/include/core_cm3.h ****  *
 957:../../source/include/core_cm3.h ****  * @param  basePri  BasePriority
 958:../../source/include/core_cm3.h ****  *
 959:../../source/include/core_cm3.h ****  * Set the base priority register
 960:../../source/include/core_cm3.h ****  */
 961:../../source/include/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:../../source/include/core_cm3.h **** {
 963:../../source/include/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:../../source/include/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:../../source/include/core_cm3.h **** }
 966:../../source/include/core_cm3.h **** 
 967:../../source/include/core_cm3.h **** /**
 968:../../source/include/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:../../source/include/core_cm3.h ****  *
 970:../../source/include/core_cm3.h ****  * @return PriMask
 971:../../source/include/core_cm3.h ****  *
 972:../../source/include/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:../../source/include/core_cm3.h ****  */
 974:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:../../source/include/core_cm3.h **** {
 976:../../source/include/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:../../source/include/core_cm3.h ****   return(__regPriMask);
 978:../../source/include/core_cm3.h **** }
 979:../../source/include/core_cm3.h **** 
 980:../../source/include/core_cm3.h **** /**
 981:../../source/include/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:../../source/include/core_cm3.h ****  *
 983:../../source/include/core_cm3.h ****  * @param  priMask  PriMask
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 26


 984:../../source/include/core_cm3.h ****  *
 985:../../source/include/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:../../source/include/core_cm3.h ****  */
 987:../../source/include/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:../../source/include/core_cm3.h **** {
 989:../../source/include/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:../../source/include/core_cm3.h ****   __regPriMask = (priMask);
 991:../../source/include/core_cm3.h **** }
 992:../../source/include/core_cm3.h **** 
 993:../../source/include/core_cm3.h **** /**
 994:../../source/include/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:../../source/include/core_cm3.h ****  *
 996:../../source/include/core_cm3.h ****  * @return FaultMask
 997:../../source/include/core_cm3.h ****  *
 998:../../source/include/core_cm3.h ****  * Return the content of the fault mask register
 999:../../source/include/core_cm3.h ****  */
1000:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:../../source/include/core_cm3.h **** {
1002:../../source/include/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:../../source/include/core_cm3.h ****   return(__regFaultMask);
1004:../../source/include/core_cm3.h **** }
1005:../../source/include/core_cm3.h **** 
1006:../../source/include/core_cm3.h **** /**
1007:../../source/include/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:../../source/include/core_cm3.h ****  *
1009:../../source/include/core_cm3.h ****  * @param  faultMask  faultMask value
1010:../../source/include/core_cm3.h ****  *
1011:../../source/include/core_cm3.h ****  * Set the fault mask register
1012:../../source/include/core_cm3.h ****  */
1013:../../source/include/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:../../source/include/core_cm3.h **** {
1015:../../source/include/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:../../source/include/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:../../source/include/core_cm3.h **** }
1018:../../source/include/core_cm3.h **** 
1019:../../source/include/core_cm3.h **** /**
1020:../../source/include/core_cm3.h ****  * @brief  Return the Control Register value
1021:../../source/include/core_cm3.h ****  * 
1022:../../source/include/core_cm3.h ****  * @return Control value
1023:../../source/include/core_cm3.h ****  *
1024:../../source/include/core_cm3.h ****  * Return the content of the control register
1025:../../source/include/core_cm3.h ****  */
1026:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:../../source/include/core_cm3.h **** {
1028:../../source/include/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:../../source/include/core_cm3.h ****   return(__regControl);
1030:../../source/include/core_cm3.h **** }
1031:../../source/include/core_cm3.h **** 
1032:../../source/include/core_cm3.h **** /**
1033:../../source/include/core_cm3.h ****  * @brief  Set the Control Register value
1034:../../source/include/core_cm3.h ****  *
1035:../../source/include/core_cm3.h ****  * @param  control  Control value
1036:../../source/include/core_cm3.h ****  *
1037:../../source/include/core_cm3.h ****  * Set the control register
1038:../../source/include/core_cm3.h ****  */
1039:../../source/include/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:../../source/include/core_cm3.h **** {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 27


1041:../../source/include/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:../../source/include/core_cm3.h ****   __regControl = control;
1043:../../source/include/core_cm3.h **** }
1044:../../source/include/core_cm3.h **** 
1045:../../source/include/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:../../source/include/core_cm3.h **** 
1047:../../source/include/core_cm3.h **** 
1048:../../source/include/core_cm3.h **** 
1049:../../source/include/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:../../source/include/core_cm3.h **** /* IAR iccarm specific functions */
1051:../../source/include/core_cm3.h **** 
1052:../../source/include/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:../../source/include/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:../../source/include/core_cm3.h **** 
1055:../../source/include/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:../../source/include/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:../../source/include/core_cm3.h **** 
1058:../../source/include/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:../../source/include/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:../../source/include/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:../../source/include/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:../../source/include/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:../../source/include/core_cm3.h **** 
1064:../../source/include/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:../../source/include/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:../../source/include/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:../../source/include/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:../../source/include/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:../../source/include/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:../../source/include/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:../../source/include/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:../../source/include/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:../../source/include/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:../../source/include/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:../../source/include/core_cm3.h **** 
1076:../../source/include/core_cm3.h **** 
1077:../../source/include/core_cm3.h **** /**
1078:../../source/include/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:../../source/include/core_cm3.h ****  *
1080:../../source/include/core_cm3.h ****  * @return ProcessStackPointer
1081:../../source/include/core_cm3.h ****  *
1082:../../source/include/core_cm3.h ****  * Return the actual process stack pointer
1083:../../source/include/core_cm3.h ****  */
1084:../../source/include/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:../../source/include/core_cm3.h **** 
1086:../../source/include/core_cm3.h **** /**
1087:../../source/include/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:../../source/include/core_cm3.h ****  *
1089:../../source/include/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:../../source/include/core_cm3.h ****  *
1091:../../source/include/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:../../source/include/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:../../source/include/core_cm3.h ****  */
1094:../../source/include/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:../../source/include/core_cm3.h **** 
1096:../../source/include/core_cm3.h **** /**
1097:../../source/include/core_cm3.h ****  * @brief  Return the Main Stack Pointer
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 28


1098:../../source/include/core_cm3.h ****  *
1099:../../source/include/core_cm3.h ****  * @return Main Stack Pointer
1100:../../source/include/core_cm3.h ****  *
1101:../../source/include/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:../../source/include/core_cm3.h ****  * Cortex processor register
1103:../../source/include/core_cm3.h ****  */
1104:../../source/include/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:../../source/include/core_cm3.h **** 
1106:../../source/include/core_cm3.h **** /**
1107:../../source/include/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:../../source/include/core_cm3.h ****  *
1109:../../source/include/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:../../source/include/core_cm3.h ****  *
1111:../../source/include/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:../../source/include/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:../../source/include/core_cm3.h ****  */
1114:../../source/include/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:../../source/include/core_cm3.h **** 
1116:../../source/include/core_cm3.h **** /**
1117:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:../../source/include/core_cm3.h ****  *
1119:../../source/include/core_cm3.h ****  * @param  value  value to reverse
1120:../../source/include/core_cm3.h ****  * @return        reversed value
1121:../../source/include/core_cm3.h ****  *
1122:../../source/include/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:../../source/include/core_cm3.h ****  */
1124:../../source/include/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:../../source/include/core_cm3.h **** 
1126:../../source/include/core_cm3.h **** /**
1127:../../source/include/core_cm3.h ****  * @brief  Reverse bit order of value
1128:../../source/include/core_cm3.h ****  *
1129:../../source/include/core_cm3.h ****  * @param  value  value to reverse
1130:../../source/include/core_cm3.h ****  * @return        reversed value
1131:../../source/include/core_cm3.h ****  *
1132:../../source/include/core_cm3.h ****  * Reverse bit order of value
1133:../../source/include/core_cm3.h ****  */
1134:../../source/include/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:../../source/include/core_cm3.h **** 
1136:../../source/include/core_cm3.h **** /**
1137:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:../../source/include/core_cm3.h ****  *
1139:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1140:../../source/include/core_cm3.h ****  * @return        value of (*address)
1141:../../source/include/core_cm3.h ****  *
1142:../../source/include/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:../../source/include/core_cm3.h ****  */
1144:../../source/include/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:../../source/include/core_cm3.h **** 
1146:../../source/include/core_cm3.h **** /**
1147:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:../../source/include/core_cm3.h ****  *
1149:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1150:../../source/include/core_cm3.h ****  * @return        value of (*address)
1151:../../source/include/core_cm3.h ****  *
1152:../../source/include/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:../../source/include/core_cm3.h ****  */
1154:../../source/include/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 29


1155:../../source/include/core_cm3.h **** 
1156:../../source/include/core_cm3.h **** /**
1157:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:../../source/include/core_cm3.h ****  *
1159:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1160:../../source/include/core_cm3.h ****  * @return        value of (*address)
1161:../../source/include/core_cm3.h ****  *
1162:../../source/include/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:../../source/include/core_cm3.h ****  */
1164:../../source/include/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:../../source/include/core_cm3.h **** 
1166:../../source/include/core_cm3.h **** /**
1167:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:../../source/include/core_cm3.h ****  *
1169:../../source/include/core_cm3.h ****  * @param  value  value to store
1170:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1171:../../source/include/core_cm3.h ****  * @return        successful / failed
1172:../../source/include/core_cm3.h ****  *
1173:../../source/include/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:../../source/include/core_cm3.h ****  */
1175:../../source/include/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:../../source/include/core_cm3.h **** 
1177:../../source/include/core_cm3.h **** /**
1178:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:../../source/include/core_cm3.h ****  *
1180:../../source/include/core_cm3.h ****  * @param  value  value to store
1181:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1182:../../source/include/core_cm3.h ****  * @return        successful / failed
1183:../../source/include/core_cm3.h ****  *
1184:../../source/include/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:../../source/include/core_cm3.h ****  */
1186:../../source/include/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:../../source/include/core_cm3.h **** 
1188:../../source/include/core_cm3.h **** /**
1189:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:../../source/include/core_cm3.h ****  *
1191:../../source/include/core_cm3.h ****  * @param  value  value to store
1192:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1193:../../source/include/core_cm3.h ****  * @return        successful / failed
1194:../../source/include/core_cm3.h ****  *
1195:../../source/include/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:../../source/include/core_cm3.h ****  */
1197:../../source/include/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:../../source/include/core_cm3.h **** 
1199:../../source/include/core_cm3.h **** 
1200:../../source/include/core_cm3.h **** 
1201:../../source/include/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:../../source/include/core_cm3.h **** /* GNU gcc specific functions */
1203:../../source/include/core_cm3.h **** 
1204:../../source/include/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:../../source/include/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:../../source/include/core_cm3.h **** 
1207:../../source/include/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:../../source/include/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:../../source/include/core_cm3.h **** 
1210:../../source/include/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:../../source/include/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 30


1212:../../source/include/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 221              		.loc 2 1212 0
 222              		.syntax unified
 223              	@ 1212 "../../source/include/core_cm3.h" 1
 224 0072 20BF     		wfe
 225              	@ 0 "" 2
 226              		.thumb
 227              		.syntax unified
 228              	.L17:
 229              	.LBE9:
 230              	.LBE8:
 217:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {   
 218:../../source/src/FWlib/src/stm32f10x_pwr.c ****     /* Request Wait For Interrupt */
 219:../../source/src/FWlib/src/stm32f10x_pwr.c ****     __WFI();
 220:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 221:../../source/src/FWlib/src/stm32f10x_pwr.c ****   else
 222:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 223:../../source/src/FWlib/src/stm32f10x_pwr.c ****     /* Request Wait For Event */
 224:../../source/src/FWlib/src/stm32f10x_pwr.c ****     __WFE();
 225:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 226:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 227:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 228:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP);  
 231              		.loc 1 228 0
 232 0074 054A     		ldr	r2, .L19+4
 229:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 233              		.loc 1 229 0
 234 0076 10BC     		pop	{r4}
 235              	.LCFI3:
 236              		.cfi_remember_state
 237              		.cfi_restore 4
 238              		.cfi_def_cfa_offset 0
 228:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 239              		.loc 1 228 0
 240 0078 1369     		ldr	r3, [r2, #16]
 241 007a 23F00403 		bic	r3, r3, #4
 242 007e 1361     		str	r3, [r2, #16]
 243              		.loc 1 229 0
 244 0080 7047     		bx	lr
 245              	.L18:
 246              	.LCFI4:
 247              		.cfi_restore_state
 248              	.LBB10:
 249              	.LBB11:
1211:../../source/include/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 250              		.loc 2 1211 0
 251              		.syntax unified
 252              	@ 1211 "../../source/include/core_cm3.h" 1
 253 0082 30BF     		wfi
 254              	@ 0 "" 2
 255              		.thumb
 256              		.syntax unified
 257 0084 F6E7     		b	.L17
 258              	.L20:
 259 0086 00BF     		.align	2
 260              	.L19:
 261 0088 00700040 		.word	1073770496
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 31


 262 008c 00ED00E0 		.word	-536810240
 263              	.LBE11:
 264              	.LBE10:
 265              		.cfi_endproc
 266              	.LFE34:
 267              		.size	PWR_EnterSTOPMode, .-PWR_EnterSTOPMode
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	PWR_EnterSTANDBYMode
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu softvfp
 275              		.type	PWR_EnterSTANDBYMode, %function
 276              	PWR_EnterSTANDBYMode:
 277              	.LFB35:
 230:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 231:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 232:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enters STANDBY mode.
 233:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  None
 234:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 235:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 236:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_EnterSTANDBYMode(void)
 237:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 278              		.loc 1 237 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 238:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear Wake-up flag */
 239:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_CWUF;
 283              		.loc 1 239 0
 284 0090 074B     		ldr	r3, .L22
 240:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select STANDBY mode */
 241:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 242:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 243:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 285              		.loc 1 243 0
 286 0092 0849     		ldr	r1, .L22+4
 239:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select STANDBY mode */
 287              		.loc 1 239 0
 288 0094 1A68     		ldr	r2, [r3]
 289 0096 42F00402 		orr	r2, r2, #4
 290 009a 1A60     		str	r2, [r3]
 241:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 291              		.loc 1 241 0
 292 009c 1A68     		ldr	r2, [r3]
 293 009e 42F00202 		orr	r2, r2, #2
 294 00a2 1A60     		str	r2, [r3]
 295              		.loc 1 243 0
 296 00a4 0B69     		ldr	r3, [r1, #16]
 297 00a6 43F00403 		orr	r3, r3, #4
 298 00aa 0B61     		str	r3, [r1, #16]
 299              	.LBB12:
 300              	.LBB13:
1211:../../source/include/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 301              		.loc 2 1211 0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 32


 302              		.syntax unified
 303              	@ 1211 "../../source/include/core_cm3.h" 1
 304 00ac 30BF     		wfi
 305              	@ 0 "" 2
 306              		.thumb
 307              		.syntax unified
 308              	.LBE13:
 309              	.LBE12:
 244:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* This option is used to ensure that store operations are completed */
 245:../../source/src/FWlib/src/stm32f10x_pwr.c **** #if defined ( __CC_ARM   )
 246:../../source/src/FWlib/src/stm32f10x_pwr.c ****   __force_stores();
 247:../../source/src/FWlib/src/stm32f10x_pwr.c **** #endif
 248:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Request Wait For Interrupt */
 249:../../source/src/FWlib/src/stm32f10x_pwr.c ****   __WFI();
 250:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 310              		.loc 1 250 0
 311 00ae 7047     		bx	lr
 312              	.L23:
 313              		.align	2
 314              	.L22:
 315 00b0 00700040 		.word	1073770496
 316 00b4 00ED00E0 		.word	-536810240
 317              		.cfi_endproc
 318              	.LFE35:
 319              		.size	PWR_EnterSTANDBYMode, .-PWR_EnterSTANDBYMode
 320              		.align	1
 321              		.p2align 2,,3
 322              		.global	PWR_GetFlagStatus
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu softvfp
 327              		.type	PWR_GetFlagStatus, %function
 328              	PWR_GetFlagStatus:
 329              	.LFB36:
 251:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 252:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 253:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 254:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 255:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 256:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 257:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 258:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_PVDO: PVD Output
 259:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 260:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 261:../../source/src/FWlib/src/stm32f10x_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
 262:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 330              		.loc 1 262 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL13:
 263:../../source/src/FWlib/src/stm32f10x_pwr.c ****   FlagStatus bitstatus = RESET;
 264:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 265:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
 266:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 33


 267:../../source/src/FWlib/src/stm32f10x_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 336              		.loc 1 267 0
 337 00b8 034B     		ldr	r3, .L25
 338 00ba 5B68     		ldr	r3, [r3, #4]
 339              	.LVL14:
 340 00bc 0342     		tst	r3, r0
 268:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 269:../../source/src/FWlib/src/stm32f10x_pwr.c ****     bitstatus = SET;
 270:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 271:../../source/src/FWlib/src/stm32f10x_pwr.c ****   else
 272:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 273:../../source/src/FWlib/src/stm32f10x_pwr.c ****     bitstatus = RESET;
 274:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 275:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Return the flag status */
 276:../../source/src/FWlib/src/stm32f10x_pwr.c ****   return bitstatus;
 277:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 341              		.loc 1 277 0
 342 00be 14BF     		ite	ne
 343 00c0 0120     		movne	r0, #1
 344              	.LVL15:
 345 00c2 0020     		moveq	r0, #0
 346 00c4 7047     		bx	lr
 347              	.L26:
 348 00c6 00BF     		.align	2
 349              	.L25:
 350 00c8 00700040 		.word	1073770496
 351              		.cfi_endproc
 352              	.LFE36:
 353              		.size	PWR_GetFlagStatus, .-PWR_GetFlagStatus
 354              		.align	1
 355              		.p2align 2,,3
 356              		.global	PWR_ClearFlag
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu softvfp
 361              		.type	PWR_ClearFlag, %function
 362              	PWR_ClearFlag:
 363              	.LFB37:
 278:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 279:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 280:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Clears the PWR's pending flags.
 281:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 282:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 283:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 284:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 285:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 286:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 287:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 288:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 364              		.loc 1 288 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.LVL16:
 289:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 34


 290:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 291:../../source/src/FWlib/src/stm32f10x_pwr.c ****          
 292:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 370              		.loc 1 292 0
 371 00cc 024A     		ldr	r2, .L28
 372 00ce 1368     		ldr	r3, [r2]
 373 00d0 43EA8000 		orr	r0, r3, r0, lsl #2
 374              	.LVL17:
 375 00d4 1060     		str	r0, [r2]
 293:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 376              		.loc 1 293 0
 377 00d6 7047     		bx	lr
 378              	.L29:
 379              		.align	2
 380              	.L28:
 381 00d8 00700040 		.word	1073770496
 382              		.cfi_endproc
 383              	.LFE37:
 384              		.size	PWR_ClearFlag, .-PWR_ClearFlag
 385              	.Letext0:
 386              		.file 3 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\machine\\_default_types.h"
 387              		.file 4 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\sys\\_stdint.h"
 388              		.file 5 "../../source/include/system_stm32f10x.h"
 389              		.file 6 "../../source/include/stm32f10x.h"
 390              		.file 7 "../../source/src/FWlib/inc/stm32f10x_rcc.h"
 391              		.section	.debug_info,"",%progbits
 392              	.Ldebug_info0:
 393 0000 EB040000 		.4byte	0x4eb
 394 0004 0200     		.2byte	0x2
 395 0006 00000000 		.4byte	.Ldebug_abbrev0
 396 000a 04       		.byte	0x4
 397 000b 01       		.uleb128 0x1
 398 000c 7C020000 		.4byte	.LASF54
 399 0010 0C       		.byte	0xc
 400 0011 36010000 		.4byte	.LASF55
 401 0015 92000000 		.4byte	.LASF56
 402 0019 00000000 		.4byte	.Ltext0
 403 001d DC000000 		.4byte	.Letext0
 404 0021 00000000 		.4byte	.Ldebug_line0
 405 0025 02       		.uleb128 0x2
 406 0026 01       		.byte	0x1
 407 0027 06       		.byte	0x6
 408 0028 61010000 		.4byte	.LASF0
 409 002c 03       		.uleb128 0x3
 410 002d F9000000 		.4byte	.LASF3
 411 0031 03       		.byte	0x3
 412 0032 2B       		.byte	0x2b
 413 0033 37000000 		.4byte	0x37
 414 0037 02       		.uleb128 0x2
 415 0038 01       		.byte	0x1
 416 0039 08       		.byte	0x8
 417 003a 19010000 		.4byte	.LASF1
 418 003e 02       		.uleb128 0x2
 419 003f 02       		.byte	0x2
 420 0040 05       		.byte	0x5
 421 0041 75000000 		.4byte	.LASF2
 422 0045 03       		.uleb128 0x3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 35


 423 0046 32000000 		.4byte	.LASF4
 424 004a 03       		.byte	0x3
 425 004b 39       		.byte	0x39
 426 004c 50000000 		.4byte	0x50
 427 0050 02       		.uleb128 0x2
 428 0051 02       		.byte	0x2
 429 0052 07       		.byte	0x7
 430 0053 CE010000 		.4byte	.LASF5
 431 0057 02       		.uleb128 0x2
 432 0058 04       		.byte	0x4
 433 0059 05       		.byte	0x5
 434 005a F0000000 		.4byte	.LASF6
 435 005e 03       		.uleb128 0x3
 436 005f 27000000 		.4byte	.LASF7
 437 0063 03       		.byte	0x3
 438 0064 4F       		.byte	0x4f
 439 0065 69000000 		.4byte	0x69
 440 0069 02       		.uleb128 0x2
 441 006a 04       		.byte	0x4
 442 006b 07       		.byte	0x7
 443 006c 43020000 		.4byte	.LASF8
 444 0070 02       		.uleb128 0x2
 445 0071 08       		.byte	0x8
 446 0072 05       		.byte	0x5
 447 0073 C0000000 		.4byte	.LASF9
 448 0077 02       		.uleb128 0x2
 449 0078 08       		.byte	0x8
 450 0079 07       		.byte	0x7
 451 007a 6D010000 		.4byte	.LASF10
 452 007e 04       		.uleb128 0x4
 453 007f 04       		.byte	0x4
 454 0080 05       		.byte	0x5
 455 0081 696E7400 		.ascii	"int\000"
 456 0085 05       		.uleb128 0x5
 457 0086 7E000000 		.4byte	0x7e
 458 008a 02       		.uleb128 0x2
 459 008b 04       		.byte	0x4
 460 008c 07       		.byte	0x7
 461 008d 8D010000 		.4byte	.LASF11
 462 0091 03       		.uleb128 0x3
 463 0092 5C000000 		.4byte	.LASF12
 464 0096 04       		.byte	0x4
 465 0097 18       		.byte	0x18
 466 0098 2C000000 		.4byte	0x2c
 467 009c 05       		.uleb128 0x5
 468 009d 91000000 		.4byte	0x91
 469 00a1 03       		.uleb128 0x3
 470 00a2 9A010000 		.4byte	.LASF13
 471 00a6 04       		.byte	0x4
 472 00a7 24       		.byte	0x24
 473 00a8 45000000 		.4byte	0x45
 474 00ac 03       		.uleb128 0x3
 475 00ad 84010000 		.4byte	.LASF14
 476 00b1 04       		.byte	0x4
 477 00b2 30       		.byte	0x30
 478 00b3 5E000000 		.4byte	0x5e
 479 00b7 05       		.uleb128 0x5
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 36


 480 00b8 AC000000 		.4byte	0xac
 481 00bc 06       		.uleb128 0x6
 482 00bd B7000000 		.4byte	0xb7
 483 00c1 07       		.uleb128 0x7
 484 00c2 74       		.byte	0x74
 485 00c3 02       		.byte	0x2
 486 00c4 9B       		.byte	0x9b
 487 00c5 D4010000 		.4byte	0x1d4
 488 00c9 08       		.uleb128 0x8
 489 00ca 3D000000 		.4byte	.LASF15
 490 00ce 02       		.byte	0x2
 491 00cf 9D       		.byte	0x9d
 492 00d0 BC000000 		.4byte	0xbc
 493 00d4 02       		.byte	0x2
 494 00d5 23       		.byte	0x23
 495 00d6 00       		.uleb128 0
 496 00d7 08       		.uleb128 0x8
 497 00d8 8D000000 		.4byte	.LASF16
 498 00dc 02       		.byte	0x2
 499 00dd 9E       		.byte	0x9e
 500 00de B7000000 		.4byte	0xb7
 501 00e2 02       		.byte	0x2
 502 00e3 23       		.byte	0x23
 503 00e4 04       		.uleb128 0x4
 504 00e5 08       		.uleb128 0x8
 505 00e6 EF010000 		.4byte	.LASF17
 506 00ea 02       		.byte	0x2
 507 00eb 9F       		.byte	0x9f
 508 00ec B7000000 		.4byte	0xb7
 509 00f0 02       		.byte	0x2
 510 00f1 23       		.byte	0x23
 511 00f2 08       		.uleb128 0x8
 512 00f3 08       		.uleb128 0x8
 513 00f4 27010000 		.4byte	.LASF18
 514 00f8 02       		.byte	0x2
 515 00f9 A0       		.byte	0xa0
 516 00fa B7000000 		.4byte	0xb7
 517 00fe 02       		.byte	0x2
 518 00ff 23       		.byte	0x23
 519 0100 0C       		.uleb128 0xc
 520 0101 09       		.uleb128 0x9
 521 0102 53435200 		.ascii	"SCR\000"
 522 0106 02       		.byte	0x2
 523 0107 A1       		.byte	0xa1
 524 0108 B7000000 		.4byte	0xb7
 525 010c 02       		.byte	0x2
 526 010d 23       		.byte	0x23
 527 010e 10       		.uleb128 0x10
 528 010f 09       		.uleb128 0x9
 529 0110 43435200 		.ascii	"CCR\000"
 530 0114 02       		.byte	0x2
 531 0115 A2       		.byte	0xa2
 532 0116 B7000000 		.4byte	0xb7
 533 011a 02       		.byte	0x2
 534 011b 23       		.byte	0x23
 535 011c 14       		.uleb128 0x14
 536 011d 09       		.uleb128 0x9
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 37


 537 011e 53485000 		.ascii	"SHP\000"
 538 0122 02       		.byte	0x2
 539 0123 A3       		.byte	0xa3
 540 0124 E4010000 		.4byte	0x1e4
 541 0128 02       		.byte	0x2
 542 0129 23       		.byte	0x23
 543 012a 18       		.uleb128 0x18
 544 012b 08       		.uleb128 0x8
 545 012c A3010000 		.4byte	.LASF19
 546 0130 02       		.byte	0x2
 547 0131 A4       		.byte	0xa4
 548 0132 B7000000 		.4byte	0xb7
 549 0136 02       		.byte	0x2
 550 0137 23       		.byte	0x23
 551 0138 24       		.uleb128 0x24
 552 0139 08       		.uleb128 0x8
 553 013a 03010000 		.4byte	.LASF20
 554 013e 02       		.byte	0x2
 555 013f A5       		.byte	0xa5
 556 0140 B7000000 		.4byte	0xb7
 557 0144 02       		.byte	0x2
 558 0145 23       		.byte	0x23
 559 0146 28       		.uleb128 0x28
 560 0147 08       		.uleb128 0x8
 561 0148 19020000 		.4byte	.LASF21
 562 014c 02       		.byte	0x2
 563 014d A6       		.byte	0xa6
 564 014e B7000000 		.4byte	0xb7
 565 0152 02       		.byte	0x2
 566 0153 23       		.byte	0x23
 567 0154 2C       		.uleb128 0x2c
 568 0155 08       		.uleb128 0x8
 569 0156 F9010000 		.4byte	.LASF22
 570 015a 02       		.byte	0x2
 571 015b A7       		.byte	0xa7
 572 015c B7000000 		.4byte	0xb7
 573 0160 02       		.byte	0x2
 574 0161 23       		.byte	0x23
 575 0162 30       		.uleb128 0x30
 576 0163 08       		.uleb128 0x8
 577 0164 B7010000 		.4byte	.LASF23
 578 0168 02       		.byte	0x2
 579 0169 A8       		.byte	0xa8
 580 016a B7000000 		.4byte	0xb7
 581 016e 02       		.byte	0x2
 582 016f 23       		.byte	0x23
 583 0170 34       		.uleb128 0x34
 584 0171 08       		.uleb128 0x8
 585 0172 57000000 		.4byte	.LASF24
 586 0176 02       		.byte	0x2
 587 0177 A9       		.byte	0xa9
 588 0178 B7000000 		.4byte	0xb7
 589 017c 02       		.byte	0x2
 590 017d 23       		.byte	0x23
 591 017e 38       		.uleb128 0x38
 592 017f 08       		.uleb128 0x8
 593 0180 77020000 		.4byte	.LASF25
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 38


 594 0184 02       		.byte	0x2
 595 0185 AA       		.byte	0xaa
 596 0186 B7000000 		.4byte	0xb7
 597 018a 02       		.byte	0x2
 598 018b 23       		.byte	0x23
 599 018c 3C       		.uleb128 0x3c
 600 018d 09       		.uleb128 0x9
 601 018e 50465200 		.ascii	"PFR\000"
 602 0192 02       		.byte	0x2
 603 0193 AB       		.byte	0xab
 604 0194 FE010000 		.4byte	0x1fe
 605 0198 02       		.byte	0x2
 606 0199 23       		.byte	0x23
 607 019a 40       		.uleb128 0x40
 608 019b 09       		.uleb128 0x9
 609 019c 44465200 		.ascii	"DFR\000"
 610 01a0 02       		.byte	0x2
 611 01a1 AC       		.byte	0xac
 612 01a2 BC000000 		.4byte	0xbc
 613 01a6 02       		.byte	0x2
 614 01a7 23       		.byte	0x23
 615 01a8 48       		.uleb128 0x48
 616 01a9 09       		.uleb128 0x9
 617 01aa 41445200 		.ascii	"ADR\000"
 618 01ae 02       		.byte	0x2
 619 01af AD       		.byte	0xad
 620 01b0 BC000000 		.4byte	0xbc
 621 01b4 02       		.byte	0x2
 622 01b5 23       		.byte	0x23
 623 01b6 4C       		.uleb128 0x4c
 624 01b7 08       		.uleb128 0x8
 625 01b8 1E020000 		.4byte	.LASF26
 626 01bc 02       		.byte	0x2
 627 01bd AE       		.byte	0xae
 628 01be 18020000 		.4byte	0x218
 629 01c2 02       		.byte	0x2
 630 01c3 23       		.byte	0x23
 631 01c4 50       		.uleb128 0x50
 632 01c5 08       		.uleb128 0x8
 633 01c6 F4010000 		.4byte	.LASF27
 634 01ca 02       		.byte	0x2
 635 01cb AF       		.byte	0xaf
 636 01cc 32020000 		.4byte	0x232
 637 01d0 02       		.byte	0x2
 638 01d1 23       		.byte	0x23
 639 01d2 60       		.uleb128 0x60
 640 01d3 00       		.byte	0
 641 01d4 0A       		.uleb128 0xa
 642 01d5 9C000000 		.4byte	0x9c
 643 01d9 E4010000 		.4byte	0x1e4
 644 01dd 0B       		.uleb128 0xb
 645 01de 8A000000 		.4byte	0x8a
 646 01e2 0B       		.byte	0xb
 647 01e3 00       		.byte	0
 648 01e4 05       		.uleb128 0x5
 649 01e5 D4010000 		.4byte	0x1d4
 650 01e9 0A       		.uleb128 0xa
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 39


 651 01ea BC000000 		.4byte	0xbc
 652 01ee F9010000 		.4byte	0x1f9
 653 01f2 0B       		.uleb128 0xb
 654 01f3 8A000000 		.4byte	0x8a
 655 01f7 01       		.byte	0x1
 656 01f8 00       		.byte	0
 657 01f9 06       		.uleb128 0x6
 658 01fa E9010000 		.4byte	0x1e9
 659 01fe 05       		.uleb128 0x5
 660 01ff F9010000 		.4byte	0x1f9
 661 0203 0A       		.uleb128 0xa
 662 0204 BC000000 		.4byte	0xbc
 663 0208 13020000 		.4byte	0x213
 664 020c 0B       		.uleb128 0xb
 665 020d 8A000000 		.4byte	0x8a
 666 0211 03       		.byte	0x3
 667 0212 00       		.byte	0
 668 0213 06       		.uleb128 0x6
 669 0214 03020000 		.4byte	0x203
 670 0218 05       		.uleb128 0x5
 671 0219 13020000 		.4byte	0x213
 672 021d 0A       		.uleb128 0xa
 673 021e BC000000 		.4byte	0xbc
 674 0222 2D020000 		.4byte	0x22d
 675 0226 0B       		.uleb128 0xb
 676 0227 8A000000 		.4byte	0x8a
 677 022b 04       		.byte	0x4
 678 022c 00       		.byte	0
 679 022d 06       		.uleb128 0x6
 680 022e 1D020000 		.4byte	0x21d
 681 0232 05       		.uleb128 0x5
 682 0233 2D020000 		.4byte	0x22d
 683 0237 03       		.uleb128 0x3
 684 0238 2D010000 		.4byte	.LASF28
 685 023c 02       		.byte	0x2
 686 023d B0       		.byte	0xb0
 687 023e C1000000 		.4byte	0xc1
 688 0242 0C       		.uleb128 0xc
 689 0243 37030000 		.4byte	.LASF29
 690 0247 02       		.byte	0x2
 691 0248 CE06     		.2byte	0x6ce
 692 024a 85000000 		.4byte	0x85
 693 024e 01       		.byte	0x1
 694 024f 01       		.byte	0x1
 695 0250 0D       		.uleb128 0xd
 696 0251 09020000 		.4byte	.LASF30
 697 0255 05       		.byte	0x5
 698 0256 35       		.byte	0x35
 699 0257 AC000000 		.4byte	0xac
 700 025b 01       		.byte	0x1
 701 025c 01       		.byte	0x1
 702 025d 0E       		.uleb128 0xe
 703 025e 07       		.byte	0x7
 704 025f 01       		.byte	0x1
 705 0260 37000000 		.4byte	0x37
 706 0264 06       		.byte	0x6
 707 0265 0702     		.2byte	0x207
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 40


 708 0267 78020000 		.4byte	0x278
 709 026b 0F       		.uleb128 0xf
 710 026c 65020000 		.4byte	.LASF31
 711 0270 00       		.byte	0
 712 0271 10       		.uleb128 0x10
 713 0272 53455400 		.ascii	"SET\000"
 714 0276 01       		.byte	0x1
 715 0277 00       		.byte	0
 716 0278 11       		.uleb128 0x11
 717 0279 44030000 		.4byte	.LASF32
 718 027d 06       		.byte	0x6
 719 027e 0702     		.2byte	0x207
 720 0280 5D020000 		.4byte	0x25d
 721 0284 0E       		.uleb128 0xe
 722 0285 07       		.byte	0x7
 723 0286 01       		.byte	0x1
 724 0287 37000000 		.4byte	0x37
 725 028b 06       		.byte	0x6
 726 028c 0902     		.2byte	0x209
 727 028e 9F020000 		.4byte	0x29f
 728 0292 0F       		.uleb128 0xf
 729 0293 6D000000 		.4byte	.LASF33
 730 0297 00       		.byte	0
 731 0298 0F       		.uleb128 0xf
 732 0299 4F030000 		.4byte	.LASF34
 733 029d 01       		.byte	0x1
 734 029e 00       		.byte	0
 735 029f 11       		.uleb128 0x11
 736 02a0 55020000 		.4byte	.LASF35
 737 02a4 06       		.byte	0x6
 738 02a5 0902     		.2byte	0x209
 739 02a7 84020000 		.4byte	0x284
 740 02ab 12       		.uleb128 0x12
 741 02ac 08       		.byte	0x8
 742 02ad 06       		.byte	0x6
 743 02ae 2A04     		.2byte	0x42a
 744 02b0 D2020000 		.4byte	0x2d2
 745 02b4 13       		.uleb128 0x13
 746 02b5 435200   		.ascii	"CR\000"
 747 02b8 06       		.byte	0x6
 748 02b9 2C04     		.2byte	0x42c
 749 02bb B7000000 		.4byte	0xb7
 750 02bf 02       		.byte	0x2
 751 02c0 23       		.byte	0x23
 752 02c1 00       		.uleb128 0
 753 02c2 13       		.uleb128 0x13
 754 02c3 43535200 		.ascii	"CSR\000"
 755 02c7 06       		.byte	0x6
 756 02c8 2D04     		.2byte	0x42d
 757 02ca B7000000 		.4byte	0xb7
 758 02ce 02       		.byte	0x2
 759 02cf 23       		.byte	0x23
 760 02d0 04       		.uleb128 0x4
 761 02d1 00       		.byte	0
 762 02d2 11       		.uleb128 0x11
 763 02d3 1B000000 		.4byte	.LASF36
 764 02d7 06       		.byte	0x6
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 41


 765 02d8 2E04     		.2byte	0x42e
 766 02da AB020000 		.4byte	0x2ab
 767 02de 14       		.uleb128 0x14
 768 02df 01       		.byte	0x1
 769 02e0 7F000000 		.4byte	.LASF38
 770 02e4 01       		.byte	0x1
 771 02e5 1F01     		.2byte	0x11f
 772 02e7 01       		.byte	0x1
 773 02e8 CC000000 		.4byte	.LFB37
 774 02ec DC000000 		.4byte	.LFE37
 775 02f0 02       		.byte	0x2
 776 02f1 7D       		.byte	0x7d
 777 02f2 00       		.sleb128 0
 778 02f3 01       		.byte	0x1
 779 02f4 09030000 		.4byte	0x309
 780 02f8 15       		.uleb128 0x15
 781 02f9 12000000 		.4byte	.LASF37
 782 02fd 01       		.byte	0x1
 783 02fe 1F01     		.2byte	0x11f
 784 0300 AC000000 		.4byte	0xac
 785 0304 00000000 		.4byte	.LLST8
 786 0308 00       		.byte	0
 787 0309 16       		.uleb128 0x16
 788 030a 01       		.byte	0x1
 789 030b 56030000 		.4byte	.LASF57
 790 030f 01       		.byte	0x1
 791 0310 0501     		.2byte	0x105
 792 0312 01       		.byte	0x1
 793 0313 78020000 		.4byte	0x278
 794 0317 B8000000 		.4byte	.LFB36
 795 031b CC000000 		.4byte	.LFE36
 796 031f 02       		.byte	0x2
 797 0320 7D       		.byte	0x7d
 798 0321 00       		.sleb128 0
 799 0322 01       		.byte	0x1
 800 0323 48030000 		.4byte	0x348
 801 0327 15       		.uleb128 0x15
 802 0328 12000000 		.4byte	.LASF37
 803 032c 01       		.byte	0x1
 804 032d 0501     		.2byte	0x105
 805 032f AC000000 		.4byte	0xac
 806 0333 21000000 		.4byte	.LLST6
 807 0337 17       		.uleb128 0x17
 808 0338 0F010000 		.4byte	.LASF43
 809 033c 01       		.byte	0x1
 810 033d 0701     		.2byte	0x107
 811 033f 78020000 		.4byte	0x278
 812 0343 42000000 		.4byte	.LLST7
 813 0347 00       		.byte	0
 814 0348 18       		.uleb128 0x18
 815 0349 01       		.byte	0x1
 816 034a 22030000 		.4byte	.LASF39
 817 034e 01       		.byte	0x1
 818 034f EC       		.byte	0xec
 819 0350 01       		.byte	0x1
 820 0351 90000000 		.4byte	.LFB35
 821 0355 B8000000 		.4byte	.LFE35
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 42


 822 0359 02       		.byte	0x2
 823 035a 7D       		.byte	0x7d
 824 035b 00       		.sleb128 0
 825 035c 01       		.byte	0x1
 826 035d 71030000 		.4byte	0x371
 827 0361 19       		.uleb128 0x19
 828 0362 D7040000 		.4byte	0x4d7
 829 0366 AC000000 		.4byte	.LBB12
 830 036a AE000000 		.4byte	.LBE12
 831 036e 01       		.byte	0x1
 832 036f F9       		.byte	0xf9
 833 0370 00       		.byte	0
 834 0371 1A       		.uleb128 0x1a
 835 0372 01       		.byte	0x1
 836 0373 00000000 		.4byte	.LASF40
 837 0377 01       		.byte	0x1
 838 0378 C5       		.byte	0xc5
 839 0379 01       		.byte	0x1
 840 037a 54000000 		.4byte	.LFB34
 841 037e 90000000 		.4byte	.LFE34
 842 0382 7B000000 		.4byte	.LLST3
 843 0386 01       		.byte	0x1
 844 0387 D5030000 		.4byte	0x3d5
 845 038b 1B       		.uleb128 0x1b
 846 038c E1010000 		.4byte	.LASF41
 847 0390 01       		.byte	0x1
 848 0391 C5       		.byte	0xc5
 849 0392 AC000000 		.4byte	0xac
 850 0396 B3000000 		.4byte	.LLST4
 851 039a 1C       		.uleb128 0x1c
 852 039b A9010000 		.4byte	.LASF42
 853 039f 01       		.byte	0x1
 854 03a0 C5       		.byte	0xc5
 855 03a1 91000000 		.4byte	0x91
 856 03a5 01       		.byte	0x1
 857 03a6 51       		.byte	0x51
 858 03a7 1D       		.uleb128 0x1d
 859 03a8 08010000 		.4byte	.LASF44
 860 03ac 01       		.byte	0x1
 861 03ad C7       		.byte	0xc7
 862 03ae AC000000 		.4byte	0xac
 863 03b2 D4000000 		.4byte	.LLST5
 864 03b6 19       		.uleb128 0x19
 865 03b7 CE040000 		.4byte	0x4ce
 866 03bb 72000000 		.4byte	.LBB8
 867 03bf 74000000 		.4byte	.LBE8
 868 03c3 01       		.byte	0x1
 869 03c4 E0       		.byte	0xe0
 870 03c5 19       		.uleb128 0x19
 871 03c6 D7040000 		.4byte	0x4d7
 872 03ca 82000000 		.4byte	.LBB10
 873 03ce 90000000 		.4byte	.LBE10
 874 03d2 01       		.byte	0x1
 875 03d3 DB       		.byte	0xdb
 876 03d4 00       		.byte	0
 877 03d5 18       		.uleb128 0x18
 878 03d6 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 43


 879 03d7 BD010000 		.4byte	.LASF45
 880 03db 01       		.byte	0x1
 881 03dc B2       		.byte	0xb2
 882 03dd 01       		.byte	0x1
 883 03de 48000000 		.4byte	.LFB33
 884 03e2 54000000 		.4byte	.LFE33
 885 03e6 02       		.byte	0x2
 886 03e7 7D       		.byte	0x7d
 887 03e8 00       		.sleb128 0
 888 03e9 01       		.byte	0x1
 889 03ea FC030000 		.4byte	0x3fc
 890 03ee 1C       		.uleb128 0x1c
 891 03ef 64000000 		.4byte	.LASF46
 892 03f3 01       		.byte	0x1
 893 03f4 B2       		.byte	0xb2
 894 03f5 9F020000 		.4byte	0x29f
 895 03f9 01       		.byte	0x1
 896 03fa 50       		.byte	0x50
 897 03fb 00       		.byte	0
 898 03fc 18       		.uleb128 0x18
 899 03fd 01       		.byte	0x1
 900 03fe 30020000 		.4byte	.LASF47
 901 0402 01       		.byte	0x1
 902 0403 9E       		.byte	0x9e
 903 0404 01       		.byte	0x1
 904 0405 34000000 		.4byte	.LFB32
 905 0409 48000000 		.4byte	.LFE32
 906 040d 02       		.byte	0x2
 907 040e 7D       		.byte	0x7d
 908 040f 00       		.sleb128 0
 909 0410 01       		.byte	0x1
 910 0411 34040000 		.4byte	0x434
 911 0415 1B       		.uleb128 0x1b
 912 0416 23020000 		.4byte	.LASF48
 913 041a 01       		.byte	0x1
 914 041b 9E       		.byte	0x9e
 915 041c AC000000 		.4byte	0xac
 916 0420 FE000000 		.4byte	.LLST1
 917 0424 1D       		.uleb128 0x1d
 918 0425 08010000 		.4byte	.LASF44
 919 0429 01       		.byte	0x1
 920 042a A0       		.byte	0xa0
 921 042b AC000000 		.4byte	0xac
 922 042f 1F010000 		.4byte	.LLST2
 923 0433 00       		.byte	0
 924 0434 18       		.uleb128 0x18
 925 0435 01       		.byte	0x1
 926 0436 FE010000 		.4byte	.LASF49
 927 043a 01       		.byte	0x1
 928 043b 89       		.byte	0x89
 929 043c 01       		.byte	0x1
 930 043d 28000000 		.4byte	.LFB31
 931 0441 34000000 		.4byte	.LFE31
 932 0445 02       		.byte	0x2
 933 0446 7D       		.byte	0x7d
 934 0447 00       		.sleb128 0
 935 0448 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 44


 936 0449 5B040000 		.4byte	0x45b
 937 044d 1C       		.uleb128 0x1c
 938 044e 64000000 		.4byte	.LASF46
 939 0452 01       		.byte	0x1
 940 0453 89       		.byte	0x89
 941 0454 9F020000 		.4byte	0x29f
 942 0458 01       		.byte	0x1
 943 0459 50       		.byte	0x50
 944 045a 00       		.byte	0
 945 045b 18       		.uleb128 0x18
 946 045c 01       		.byte	0x1
 947 045d 43000000 		.4byte	.LASF50
 948 0461 01       		.byte	0x1
 949 0462 7C       		.byte	0x7c
 950 0463 01       		.byte	0x1
 951 0464 1C000000 		.4byte	.LFB30
 952 0468 28000000 		.4byte	.LFE30
 953 046c 02       		.byte	0x2
 954 046d 7D       		.byte	0x7d
 955 046e 00       		.sleb128 0
 956 046f 01       		.byte	0x1
 957 0470 82040000 		.4byte	0x482
 958 0474 1C       		.uleb128 0x1c
 959 0475 64000000 		.4byte	.LASF46
 960 0479 01       		.byte	0x1
 961 047a 7C       		.byte	0x7c
 962 047b 9F020000 		.4byte	0x29f
 963 047f 01       		.byte	0x1
 964 0480 50       		.byte	0x50
 965 0481 00       		.byte	0
 966 0482 1A       		.uleb128 0x1a
 967 0483 01       		.byte	0x1
 968 0484 E5000000 		.4byte	.LASF51
 969 0488 01       		.byte	0x1
 970 0489 70       		.byte	0x70
 971 048a 01       		.byte	0x1
 972 048b 00000000 		.4byte	.LFB29
 973 048f 1A000000 		.4byte	.LFE29
 974 0493 49010000 		.4byte	.LLST0
 975 0497 01       		.byte	0x1
 976 0498 CE040000 		.4byte	0x4ce
 977 049c 1E       		.uleb128 0x1e
 978 049d 0C000000 		.4byte	.LVL0
 979 04a1 E0040000 		.4byte	0x4e0
 980 04a5 B6040000 		.4byte	0x4b6
 981 04a9 1F       		.uleb128 0x1f
 982 04aa 01       		.byte	0x1
 983 04ab 50       		.byte	0x50
 984 04ac 03       		.byte	0x3
 985 04ad 40       		.byte	0x40
 986 04ae 48       		.byte	0x48
 987 04af 24       		.byte	0x24
 988 04b0 1F       		.uleb128 0x1f
 989 04b1 01       		.byte	0x1
 990 04b2 51       		.byte	0x51
 991 04b3 01       		.byte	0x1
 992 04b4 31       		.byte	0x31
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 45


 993 04b5 00       		.byte	0
 994 04b6 20       		.uleb128 0x20
 995 04b7 1A000000 		.4byte	.LVL1
 996 04bb 01       		.byte	0x1
 997 04bc E0040000 		.4byte	0x4e0
 998 04c0 1F       		.uleb128 0x1f
 999 04c1 01       		.byte	0x1
 1000 04c2 50       		.byte	0x50
 1001 04c3 03       		.byte	0x3
 1002 04c4 40       		.byte	0x40
 1003 04c5 48       		.byte	0x48
 1004 04c6 24       		.byte	0x24
 1005 04c7 1F       		.uleb128 0x1f
 1006 04c8 01       		.byte	0x1
 1007 04c9 51       		.byte	0x51
 1008 04ca 01       		.byte	0x1
 1009 04cb 30       		.byte	0x30
 1010 04cc 00       		.byte	0
 1011 04cd 00       		.byte	0
 1012 04ce 21       		.uleb128 0x21
 1013 04cf 6B020000 		.4byte	.LASF52
 1014 04d3 02       		.byte	0x2
 1015 04d4 BC04     		.2byte	0x4bc
 1016 04d6 03       		.byte	0x3
 1017 04d7 21       		.uleb128 0x21
 1018 04d8 71020000 		.4byte	.LASF53
 1019 04dc 02       		.byte	0x2
 1020 04dd BB04     		.2byte	0x4bb
 1021 04df 03       		.byte	0x3
 1022 04e0 22       		.uleb128 0x22
 1023 04e1 01       		.byte	0x1
 1024 04e2 01       		.byte	0x1
 1025 04e3 CE000000 		.4byte	.LASF58
 1026 04e7 CE000000 		.4byte	.LASF58
 1027 04eb 07       		.byte	0x7
 1028 04ec BD02     		.2byte	0x2bd
 1029 04ee 00       		.byte	0
 1030              		.section	.debug_abbrev,"",%progbits
 1031              	.Ldebug_abbrev0:
 1032 0000 01       		.uleb128 0x1
 1033 0001 11       		.uleb128 0x11
 1034 0002 01       		.byte	0x1
 1035 0003 25       		.uleb128 0x25
 1036 0004 0E       		.uleb128 0xe
 1037 0005 13       		.uleb128 0x13
 1038 0006 0B       		.uleb128 0xb
 1039 0007 03       		.uleb128 0x3
 1040 0008 0E       		.uleb128 0xe
 1041 0009 1B       		.uleb128 0x1b
 1042 000a 0E       		.uleb128 0xe
 1043 000b 11       		.uleb128 0x11
 1044 000c 01       		.uleb128 0x1
 1045 000d 12       		.uleb128 0x12
 1046 000e 01       		.uleb128 0x1
 1047 000f 10       		.uleb128 0x10
 1048 0010 06       		.uleb128 0x6
 1049 0011 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 46


 1050 0012 00       		.byte	0
 1051 0013 02       		.uleb128 0x2
 1052 0014 24       		.uleb128 0x24
 1053 0015 00       		.byte	0
 1054 0016 0B       		.uleb128 0xb
 1055 0017 0B       		.uleb128 0xb
 1056 0018 3E       		.uleb128 0x3e
 1057 0019 0B       		.uleb128 0xb
 1058 001a 03       		.uleb128 0x3
 1059 001b 0E       		.uleb128 0xe
 1060 001c 00       		.byte	0
 1061 001d 00       		.byte	0
 1062 001e 03       		.uleb128 0x3
 1063 001f 16       		.uleb128 0x16
 1064 0020 00       		.byte	0
 1065 0021 03       		.uleb128 0x3
 1066 0022 0E       		.uleb128 0xe
 1067 0023 3A       		.uleb128 0x3a
 1068 0024 0B       		.uleb128 0xb
 1069 0025 3B       		.uleb128 0x3b
 1070 0026 0B       		.uleb128 0xb
 1071 0027 49       		.uleb128 0x49
 1072 0028 13       		.uleb128 0x13
 1073 0029 00       		.byte	0
 1074 002a 00       		.byte	0
 1075 002b 04       		.uleb128 0x4
 1076 002c 24       		.uleb128 0x24
 1077 002d 00       		.byte	0
 1078 002e 0B       		.uleb128 0xb
 1079 002f 0B       		.uleb128 0xb
 1080 0030 3E       		.uleb128 0x3e
 1081 0031 0B       		.uleb128 0xb
 1082 0032 03       		.uleb128 0x3
 1083 0033 08       		.uleb128 0x8
 1084 0034 00       		.byte	0
 1085 0035 00       		.byte	0
 1086 0036 05       		.uleb128 0x5
 1087 0037 35       		.uleb128 0x35
 1088 0038 00       		.byte	0
 1089 0039 49       		.uleb128 0x49
 1090 003a 13       		.uleb128 0x13
 1091 003b 00       		.byte	0
 1092 003c 00       		.byte	0
 1093 003d 06       		.uleb128 0x6
 1094 003e 26       		.uleb128 0x26
 1095 003f 00       		.byte	0
 1096 0040 49       		.uleb128 0x49
 1097 0041 13       		.uleb128 0x13
 1098 0042 00       		.byte	0
 1099 0043 00       		.byte	0
 1100 0044 07       		.uleb128 0x7
 1101 0045 13       		.uleb128 0x13
 1102 0046 01       		.byte	0x1
 1103 0047 0B       		.uleb128 0xb
 1104 0048 0B       		.uleb128 0xb
 1105 0049 3A       		.uleb128 0x3a
 1106 004a 0B       		.uleb128 0xb
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 47


 1107 004b 3B       		.uleb128 0x3b
 1108 004c 0B       		.uleb128 0xb
 1109 004d 01       		.uleb128 0x1
 1110 004e 13       		.uleb128 0x13
 1111 004f 00       		.byte	0
 1112 0050 00       		.byte	0
 1113 0051 08       		.uleb128 0x8
 1114 0052 0D       		.uleb128 0xd
 1115 0053 00       		.byte	0
 1116 0054 03       		.uleb128 0x3
 1117 0055 0E       		.uleb128 0xe
 1118 0056 3A       		.uleb128 0x3a
 1119 0057 0B       		.uleb128 0xb
 1120 0058 3B       		.uleb128 0x3b
 1121 0059 0B       		.uleb128 0xb
 1122 005a 49       		.uleb128 0x49
 1123 005b 13       		.uleb128 0x13
 1124 005c 38       		.uleb128 0x38
 1125 005d 0A       		.uleb128 0xa
 1126 005e 00       		.byte	0
 1127 005f 00       		.byte	0
 1128 0060 09       		.uleb128 0x9
 1129 0061 0D       		.uleb128 0xd
 1130 0062 00       		.byte	0
 1131 0063 03       		.uleb128 0x3
 1132 0064 08       		.uleb128 0x8
 1133 0065 3A       		.uleb128 0x3a
 1134 0066 0B       		.uleb128 0xb
 1135 0067 3B       		.uleb128 0x3b
 1136 0068 0B       		.uleb128 0xb
 1137 0069 49       		.uleb128 0x49
 1138 006a 13       		.uleb128 0x13
 1139 006b 38       		.uleb128 0x38
 1140 006c 0A       		.uleb128 0xa
 1141 006d 00       		.byte	0
 1142 006e 00       		.byte	0
 1143 006f 0A       		.uleb128 0xa
 1144 0070 01       		.uleb128 0x1
 1145 0071 01       		.byte	0x1
 1146 0072 49       		.uleb128 0x49
 1147 0073 13       		.uleb128 0x13
 1148 0074 01       		.uleb128 0x1
 1149 0075 13       		.uleb128 0x13
 1150 0076 00       		.byte	0
 1151 0077 00       		.byte	0
 1152 0078 0B       		.uleb128 0xb
 1153 0079 21       		.uleb128 0x21
 1154 007a 00       		.byte	0
 1155 007b 49       		.uleb128 0x49
 1156 007c 13       		.uleb128 0x13
 1157 007d 2F       		.uleb128 0x2f
 1158 007e 0B       		.uleb128 0xb
 1159 007f 00       		.byte	0
 1160 0080 00       		.byte	0
 1161 0081 0C       		.uleb128 0xc
 1162 0082 34       		.uleb128 0x34
 1163 0083 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 48


 1164 0084 03       		.uleb128 0x3
 1165 0085 0E       		.uleb128 0xe
 1166 0086 3A       		.uleb128 0x3a
 1167 0087 0B       		.uleb128 0xb
 1168 0088 3B       		.uleb128 0x3b
 1169 0089 05       		.uleb128 0x5
 1170 008a 49       		.uleb128 0x49
 1171 008b 13       		.uleb128 0x13
 1172 008c 3F       		.uleb128 0x3f
 1173 008d 0C       		.uleb128 0xc
 1174 008e 3C       		.uleb128 0x3c
 1175 008f 0C       		.uleb128 0xc
 1176 0090 00       		.byte	0
 1177 0091 00       		.byte	0
 1178 0092 0D       		.uleb128 0xd
 1179 0093 34       		.uleb128 0x34
 1180 0094 00       		.byte	0
 1181 0095 03       		.uleb128 0x3
 1182 0096 0E       		.uleb128 0xe
 1183 0097 3A       		.uleb128 0x3a
 1184 0098 0B       		.uleb128 0xb
 1185 0099 3B       		.uleb128 0x3b
 1186 009a 0B       		.uleb128 0xb
 1187 009b 49       		.uleb128 0x49
 1188 009c 13       		.uleb128 0x13
 1189 009d 3F       		.uleb128 0x3f
 1190 009e 0C       		.uleb128 0xc
 1191 009f 3C       		.uleb128 0x3c
 1192 00a0 0C       		.uleb128 0xc
 1193 00a1 00       		.byte	0
 1194 00a2 00       		.byte	0
 1195 00a3 0E       		.uleb128 0xe
 1196 00a4 04       		.uleb128 0x4
 1197 00a5 01       		.byte	0x1
 1198 00a6 3E       		.uleb128 0x3e
 1199 00a7 0B       		.uleb128 0xb
 1200 00a8 0B       		.uleb128 0xb
 1201 00a9 0B       		.uleb128 0xb
 1202 00aa 49       		.uleb128 0x49
 1203 00ab 13       		.uleb128 0x13
 1204 00ac 3A       		.uleb128 0x3a
 1205 00ad 0B       		.uleb128 0xb
 1206 00ae 3B       		.uleb128 0x3b
 1207 00af 05       		.uleb128 0x5
 1208 00b0 01       		.uleb128 0x1
 1209 00b1 13       		.uleb128 0x13
 1210 00b2 00       		.byte	0
 1211 00b3 00       		.byte	0
 1212 00b4 0F       		.uleb128 0xf
 1213 00b5 28       		.uleb128 0x28
 1214 00b6 00       		.byte	0
 1215 00b7 03       		.uleb128 0x3
 1216 00b8 0E       		.uleb128 0xe
 1217 00b9 1C       		.uleb128 0x1c
 1218 00ba 0B       		.uleb128 0xb
 1219 00bb 00       		.byte	0
 1220 00bc 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 49


 1221 00bd 10       		.uleb128 0x10
 1222 00be 28       		.uleb128 0x28
 1223 00bf 00       		.byte	0
 1224 00c0 03       		.uleb128 0x3
 1225 00c1 08       		.uleb128 0x8
 1226 00c2 1C       		.uleb128 0x1c
 1227 00c3 0B       		.uleb128 0xb
 1228 00c4 00       		.byte	0
 1229 00c5 00       		.byte	0
 1230 00c6 11       		.uleb128 0x11
 1231 00c7 16       		.uleb128 0x16
 1232 00c8 00       		.byte	0
 1233 00c9 03       		.uleb128 0x3
 1234 00ca 0E       		.uleb128 0xe
 1235 00cb 3A       		.uleb128 0x3a
 1236 00cc 0B       		.uleb128 0xb
 1237 00cd 3B       		.uleb128 0x3b
 1238 00ce 05       		.uleb128 0x5
 1239 00cf 49       		.uleb128 0x49
 1240 00d0 13       		.uleb128 0x13
 1241 00d1 00       		.byte	0
 1242 00d2 00       		.byte	0
 1243 00d3 12       		.uleb128 0x12
 1244 00d4 13       		.uleb128 0x13
 1245 00d5 01       		.byte	0x1
 1246 00d6 0B       		.uleb128 0xb
 1247 00d7 0B       		.uleb128 0xb
 1248 00d8 3A       		.uleb128 0x3a
 1249 00d9 0B       		.uleb128 0xb
 1250 00da 3B       		.uleb128 0x3b
 1251 00db 05       		.uleb128 0x5
 1252 00dc 01       		.uleb128 0x1
 1253 00dd 13       		.uleb128 0x13
 1254 00de 00       		.byte	0
 1255 00df 00       		.byte	0
 1256 00e0 13       		.uleb128 0x13
 1257 00e1 0D       		.uleb128 0xd
 1258 00e2 00       		.byte	0
 1259 00e3 03       		.uleb128 0x3
 1260 00e4 08       		.uleb128 0x8
 1261 00e5 3A       		.uleb128 0x3a
 1262 00e6 0B       		.uleb128 0xb
 1263 00e7 3B       		.uleb128 0x3b
 1264 00e8 05       		.uleb128 0x5
 1265 00e9 49       		.uleb128 0x49
 1266 00ea 13       		.uleb128 0x13
 1267 00eb 38       		.uleb128 0x38
 1268 00ec 0A       		.uleb128 0xa
 1269 00ed 00       		.byte	0
 1270 00ee 00       		.byte	0
 1271 00ef 14       		.uleb128 0x14
 1272 00f0 2E       		.uleb128 0x2e
 1273 00f1 01       		.byte	0x1
 1274 00f2 3F       		.uleb128 0x3f
 1275 00f3 0C       		.uleb128 0xc
 1276 00f4 03       		.uleb128 0x3
 1277 00f5 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 50


 1278 00f6 3A       		.uleb128 0x3a
 1279 00f7 0B       		.uleb128 0xb
 1280 00f8 3B       		.uleb128 0x3b
 1281 00f9 05       		.uleb128 0x5
 1282 00fa 27       		.uleb128 0x27
 1283 00fb 0C       		.uleb128 0xc
 1284 00fc 11       		.uleb128 0x11
 1285 00fd 01       		.uleb128 0x1
 1286 00fe 12       		.uleb128 0x12
 1287 00ff 01       		.uleb128 0x1
 1288 0100 40       		.uleb128 0x40
 1289 0101 0A       		.uleb128 0xa
 1290 0102 9742     		.uleb128 0x2117
 1291 0104 0C       		.uleb128 0xc
 1292 0105 01       		.uleb128 0x1
 1293 0106 13       		.uleb128 0x13
 1294 0107 00       		.byte	0
 1295 0108 00       		.byte	0
 1296 0109 15       		.uleb128 0x15
 1297 010a 05       		.uleb128 0x5
 1298 010b 00       		.byte	0
 1299 010c 03       		.uleb128 0x3
 1300 010d 0E       		.uleb128 0xe
 1301 010e 3A       		.uleb128 0x3a
 1302 010f 0B       		.uleb128 0xb
 1303 0110 3B       		.uleb128 0x3b
 1304 0111 05       		.uleb128 0x5
 1305 0112 49       		.uleb128 0x49
 1306 0113 13       		.uleb128 0x13
 1307 0114 02       		.uleb128 0x2
 1308 0115 06       		.uleb128 0x6
 1309 0116 00       		.byte	0
 1310 0117 00       		.byte	0
 1311 0118 16       		.uleb128 0x16
 1312 0119 2E       		.uleb128 0x2e
 1313 011a 01       		.byte	0x1
 1314 011b 3F       		.uleb128 0x3f
 1315 011c 0C       		.uleb128 0xc
 1316 011d 03       		.uleb128 0x3
 1317 011e 0E       		.uleb128 0xe
 1318 011f 3A       		.uleb128 0x3a
 1319 0120 0B       		.uleb128 0xb
 1320 0121 3B       		.uleb128 0x3b
 1321 0122 05       		.uleb128 0x5
 1322 0123 27       		.uleb128 0x27
 1323 0124 0C       		.uleb128 0xc
 1324 0125 49       		.uleb128 0x49
 1325 0126 13       		.uleb128 0x13
 1326 0127 11       		.uleb128 0x11
 1327 0128 01       		.uleb128 0x1
 1328 0129 12       		.uleb128 0x12
 1329 012a 01       		.uleb128 0x1
 1330 012b 40       		.uleb128 0x40
 1331 012c 0A       		.uleb128 0xa
 1332 012d 9742     		.uleb128 0x2117
 1333 012f 0C       		.uleb128 0xc
 1334 0130 01       		.uleb128 0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 51


 1335 0131 13       		.uleb128 0x13
 1336 0132 00       		.byte	0
 1337 0133 00       		.byte	0
 1338 0134 17       		.uleb128 0x17
 1339 0135 34       		.uleb128 0x34
 1340 0136 00       		.byte	0
 1341 0137 03       		.uleb128 0x3
 1342 0138 0E       		.uleb128 0xe
 1343 0139 3A       		.uleb128 0x3a
 1344 013a 0B       		.uleb128 0xb
 1345 013b 3B       		.uleb128 0x3b
 1346 013c 05       		.uleb128 0x5
 1347 013d 49       		.uleb128 0x49
 1348 013e 13       		.uleb128 0x13
 1349 013f 02       		.uleb128 0x2
 1350 0140 06       		.uleb128 0x6
 1351 0141 00       		.byte	0
 1352 0142 00       		.byte	0
 1353 0143 18       		.uleb128 0x18
 1354 0144 2E       		.uleb128 0x2e
 1355 0145 01       		.byte	0x1
 1356 0146 3F       		.uleb128 0x3f
 1357 0147 0C       		.uleb128 0xc
 1358 0148 03       		.uleb128 0x3
 1359 0149 0E       		.uleb128 0xe
 1360 014a 3A       		.uleb128 0x3a
 1361 014b 0B       		.uleb128 0xb
 1362 014c 3B       		.uleb128 0x3b
 1363 014d 0B       		.uleb128 0xb
 1364 014e 27       		.uleb128 0x27
 1365 014f 0C       		.uleb128 0xc
 1366 0150 11       		.uleb128 0x11
 1367 0151 01       		.uleb128 0x1
 1368 0152 12       		.uleb128 0x12
 1369 0153 01       		.uleb128 0x1
 1370 0154 40       		.uleb128 0x40
 1371 0155 0A       		.uleb128 0xa
 1372 0156 9742     		.uleb128 0x2117
 1373 0158 0C       		.uleb128 0xc
 1374 0159 01       		.uleb128 0x1
 1375 015a 13       		.uleb128 0x13
 1376 015b 00       		.byte	0
 1377 015c 00       		.byte	0
 1378 015d 19       		.uleb128 0x19
 1379 015e 1D       		.uleb128 0x1d
 1380 015f 00       		.byte	0
 1381 0160 31       		.uleb128 0x31
 1382 0161 13       		.uleb128 0x13
 1383 0162 11       		.uleb128 0x11
 1384 0163 01       		.uleb128 0x1
 1385 0164 12       		.uleb128 0x12
 1386 0165 01       		.uleb128 0x1
 1387 0166 58       		.uleb128 0x58
 1388 0167 0B       		.uleb128 0xb
 1389 0168 59       		.uleb128 0x59
 1390 0169 0B       		.uleb128 0xb
 1391 016a 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 52


 1392 016b 00       		.byte	0
 1393 016c 1A       		.uleb128 0x1a
 1394 016d 2E       		.uleb128 0x2e
 1395 016e 01       		.byte	0x1
 1396 016f 3F       		.uleb128 0x3f
 1397 0170 0C       		.uleb128 0xc
 1398 0171 03       		.uleb128 0x3
 1399 0172 0E       		.uleb128 0xe
 1400 0173 3A       		.uleb128 0x3a
 1401 0174 0B       		.uleb128 0xb
 1402 0175 3B       		.uleb128 0x3b
 1403 0176 0B       		.uleb128 0xb
 1404 0177 27       		.uleb128 0x27
 1405 0178 0C       		.uleb128 0xc
 1406 0179 11       		.uleb128 0x11
 1407 017a 01       		.uleb128 0x1
 1408 017b 12       		.uleb128 0x12
 1409 017c 01       		.uleb128 0x1
 1410 017d 40       		.uleb128 0x40
 1411 017e 06       		.uleb128 0x6
 1412 017f 9742     		.uleb128 0x2117
 1413 0181 0C       		.uleb128 0xc
 1414 0182 01       		.uleb128 0x1
 1415 0183 13       		.uleb128 0x13
 1416 0184 00       		.byte	0
 1417 0185 00       		.byte	0
 1418 0186 1B       		.uleb128 0x1b
 1419 0187 05       		.uleb128 0x5
 1420 0188 00       		.byte	0
 1421 0189 03       		.uleb128 0x3
 1422 018a 0E       		.uleb128 0xe
 1423 018b 3A       		.uleb128 0x3a
 1424 018c 0B       		.uleb128 0xb
 1425 018d 3B       		.uleb128 0x3b
 1426 018e 0B       		.uleb128 0xb
 1427 018f 49       		.uleb128 0x49
 1428 0190 13       		.uleb128 0x13
 1429 0191 02       		.uleb128 0x2
 1430 0192 06       		.uleb128 0x6
 1431 0193 00       		.byte	0
 1432 0194 00       		.byte	0
 1433 0195 1C       		.uleb128 0x1c
 1434 0196 05       		.uleb128 0x5
 1435 0197 00       		.byte	0
 1436 0198 03       		.uleb128 0x3
 1437 0199 0E       		.uleb128 0xe
 1438 019a 3A       		.uleb128 0x3a
 1439 019b 0B       		.uleb128 0xb
 1440 019c 3B       		.uleb128 0x3b
 1441 019d 0B       		.uleb128 0xb
 1442 019e 49       		.uleb128 0x49
 1443 019f 13       		.uleb128 0x13
 1444 01a0 02       		.uleb128 0x2
 1445 01a1 0A       		.uleb128 0xa
 1446 01a2 00       		.byte	0
 1447 01a3 00       		.byte	0
 1448 01a4 1D       		.uleb128 0x1d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 53


 1449 01a5 34       		.uleb128 0x34
 1450 01a6 00       		.byte	0
 1451 01a7 03       		.uleb128 0x3
 1452 01a8 0E       		.uleb128 0xe
 1453 01a9 3A       		.uleb128 0x3a
 1454 01aa 0B       		.uleb128 0xb
 1455 01ab 3B       		.uleb128 0x3b
 1456 01ac 0B       		.uleb128 0xb
 1457 01ad 49       		.uleb128 0x49
 1458 01ae 13       		.uleb128 0x13
 1459 01af 02       		.uleb128 0x2
 1460 01b0 06       		.uleb128 0x6
 1461 01b1 00       		.byte	0
 1462 01b2 00       		.byte	0
 1463 01b3 1E       		.uleb128 0x1e
 1464 01b4 898201   		.uleb128 0x4109
 1465 01b7 01       		.byte	0x1
 1466 01b8 11       		.uleb128 0x11
 1467 01b9 01       		.uleb128 0x1
 1468 01ba 31       		.uleb128 0x31
 1469 01bb 13       		.uleb128 0x13
 1470 01bc 01       		.uleb128 0x1
 1471 01bd 13       		.uleb128 0x13
 1472 01be 00       		.byte	0
 1473 01bf 00       		.byte	0
 1474 01c0 1F       		.uleb128 0x1f
 1475 01c1 8A8201   		.uleb128 0x410a
 1476 01c4 00       		.byte	0
 1477 01c5 02       		.uleb128 0x2
 1478 01c6 0A       		.uleb128 0xa
 1479 01c7 9142     		.uleb128 0x2111
 1480 01c9 0A       		.uleb128 0xa
 1481 01ca 00       		.byte	0
 1482 01cb 00       		.byte	0
 1483 01cc 20       		.uleb128 0x20
 1484 01cd 898201   		.uleb128 0x4109
 1485 01d0 01       		.byte	0x1
 1486 01d1 11       		.uleb128 0x11
 1487 01d2 01       		.uleb128 0x1
 1488 01d3 9542     		.uleb128 0x2115
 1489 01d5 0C       		.uleb128 0xc
 1490 01d6 31       		.uleb128 0x31
 1491 01d7 13       		.uleb128 0x13
 1492 01d8 00       		.byte	0
 1493 01d9 00       		.byte	0
 1494 01da 21       		.uleb128 0x21
 1495 01db 2E       		.uleb128 0x2e
 1496 01dc 00       		.byte	0
 1497 01dd 03       		.uleb128 0x3
 1498 01de 0E       		.uleb128 0xe
 1499 01df 3A       		.uleb128 0x3a
 1500 01e0 0B       		.uleb128 0xb
 1501 01e1 3B       		.uleb128 0x3b
 1502 01e2 05       		.uleb128 0x5
 1503 01e3 20       		.uleb128 0x20
 1504 01e4 0B       		.uleb128 0xb
 1505 01e5 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 54


 1506 01e6 00       		.byte	0
 1507 01e7 22       		.uleb128 0x22
 1508 01e8 2E       		.uleb128 0x2e
 1509 01e9 00       		.byte	0
 1510 01ea 3F       		.uleb128 0x3f
 1511 01eb 0C       		.uleb128 0xc
 1512 01ec 3C       		.uleb128 0x3c
 1513 01ed 0C       		.uleb128 0xc
 1514 01ee 8740     		.uleb128 0x2007
 1515 01f0 0E       		.uleb128 0xe
 1516 01f1 03       		.uleb128 0x3
 1517 01f2 0E       		.uleb128 0xe
 1518 01f3 3A       		.uleb128 0x3a
 1519 01f4 0B       		.uleb128 0xb
 1520 01f5 3B       		.uleb128 0x3b
 1521 01f6 05       		.uleb128 0x5
 1522 01f7 00       		.byte	0
 1523 01f8 00       		.byte	0
 1524 01f9 00       		.byte	0
 1525              		.section	.debug_loc,"",%progbits
 1526              	.Ldebug_loc0:
 1527              	.LLST8:
 1528 0000 CC000000 		.4byte	.LVL16-.Ltext0
 1529 0004 D4000000 		.4byte	.LVL17-.Ltext0
 1530 0008 0100     		.2byte	0x1
 1531 000a 50       		.byte	0x50
 1532 000b D4000000 		.4byte	.LVL17-.Ltext0
 1533 000f DC000000 		.4byte	.LFE37-.Ltext0
 1534 0013 0400     		.2byte	0x4
 1535 0015 F3       		.byte	0xf3
 1536 0016 01       		.uleb128 0x1
 1537 0017 50       		.byte	0x50
 1538 0018 9F       		.byte	0x9f
 1539 0019 00000000 		.4byte	0
 1540 001d 00000000 		.4byte	0
 1541              	.LLST6:
 1542 0021 B8000000 		.4byte	.LVL13-.Ltext0
 1543 0025 C2000000 		.4byte	.LVL15-.Ltext0
 1544 0029 0100     		.2byte	0x1
 1545 002b 50       		.byte	0x50
 1546 002c C2000000 		.4byte	.LVL15-.Ltext0
 1547 0030 CC000000 		.4byte	.LFE36-.Ltext0
 1548 0034 0400     		.2byte	0x4
 1549 0036 F3       		.byte	0xf3
 1550 0037 01       		.uleb128 0x1
 1551 0038 50       		.byte	0x50
 1552 0039 9F       		.byte	0x9f
 1553 003a 00000000 		.4byte	0
 1554 003e 00000000 		.4byte	0
 1555              	.LLST7:
 1556 0042 B8000000 		.4byte	.LVL13-.Ltext0
 1557 0046 BC000000 		.4byte	.LVL14-.Ltext0
 1558 004a 0200     		.2byte	0x2
 1559 004c 30       		.byte	0x30
 1560 004d 9F       		.byte	0x9f
 1561 004e BC000000 		.4byte	.LVL14-.Ltext0
 1562 0052 C2000000 		.4byte	.LVL15-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 55


 1563 0056 0800     		.2byte	0x8
 1564 0058 73       		.byte	0x73
 1565 0059 00       		.sleb128 0
 1566 005a 70       		.byte	0x70
 1567 005b 00       		.sleb128 0
 1568 005c 1A       		.byte	0x1a
 1569 005d 30       		.byte	0x30
 1570 005e 2E       		.byte	0x2e
 1571 005f 9F       		.byte	0x9f
 1572 0060 C2000000 		.4byte	.LVL15-.Ltext0
 1573 0064 CC000000 		.4byte	.LFE36-.Ltext0
 1574 0068 0900     		.2byte	0x9
 1575 006a 73       		.byte	0x73
 1576 006b 00       		.sleb128 0
 1577 006c F3       		.byte	0xf3
 1578 006d 01       		.uleb128 0x1
 1579 006e 50       		.byte	0x50
 1580 006f 1A       		.byte	0x1a
 1581 0070 30       		.byte	0x30
 1582 0071 2E       		.byte	0x2e
 1583 0072 9F       		.byte	0x9f
 1584 0073 00000000 		.4byte	0
 1585 0077 00000000 		.4byte	0
 1586              	.LLST3:
 1587 007b 54000000 		.4byte	.LFB34-.Ltext0
 1588 007f 56000000 		.4byte	.LCFI2-.Ltext0
 1589 0083 0200     		.2byte	0x2
 1590 0085 7D       		.byte	0x7d
 1591 0086 00       		.sleb128 0
 1592 0087 56000000 		.4byte	.LCFI2-.Ltext0
 1593 008b 78000000 		.4byte	.LCFI3-.Ltext0
 1594 008f 0200     		.2byte	0x2
 1595 0091 7D       		.byte	0x7d
 1596 0092 04       		.sleb128 4
 1597 0093 78000000 		.4byte	.LCFI3-.Ltext0
 1598 0097 82000000 		.4byte	.LCFI4-.Ltext0
 1599 009b 0200     		.2byte	0x2
 1600 009d 7D       		.byte	0x7d
 1601 009e 00       		.sleb128 0
 1602 009f 82000000 		.4byte	.LCFI4-.Ltext0
 1603 00a3 90000000 		.4byte	.LFE34-.Ltext0
 1604 00a7 0200     		.2byte	0x2
 1605 00a9 7D       		.byte	0x7d
 1606 00aa 04       		.sleb128 4
 1607 00ab 00000000 		.4byte	0
 1608 00af 00000000 		.4byte	0
 1609              	.LLST4:
 1610 00b3 54000000 		.4byte	.LVL9-.Ltext0
 1611 00b7 66000000 		.4byte	.LVL12-.Ltext0
 1612 00bb 0100     		.2byte	0x1
 1613 00bd 50       		.byte	0x50
 1614 00be 66000000 		.4byte	.LVL12-.Ltext0
 1615 00c2 90000000 		.4byte	.LFE34-.Ltext0
 1616 00c6 0400     		.2byte	0x4
 1617 00c8 F3       		.byte	0xf3
 1618 00c9 01       		.uleb128 0x1
 1619 00ca 50       		.byte	0x50
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 56


 1620 00cb 9F       		.byte	0x9f
 1621 00cc 00000000 		.4byte	0
 1622 00d0 00000000 		.4byte	0
 1623              	.LLST5:
 1624 00d4 54000000 		.4byte	.LVL9-.Ltext0
 1625 00d8 5C000000 		.4byte	.LVL10-.Ltext0
 1626 00dc 0200     		.2byte	0x2
 1627 00de 30       		.byte	0x30
 1628 00df 9F       		.byte	0x9f
 1629 00e0 5C000000 		.4byte	.LVL10-.Ltext0
 1630 00e4 66000000 		.4byte	.LVL12-.Ltext0
 1631 00e8 0100     		.2byte	0x1
 1632 00ea 53       		.byte	0x53
 1633 00eb 66000000 		.4byte	.LVL12-.Ltext0
 1634 00ef 90000000 		.4byte	.LFE34-.Ltext0
 1635 00f3 0100     		.2byte	0x1
 1636 00f5 50       		.byte	0x50
 1637 00f6 00000000 		.4byte	0
 1638 00fa 00000000 		.4byte	0
 1639              	.LLST1:
 1640 00fe 34000000 		.4byte	.LVL4-.Ltext0
 1641 0102 3E000000 		.4byte	.LVL7-.Ltext0
 1642 0106 0100     		.2byte	0x1
 1643 0108 50       		.byte	0x50
 1644 0109 3E000000 		.4byte	.LVL7-.Ltext0
 1645 010d 48000000 		.4byte	.LFE32-.Ltext0
 1646 0111 0400     		.2byte	0x4
 1647 0113 F3       		.byte	0xf3
 1648 0114 01       		.uleb128 0x1
 1649 0115 50       		.byte	0x50
 1650 0116 9F       		.byte	0x9f
 1651 0117 00000000 		.4byte	0
 1652 011b 00000000 		.4byte	0
 1653              	.LLST2:
 1654 011f 34000000 		.4byte	.LVL4-.Ltext0
 1655 0123 38000000 		.4byte	.LVL5-.Ltext0
 1656 0127 0200     		.2byte	0x2
 1657 0129 30       		.byte	0x30
 1658 012a 9F       		.byte	0x9f
 1659 012b 38000000 		.4byte	.LVL5-.Ltext0
 1660 012f 3E000000 		.4byte	.LVL7-.Ltext0
 1661 0133 0100     		.2byte	0x1
 1662 0135 53       		.byte	0x53
 1663 0136 3E000000 		.4byte	.LVL7-.Ltext0
 1664 013a 48000000 		.4byte	.LFE32-.Ltext0
 1665 013e 0100     		.2byte	0x1
 1666 0140 50       		.byte	0x50
 1667 0141 00000000 		.4byte	0
 1668 0145 00000000 		.4byte	0
 1669              	.LLST0:
 1670 0149 00000000 		.4byte	.LFB29-.Ltext0
 1671 014d 02000000 		.4byte	.LCFI0-.Ltext0
 1672 0151 0200     		.2byte	0x2
 1673 0153 7D       		.byte	0x7d
 1674 0154 00       		.sleb128 0
 1675 0155 02000000 		.4byte	.LCFI0-.Ltext0
 1676 0159 10000000 		.4byte	.LCFI1-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 57


 1677 015d 0200     		.2byte	0x2
 1678 015f 7D       		.byte	0x7d
 1679 0160 08       		.sleb128 8
 1680 0161 10000000 		.4byte	.LCFI1-.Ltext0
 1681 0165 1A000000 		.4byte	.LFE29-.Ltext0
 1682 0169 0200     		.2byte	0x2
 1683 016b 7D       		.byte	0x7d
 1684 016c 00       		.sleb128 0
 1685 016d 00000000 		.4byte	0
 1686 0171 00000000 		.4byte	0
 1687              		.section	.debug_aranges,"",%progbits
 1688 0000 1C000000 		.4byte	0x1c
 1689 0004 0200     		.2byte	0x2
 1690 0006 00000000 		.4byte	.Ldebug_info0
 1691 000a 04       		.byte	0x4
 1692 000b 00       		.byte	0
 1693 000c 0000     		.2byte	0
 1694 000e 0000     		.2byte	0
 1695 0010 00000000 		.4byte	.Ltext0
 1696 0014 DC000000 		.4byte	.Letext0-.Ltext0
 1697 0018 00000000 		.4byte	0
 1698 001c 00000000 		.4byte	0
 1699              		.section	.debug_line,"",%progbits
 1700              	.Ldebug_line0:
 1701 0000 A8010000 		.section	.debug_str,"MS",%progbits,1
 1701      02002E01 
 1701      00000201 
 1701      FB0E0D00 
 1701      01010101 
 1702              	.LASF40:
 1703 0000 5057525F 		.ascii	"PWR_EnterSTOPMode\000"
 1703      456E7465 
 1703      7253544F 
 1703      504D6F64 
 1703      6500
 1704              	.LASF37:
 1705 0012 5057525F 		.ascii	"PWR_FLAG\000"
 1705      464C4147 
 1705      00
 1706              	.LASF36:
 1707 001b 5057525F 		.ascii	"PWR_TypeDef\000"
 1707      54797065 
 1707      44656600 
 1708              	.LASF7:
 1709 0027 5F5F7569 		.ascii	"__uint32_t\000"
 1709      6E743332 
 1709      5F7400
 1710              	.LASF4:
 1711 0032 5F5F7569 		.ascii	"__uint16_t\000"
 1711      6E743136 
 1711      5F7400
 1712              	.LASF15:
 1713 003d 43505549 		.ascii	"CPUID\000"
 1713      4400
 1714              	.LASF50:
 1715 0043 5057525F 		.ascii	"PWR_BackupAccessCmd\000"
 1715      4261636B 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 58


 1715      75704163 
 1715      63657373 
 1715      436D6400 
 1716              	.LASF24:
 1717 0057 42464152 		.ascii	"BFAR\000"
 1717      00
 1718              	.LASF12:
 1719 005c 75696E74 		.ascii	"uint8_t\000"
 1719      385F7400 
 1720              	.LASF46:
 1721 0064 4E657753 		.ascii	"NewState\000"
 1721      74617465 
 1721      00
 1722              	.LASF33:
 1723 006d 44495341 		.ascii	"DISABLE\000"
 1723      424C4500 
 1724              	.LASF2:
 1725 0075 73686F72 		.ascii	"short int\000"
 1725      7420696E 
 1725      7400
 1726              	.LASF38:
 1727 007f 5057525F 		.ascii	"PWR_ClearFlag\000"
 1727      436C6561 
 1727      72466C61 
 1727      6700
 1728              	.LASF16:
 1729 008d 49435352 		.ascii	"ICSR\000"
 1729      00
 1730              	.LASF56:
 1731 0092 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 1731      616B615C 
 1731      4B414B41 
 1731      4F535C43 
 1731      5C77696E 
 1732 00ba 757635A3 		.ascii	"uv5\243\251\000"
 1732      A900
 1733              	.LASF9:
 1734 00c0 6C6F6E67 		.ascii	"long long int\000"
 1734      206C6F6E 
 1734      6720696E 
 1734      7400
 1735              	.LASF58:
 1736 00ce 5243435F 		.ascii	"RCC_APB1PeriphResetCmd\000"
 1736      41504231 
 1736      50657269 
 1736      70685265 
 1736      73657443 
 1737              	.LASF51:
 1738 00e5 5057525F 		.ascii	"PWR_DeInit\000"
 1738      4465496E 
 1738      697400
 1739              	.LASF6:
 1740 00f0 6C6F6E67 		.ascii	"long int\000"
 1740      20696E74 
 1740      00
 1741              	.LASF3:
 1742 00f9 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 59


 1742      6E74385F 
 1742      7400
 1743              	.LASF20:
 1744 0103 43465352 		.ascii	"CFSR\000"
 1744      00
 1745              	.LASF44:
 1746 0108 746D7072 		.ascii	"tmpreg\000"
 1746      656700
 1747              	.LASF43:
 1748 010f 62697473 		.ascii	"bitstatus\000"
 1748      74617475 
 1748      7300
 1749              	.LASF1:
 1750 0119 756E7369 		.ascii	"unsigned char\000"
 1750      676E6564 
 1750      20636861 
 1750      7200
 1751              	.LASF18:
 1752 0127 41495243 		.ascii	"AIRCR\000"
 1752      5200
 1753              	.LASF28:
 1754 012d 5343425F 		.ascii	"SCB_Type\000"
 1754      54797065 
 1754      00
 1755              	.LASF55:
 1756 0136 2E2E2F2E 		.ascii	"../../source/src/FWlib/src/stm32f10x_pwr.c\000"
 1756      2E2F736F 
 1756      75726365 
 1756      2F737263 
 1756      2F46576C 
 1757              	.LASF0:
 1758 0161 7369676E 		.ascii	"signed char\000"
 1758      65642063 
 1758      68617200 
 1759              	.LASF10:
 1760 016d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1760      206C6F6E 
 1760      6720756E 
 1760      7369676E 
 1760      65642069 
 1761              	.LASF14:
 1762 0184 75696E74 		.ascii	"uint32_t\000"
 1762      33325F74 
 1762      00
 1763              	.LASF11:
 1764 018d 756E7369 		.ascii	"unsigned int\000"
 1764      676E6564 
 1764      20696E74 
 1764      00
 1765              	.LASF13:
 1766 019a 75696E74 		.ascii	"uint16_t\000"
 1766      31365F74 
 1766      00
 1767              	.LASF19:
 1768 01a3 53484353 		.ascii	"SHCSR\000"
 1768      5200
 1769              	.LASF42:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 60


 1770 01a9 5057525F 		.ascii	"PWR_STOPEntry\000"
 1770      53544F50 
 1770      456E7472 
 1770      7900
 1771              	.LASF23:
 1772 01b7 4D4D4641 		.ascii	"MMFAR\000"
 1772      5200
 1773              	.LASF45:
 1774 01bd 5057525F 		.ascii	"PWR_WakeUpPinCmd\000"
 1774      57616B65 
 1774      55705069 
 1774      6E436D64 
 1774      00
 1775              	.LASF5:
 1776 01ce 73686F72 		.ascii	"short unsigned int\000"
 1776      7420756E 
 1776      7369676E 
 1776      65642069 
 1776      6E7400
 1777              	.LASF41:
 1778 01e1 5057525F 		.ascii	"PWR_Regulator\000"
 1778      52656775 
 1778      6C61746F 
 1778      7200
 1779              	.LASF17:
 1780 01ef 56544F52 		.ascii	"VTOR\000"
 1780      00
 1781              	.LASF27:
 1782 01f4 49534152 		.ascii	"ISAR\000"
 1782      00
 1783              	.LASF22:
 1784 01f9 44465352 		.ascii	"DFSR\000"
 1784      00
 1785              	.LASF49:
 1786 01fe 5057525F 		.ascii	"PWR_PVDCmd\000"
 1786      50564443 
 1786      6D6400
 1787              	.LASF30:
 1788 0209 53797374 		.ascii	"SystemCoreClock\000"
 1788      656D436F 
 1788      7265436C 
 1788      6F636B00 
 1789              	.LASF21:
 1790 0219 48465352 		.ascii	"HFSR\000"
 1790      00
 1791              	.LASF26:
 1792 021e 4D4D4652 		.ascii	"MMFR\000"
 1792      00
 1793              	.LASF48:
 1794 0223 5057525F 		.ascii	"PWR_PVDLevel\000"
 1794      5056444C 
 1794      6576656C 
 1794      00
 1795              	.LASF47:
 1796 0230 5057525F 		.ascii	"PWR_PVDLevelConfig\000"
 1796      5056444C 
 1796      6576656C 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 61


 1796      436F6E66 
 1796      696700
 1797              	.LASF8:
 1798 0243 6C6F6E67 		.ascii	"long unsigned int\000"
 1798      20756E73 
 1798      69676E65 
 1798      6420696E 
 1798      7400
 1799              	.LASF35:
 1800 0255 46756E63 		.ascii	"FunctionalState\000"
 1800      74696F6E 
 1800      616C5374 
 1800      61746500 
 1801              	.LASF31:
 1802 0265 52455345 		.ascii	"RESET\000"
 1802      5400
 1803              	.LASF52:
 1804 026b 5F5F5746 		.ascii	"__WFE\000"
 1804      4500
 1805              	.LASF53:
 1806 0271 5F5F5746 		.ascii	"__WFI\000"
 1806      4900
 1807              	.LASF25:
 1808 0277 41465352 		.ascii	"AFSR\000"
 1808      00
 1809              	.LASF54:
 1810 027c 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 1810      43313120 
 1810      372E332E 
 1810      31203230 
 1810      31383036 
 1811 02af 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 1811      20726576 
 1811      6973696F 
 1811      6E203236 
 1811      31393037 
 1812 02e2 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 1812      616D6520 
 1812      2D6D7468 
 1812      756D622D 
 1812      696E7465 
 1813 0315 67647761 		.ascii	"gdwarf-2 -O2\000"
 1813      72662D32 
 1813      202D4F32 
 1813      00
 1814              	.LASF39:
 1815 0322 5057525F 		.ascii	"PWR_EnterSTANDBYMode\000"
 1815      456E7465 
 1815      72535441 
 1815      4E444259 
 1815      4D6F6465 
 1816              	.LASF29:
 1817 0337 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1817      52784275 
 1817      66666572 
 1817      00
 1818              	.LASF32:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 62


 1819 0344 466C6167 		.ascii	"FlagStatus\000"
 1819      53746174 
 1819      757300
 1820              	.LASF34:
 1821 034f 454E4142 		.ascii	"ENABLE\000"
 1821      4C4500
 1822              	.LASF57:
 1823 0356 5057525F 		.ascii	"PWR_GetFlagStatus\000"
 1823      47657446 
 1823      6C616753 
 1823      74617475 
 1823      7300
 1824              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_pwr.c
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:15     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:23     .text:00000000 PWR_DeInit
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:62     .text:0000001c PWR_BackupAccessCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:78     .text:00000024 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:82     .text:00000028 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:90     .text:00000028 PWR_PVDCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:106    .text:00000030 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:110    .text:00000034 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:118    .text:00000034 PWR_PVDLevelConfig
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:143    .text:00000044 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:147    .text:00000048 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:155    .text:00000048 PWR_WakeUpPinCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:171    .text:00000050 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:175    .text:00000054 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:183    .text:00000054 PWR_EnterSTOPMode
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:261    .text:00000088 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:268    .text:00000090 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:276    .text:00000090 PWR_EnterSTANDBYMode
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:315    .text:000000b0 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:320    .text:000000b8 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:328    .text:000000b8 PWR_GetFlagStatus
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:350    .text:000000c8 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:354    .text:000000cc $t
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:362    .text:000000cc PWR_ClearFlag
G:\Users\Jaxb\AppData\Local\Temp\ccVaMaab.s:381    .text:000000d8 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
