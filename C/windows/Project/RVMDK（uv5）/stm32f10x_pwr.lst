ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_pwr.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  20              		.type	__WFI, %function
  21              	__WFI:
  22              	.LFB5:
  23              		.file 1 "../../source/include/core_cm3.h"
   1:../../source/include/core_cm3.h **** /**************************************************************************//**
   2:../../source/include/core_cm3.h ****  * @file     core_cm3.h
   3:../../source/include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../../source/include/core_cm3.h ****  * @version  V1.30
   5:../../source/include/core_cm3.h ****  * @date     30. October 2009
   6:../../source/include/core_cm3.h ****  *
   7:../../source/include/core_cm3.h ****  * @note
   8:../../source/include/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:../../source/include/core_cm3.h ****  *
  10:../../source/include/core_cm3.h ****  * @par
  11:../../source/include/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../source/include/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../source/include/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../source/include/core_cm3.h ****  *
  15:../../source/include/core_cm3.h ****  * @par
  16:../../source/include/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../source/include/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../source/include/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../source/include/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../source/include/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../source/include/core_cm3.h ****  *
  22:../../source/include/core_cm3.h ****  ******************************************************************************/
  23:../../source/include/core_cm3.h **** 
  24:../../source/include/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:../../source/include/core_cm3.h **** #define __CM3_CORE_H__
  26:../../source/include/core_cm3.h **** 
  27:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:../../source/include/core_cm3.h ****  *
  29:../../source/include/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:../../source/include/core_cm3.h ****  *   - Error 10: \n
  31:../../source/include/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:../../source/include/core_cm3.h ****  *     Error 10: Expecting ';'
  33:../../source/include/core_cm3.h ****  * .
  34:../../source/include/core_cm3.h ****  *   - Error 530: \n
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 2


  35:../../source/include/core_cm3.h ****  *     return(__regBasePri); \n
  36:../../source/include/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:../../source/include/core_cm3.h ****  * . 
  38:../../source/include/core_cm3.h ****  *   - Error 550: \n
  39:../../source/include/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:../../source/include/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:../../source/include/core_cm3.h ****  * .
  42:../../source/include/core_cm3.h ****  *   - Error 754: \n
  43:../../source/include/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:../../source/include/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:../../source/include/core_cm3.h ****  * .
  46:../../source/include/core_cm3.h ****  *   - Error 750: \n
  47:../../source/include/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:../../source/include/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:../../source/include/core_cm3.h ****  * .
  50:../../source/include/core_cm3.h ****  *   - Error 528: \n
  51:../../source/include/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:../../source/include/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:../../source/include/core_cm3.h ****  * .
  54:../../source/include/core_cm3.h ****  *   - Error 751: \n
  55:../../source/include/core_cm3.h ****  *     } InterruptType_Type; \n
  56:../../source/include/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:../../source/include/core_cm3.h ****  * .
  58:../../source/include/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:../../source/include/core_cm3.h ****  *
  60:../../source/include/core_cm3.h ****  */
  61:../../source/include/core_cm3.h **** 
  62:../../source/include/core_cm3.h **** /*lint -save */
  63:../../source/include/core_cm3.h **** /*lint -e10  */
  64:../../source/include/core_cm3.h **** /*lint -e530 */
  65:../../source/include/core_cm3.h **** /*lint -e550 */
  66:../../source/include/core_cm3.h **** /*lint -e754 */
  67:../../source/include/core_cm3.h **** /*lint -e750 */
  68:../../source/include/core_cm3.h **** /*lint -e528 */
  69:../../source/include/core_cm3.h **** /*lint -e751 */
  70:../../source/include/core_cm3.h **** 
  71:../../source/include/core_cm3.h **** 
  72:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:../../source/include/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:../../source/include/core_cm3.h ****     - CMSIS version number
  75:../../source/include/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:../../source/include/core_cm3.h ****     - Cortex-M core peripheral base address
  77:../../source/include/core_cm3.h ****   @{
  78:../../source/include/core_cm3.h ****  */
  79:../../source/include/core_cm3.h **** 
  80:../../source/include/core_cm3.h **** #ifdef __cplusplus
  81:../../source/include/core_cm3.h ****  extern "C" {
  82:../../source/include/core_cm3.h **** #endif 
  83:../../source/include/core_cm3.h **** 
  84:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:../../source/include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:../../source/include/core_cm3.h **** 
  88:../../source/include/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:../../source/include/core_cm3.h **** 
  90:../../source/include/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 3


  92:../../source/include/core_cm3.h **** #if defined (__ICCARM__)
  93:../../source/include/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:../../source/include/core_cm3.h **** #endif
  95:../../source/include/core_cm3.h **** 
  96:../../source/include/core_cm3.h **** 
  97:../../source/include/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:../../source/include/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:../../source/include/core_cm3.h **** #endif
 100:../../source/include/core_cm3.h **** 
 101:../../source/include/core_cm3.h **** 
 102:../../source/include/core_cm3.h **** 
 103:../../source/include/core_cm3.h **** 
 104:../../source/include/core_cm3.h **** /**
 105:../../source/include/core_cm3.h ****  * IO definitions
 106:../../source/include/core_cm3.h ****  *
 107:../../source/include/core_cm3.h ****  * define access restrictions to peripheral registers
 108:../../source/include/core_cm3.h ****  */
 109:../../source/include/core_cm3.h **** 
 110:../../source/include/core_cm3.h **** #ifdef __cplusplus
 111:../../source/include/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:../../source/include/core_cm3.h **** #else
 113:../../source/include/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:../../source/include/core_cm3.h **** #endif
 115:../../source/include/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:../../source/include/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:../../source/include/core_cm3.h **** 
 118:../../source/include/core_cm3.h **** 
 119:../../source/include/core_cm3.h **** 
 120:../../source/include/core_cm3.h **** /*******************************************************************************
 121:../../source/include/core_cm3.h ****  *                 Register Abstraction
 122:../../source/include/core_cm3.h ****  ******************************************************************************/
 123:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:../../source/include/core_cm3.h ****  @{
 125:../../source/include/core_cm3.h **** */
 126:../../source/include/core_cm3.h **** 
 127:../../source/include/core_cm3.h **** 
 128:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:../../source/include/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:../../source/include/core_cm3.h ****   @{
 131:../../source/include/core_cm3.h ****  */
 132:../../source/include/core_cm3.h **** typedef struct
 133:../../source/include/core_cm3.h **** {
 134:../../source/include/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:../../source/include/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:../../source/include/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:../../source/include/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:../../source/include/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:../../source/include/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:../../source/include/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:../../source/include/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:../../source/include/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:../../source/include/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:../../source/include/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:../../source/include/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:../../source/include/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:../../source/include/core_cm3.h **** }  NVIC_Type;                                               
 148:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 4


 149:../../source/include/core_cm3.h **** 
 150:../../source/include/core_cm3.h **** 
 151:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:../../source/include/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:../../source/include/core_cm3.h ****   @{
 154:../../source/include/core_cm3.h ****  */
 155:../../source/include/core_cm3.h **** typedef struct
 156:../../source/include/core_cm3.h **** {
 157:../../source/include/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:../../source/include/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:../../source/include/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:../../source/include/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:../../source/include/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:../../source/include/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:../../source/include/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:../../source/include/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:../../source/include/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:../../source/include/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:../../source/include/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:../../source/include/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:../../source/include/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:../../source/include/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:../../source/include/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:../../source/include/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:../../source/include/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:../../source/include/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:../../source/include/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:../../source/include/core_cm3.h **** } SCB_Type;                                                
 177:../../source/include/core_cm3.h **** 
 178:../../source/include/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:../../source/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:../../source/include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:../../source/include/core_cm3.h **** 
 182:../../source/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:../../source/include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:../../source/include/core_cm3.h **** 
 185:../../source/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:../../source/include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:../../source/include/core_cm3.h **** 
 188:../../source/include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:../../source/include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:../../source/include/core_cm3.h **** 
 191:../../source/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:../../source/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:../../source/include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:../../source/include/core_cm3.h **** 
 195:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:../../source/include/core_cm3.h **** 
 198:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:../../source/include/core_cm3.h **** 
 201:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:../../source/include/core_cm3.h **** 
 204:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:../../source/include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 5


 206:../../source/include/core_cm3.h **** 
 207:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:../../source/include/core_cm3.h **** 
 210:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:../../source/include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:../../source/include/core_cm3.h **** 
 213:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:../../source/include/core_cm3.h **** 
 216:../../source/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:../../source/include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:../../source/include/core_cm3.h **** 
 219:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:../../source/include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:../../source/include/core_cm3.h **** 
 222:../../source/include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:../../source/include/core_cm3.h **** 
 226:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:../../source/include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:../../source/include/core_cm3.h **** 
 229:../../source/include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:../../source/include/core_cm3.h **** 
 233:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:../../source/include/core_cm3.h **** 
 236:../../source/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:../../source/include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:../../source/include/core_cm3.h **** 
 239:../../source/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:../../source/include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:../../source/include/core_cm3.h **** 
 242:../../source/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:../../source/include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:../../source/include/core_cm3.h **** 
 245:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:../../source/include/core_cm3.h **** 
 248:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:../../source/include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:../../source/include/core_cm3.h **** 
 251:../../source/include/core_cm3.h **** /* SCB System Control Register Definitions */
 252:../../source/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:../../source/include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:../../source/include/core_cm3.h **** 
 255:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:../../source/include/core_cm3.h **** 
 258:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:../../source/include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:../../source/include/core_cm3.h **** 
 261:../../source/include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:../../source/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 6


 263:../../source/include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:../../source/include/core_cm3.h **** 
 265:../../source/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:../../source/include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:../../source/include/core_cm3.h **** 
 268:../../source/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:../../source/include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:../../source/include/core_cm3.h **** 
 271:../../source/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:../../source/include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:../../source/include/core_cm3.h **** 
 274:../../source/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:../../source/include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:../../source/include/core_cm3.h **** 
 277:../../source/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:../../source/include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:../../source/include/core_cm3.h **** 
 280:../../source/include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:../../source/include/core_cm3.h **** 
 284:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:../../source/include/core_cm3.h **** 
 287:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:../../source/include/core_cm3.h **** 
 290:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:../../source/include/core_cm3.h **** 
 293:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:../../source/include/core_cm3.h **** 
 296:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:../../source/include/core_cm3.h **** 
 299:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:../../source/include/core_cm3.h **** 
 302:../../source/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:../../source/include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:../../source/include/core_cm3.h **** 
 305:../../source/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:../../source/include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:../../source/include/core_cm3.h **** 
 308:../../source/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:../../source/include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:../../source/include/core_cm3.h **** 
 311:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:../../source/include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:../../source/include/core_cm3.h ****                                      
 314:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:../../source/include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:../../source/include/core_cm3.h **** 
 317:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:../../source/include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 7


 320:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:../../source/include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:../../source/include/core_cm3.h **** 
 323:../../source/include/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:../../source/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:../../source/include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:../../source/include/core_cm3.h **** 
 327:../../source/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:../../source/include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:../../source/include/core_cm3.h **** 
 330:../../source/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:../../source/include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:../../source/include/core_cm3.h **** 
 333:../../source/include/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:../../source/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:../../source/include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:../../source/include/core_cm3.h **** 
 337:../../source/include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:../../source/include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:../../source/include/core_cm3.h **** 
 340:../../source/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:../../source/include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:../../source/include/core_cm3.h **** 
 343:../../source/include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:../../source/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:../../source/include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:../../source/include/core_cm3.h **** 
 347:../../source/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:../../source/include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:../../source/include/core_cm3.h **** 
 350:../../source/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:../../source/include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:../../source/include/core_cm3.h **** 
 353:../../source/include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:../../source/include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:../../source/include/core_cm3.h **** 
 356:../../source/include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:../../source/include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:../../source/include/core_cm3.h **** 
 360:../../source/include/core_cm3.h **** 
 361:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:../../source/include/core_cm3.h ****   memory mapped structure for SysTick
 363:../../source/include/core_cm3.h ****   @{
 364:../../source/include/core_cm3.h ****  */
 365:../../source/include/core_cm3.h **** typedef struct
 366:../../source/include/core_cm3.h **** {
 367:../../source/include/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:../../source/include/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:../../source/include/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:../../source/include/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:../../source/include/core_cm3.h **** } SysTick_Type;
 372:../../source/include/core_cm3.h **** 
 373:../../source/include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:../../source/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:../../source/include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 8


 377:../../source/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:../../source/include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:../../source/include/core_cm3.h **** 
 380:../../source/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:../../source/include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:../../source/include/core_cm3.h **** 
 383:../../source/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:../../source/include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:../../source/include/core_cm3.h **** 
 386:../../source/include/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:../../source/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:../../source/include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:../../source/include/core_cm3.h **** 
 390:../../source/include/core_cm3.h **** /* SysTick Current Register Definitions */
 391:../../source/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:../../source/include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:../../source/include/core_cm3.h **** 
 394:../../source/include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:../../source/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:../../source/include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:../../source/include/core_cm3.h **** 
 398:../../source/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:../../source/include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:../../source/include/core_cm3.h **** 
 401:../../source/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:../../source/include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:../../source/include/core_cm3.h **** 
 405:../../source/include/core_cm3.h **** 
 406:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:../../source/include/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:../../source/include/core_cm3.h ****   @{
 409:../../source/include/core_cm3.h ****  */
 410:../../source/include/core_cm3.h **** typedef struct
 411:../../source/include/core_cm3.h **** {
 412:../../source/include/core_cm3.h ****   __O  union  
 413:../../source/include/core_cm3.h ****   {
 414:../../source/include/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:../../source/include/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:../../source/include/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:../../source/include/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:../../source/include/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:../../source/include/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:../../source/include/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:../../source/include/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:../../source/include/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:../../source/include/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:../../source/include/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:../../source/include/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:../../source/include/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:../../source/include/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:../../source/include/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:../../source/include/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:../../source/include/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:../../source/include/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:../../source/include/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:../../source/include/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 9


 434:../../source/include/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:../../source/include/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:../../source/include/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:../../source/include/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:../../source/include/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:../../source/include/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:../../source/include/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:../../source/include/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:../../source/include/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:../../source/include/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:../../source/include/core_cm3.h **** } ITM_Type;                                                
 445:../../source/include/core_cm3.h **** 
 446:../../source/include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:../../source/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:../../source/include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:../../source/include/core_cm3.h **** 
 450:../../source/include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:../../source/include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:../../source/include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:../../source/include/core_cm3.h **** 
 454:../../source/include/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:../../source/include/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:../../source/include/core_cm3.h **** 
 457:../../source/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:../../source/include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:../../source/include/core_cm3.h **** 
 460:../../source/include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:../../source/include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:../../source/include/core_cm3.h **** 
 463:../../source/include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:../../source/include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:../../source/include/core_cm3.h **** 
 466:../../source/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:../../source/include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:../../source/include/core_cm3.h **** 
 469:../../source/include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:../../source/include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:../../source/include/core_cm3.h **** 
 472:../../source/include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:../../source/include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:../../source/include/core_cm3.h **** 
 475:../../source/include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:../../source/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:../../source/include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:../../source/include/core_cm3.h **** 
 479:../../source/include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:../../source/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:../../source/include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:../../source/include/core_cm3.h **** 
 483:../../source/include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:../../source/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:../../source/include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:../../source/include/core_cm3.h **** 
 487:../../source/include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:../../source/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:../../source/include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 10


 491:../../source/include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:../../source/include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:../../source/include/core_cm3.h **** 
 494:../../source/include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:../../source/include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:../../source/include/core_cm3.h **** 
 498:../../source/include/core_cm3.h **** 
 499:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:../../source/include/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:../../source/include/core_cm3.h ****   @{
 502:../../source/include/core_cm3.h ****  */
 503:../../source/include/core_cm3.h **** typedef struct
 504:../../source/include/core_cm3.h **** {
 505:../../source/include/core_cm3.h ****        uint32_t RESERVED0;
 506:../../source/include/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:../../source/include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:../../source/include/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:../../source/include/core_cm3.h **** #else
 510:../../source/include/core_cm3.h ****        uint32_t RESERVED1;
 511:../../source/include/core_cm3.h **** #endif
 512:../../source/include/core_cm3.h **** } InterruptType_Type;
 513:../../source/include/core_cm3.h **** 
 514:../../source/include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:../../source/include/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:../../source/include/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:../../source/include/core_cm3.h **** 
 518:../../source/include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:../../source/include/core_cm3.h **** 
 522:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:../../source/include/core_cm3.h **** 
 525:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:../../source/include/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:../../source/include/core_cm3.h **** 
 529:../../source/include/core_cm3.h **** 
 530:../../source/include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:../../source/include/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:../../source/include/core_cm3.h ****   @{
 534:../../source/include/core_cm3.h ****  */
 535:../../source/include/core_cm3.h **** typedef struct
 536:../../source/include/core_cm3.h **** {
 537:../../source/include/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:../../source/include/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:../../source/include/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:../../source/include/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:../../source/include/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:../../source/include/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:../../source/include/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 11


 548:../../source/include/core_cm3.h **** } MPU_Type;                                                
 549:../../source/include/core_cm3.h **** 
 550:../../source/include/core_cm3.h **** /* MPU Type Register */
 551:../../source/include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:../../source/include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:../../source/include/core_cm3.h **** 
 554:../../source/include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:../../source/include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:../../source/include/core_cm3.h **** 
 557:../../source/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:../../source/include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:../../source/include/core_cm3.h **** 
 560:../../source/include/core_cm3.h **** /* MPU Control Register */
 561:../../source/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:../../source/include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:../../source/include/core_cm3.h **** 
 564:../../source/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:../../source/include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:../../source/include/core_cm3.h **** 
 567:../../source/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:../../source/include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:../../source/include/core_cm3.h **** 
 570:../../source/include/core_cm3.h **** /* MPU Region Number Register */
 571:../../source/include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:../../source/include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:../../source/include/core_cm3.h **** 
 574:../../source/include/core_cm3.h **** /* MPU Region Base Address Register */
 575:../../source/include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:../../source/include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:../../source/include/core_cm3.h **** 
 578:../../source/include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:../../source/include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:../../source/include/core_cm3.h **** 
 581:../../source/include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:../../source/include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:../../source/include/core_cm3.h **** 
 584:../../source/include/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:../../source/include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:../../source/include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:../../source/include/core_cm3.h **** 
 588:../../source/include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:../../source/include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:../../source/include/core_cm3.h **** 
 591:../../source/include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:../../source/include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:../../source/include/core_cm3.h **** 
 594:../../source/include/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:../../source/include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:../../source/include/core_cm3.h **** 
 597:../../source/include/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:../../source/include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:../../source/include/core_cm3.h **** 
 600:../../source/include/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:../../source/include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:../../source/include/core_cm3.h **** 
 603:../../source/include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:../../source/include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 12


 605:../../source/include/core_cm3.h **** 
 606:../../source/include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:../../source/include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:../../source/include/core_cm3.h **** 
 609:../../source/include/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:../../source/include/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:../../source/include/core_cm3.h **** 
 612:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:../../source/include/core_cm3.h **** #endif
 614:../../source/include/core_cm3.h **** 
 615:../../source/include/core_cm3.h **** 
 616:../../source/include/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:../../source/include/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:../../source/include/core_cm3.h ****   @{
 619:../../source/include/core_cm3.h ****  */
 620:../../source/include/core_cm3.h **** typedef struct
 621:../../source/include/core_cm3.h **** {
 622:../../source/include/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:../../source/include/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:../../source/include/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:../../source/include/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:../../source/include/core_cm3.h **** } CoreDebug_Type;
 627:../../source/include/core_cm3.h **** 
 628:../../source/include/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:../../source/include/core_cm3.h **** 
 632:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:../../source/include/core_cm3.h **** 
 635:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:../../source/include/core_cm3.h **** 
 638:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:../../source/include/core_cm3.h **** 
 641:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:../../source/include/core_cm3.h **** 
 644:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:../../source/include/core_cm3.h **** 
 647:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:../../source/include/core_cm3.h **** 
 650:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:../../source/include/core_cm3.h **** 
 653:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:../../source/include/core_cm3.h **** 
 656:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:../../source/include/core_cm3.h **** 
 659:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:../../source/include/core_cm3.h **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 13


 662:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:../../source/include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:../../source/include/core_cm3.h **** 
 665:../../source/include/core_cm3.h **** /* Debug Core Register Selector Register */
 666:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:../../source/include/core_cm3.h **** 
 669:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:../../source/include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:../../source/include/core_cm3.h **** 
 672:../../source/include/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:../../source/include/core_cm3.h **** 
 676:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:../../source/include/core_cm3.h **** 
 679:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:../../source/include/core_cm3.h **** 
 682:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:../../source/include/core_cm3.h **** 
 685:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:../../source/include/core_cm3.h **** 
 688:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:../../source/include/core_cm3.h **** 
 691:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:../../source/include/core_cm3.h **** 
 694:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:../../source/include/core_cm3.h **** 
 697:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:../../source/include/core_cm3.h **** 
 700:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:../../source/include/core_cm3.h **** 
 703:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:../../source/include/core_cm3.h **** 
 706:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:../../source/include/core_cm3.h **** 
 709:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:../../source/include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:../../source/include/core_cm3.h **** 
 713:../../source/include/core_cm3.h **** 
 714:../../source/include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:../../source/include/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:../../source/include/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:../../source/include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:../../source/include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 14


 719:../../source/include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:../../source/include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:../../source/include/core_cm3.h **** 
 722:../../source/include/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:../../source/include/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:../../source/include/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:../../source/include/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:../../source/include/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:../../source/include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:../../source/include/core_cm3.h **** 
 729:../../source/include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:../../source/include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:../../source/include/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:../../source/include/core_cm3.h **** #endif
 733:../../source/include/core_cm3.h **** 
 734:../../source/include/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:../../source/include/core_cm3.h **** 
 736:../../source/include/core_cm3.h **** 
 737:../../source/include/core_cm3.h **** /*******************************************************************************
 738:../../source/include/core_cm3.h ****  *                Hardware Abstraction Layer
 739:../../source/include/core_cm3.h ****  ******************************************************************************/
 740:../../source/include/core_cm3.h **** 
 741:../../source/include/core_cm3.h **** #if defined ( __CC_ARM   )
 742:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:../../source/include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:../../source/include/core_cm3.h **** 
 745:../../source/include/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:../../source/include/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:../../source/include/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:../../source/include/core_cm3.h **** 
 749:../../source/include/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:../../source/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:../../source/include/core_cm3.h **** 
 753:../../source/include/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:../../source/include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:../../source/include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:../../source/include/core_cm3.h **** 
 757:../../source/include/core_cm3.h **** #endif
 758:../../source/include/core_cm3.h **** 
 759:../../source/include/core_cm3.h **** 
 760:../../source/include/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:../../source/include/core_cm3.h **** 
 762:../../source/include/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:../../source/include/core_cm3.h **** /* ARM armcc specific functions */
 764:../../source/include/core_cm3.h **** 
 765:../../source/include/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:../../source/include/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:../../source/include/core_cm3.h **** 
 768:../../source/include/core_cm3.h **** #define __NOP                             __nop
 769:../../source/include/core_cm3.h **** #define __WFI                             __wfi
 770:../../source/include/core_cm3.h **** #define __WFE                             __wfe
 771:../../source/include/core_cm3.h **** #define __SEV                             __sev
 772:../../source/include/core_cm3.h **** #define __ISB()                           __isb(0)
 773:../../source/include/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:../../source/include/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:../../source/include/core_cm3.h **** #define __REV                             __rev
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 15


 776:../../source/include/core_cm3.h **** #define __RBIT                            __rbit
 777:../../source/include/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:../../source/include/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:../../source/include/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:../../source/include/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:../../source/include/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:../../source/include/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:../../source/include/core_cm3.h **** 
 784:../../source/include/core_cm3.h **** 
 785:../../source/include/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:../../source/include/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:../../source/include/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:../../source/include/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:../../source/include/core_cm3.h **** 
 790:../../source/include/core_cm3.h **** 
 791:../../source/include/core_cm3.h **** /**
 792:../../source/include/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:../../source/include/core_cm3.h ****  *
 794:../../source/include/core_cm3.h ****  * @return ProcessStackPointer
 795:../../source/include/core_cm3.h ****  *
 796:../../source/include/core_cm3.h ****  * Return the actual process stack pointer
 797:../../source/include/core_cm3.h ****  */
 798:../../source/include/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:../../source/include/core_cm3.h **** 
 800:../../source/include/core_cm3.h **** /**
 801:../../source/include/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:../../source/include/core_cm3.h ****  *
 803:../../source/include/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:../../source/include/core_cm3.h ****  *
 805:../../source/include/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:../../source/include/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:../../source/include/core_cm3.h ****  */
 808:../../source/include/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:../../source/include/core_cm3.h **** 
 810:../../source/include/core_cm3.h **** /**
 811:../../source/include/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:../../source/include/core_cm3.h ****  *
 813:../../source/include/core_cm3.h ****  * @return Main Stack Pointer
 814:../../source/include/core_cm3.h ****  *
 815:../../source/include/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:../../source/include/core_cm3.h ****  * Cortex processor register
 817:../../source/include/core_cm3.h ****  */
 818:../../source/include/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:../../source/include/core_cm3.h **** 
 820:../../source/include/core_cm3.h **** /**
 821:../../source/include/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:../../source/include/core_cm3.h ****  *
 823:../../source/include/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:../../source/include/core_cm3.h ****  *
 825:../../source/include/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:../../source/include/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:../../source/include/core_cm3.h ****  */
 828:../../source/include/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:../../source/include/core_cm3.h **** 
 830:../../source/include/core_cm3.h **** /**
 831:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:../../source/include/core_cm3.h ****  *
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 16


 833:../../source/include/core_cm3.h ****  * @param   value  value to reverse
 834:../../source/include/core_cm3.h ****  * @return         reversed value
 835:../../source/include/core_cm3.h ****  *
 836:../../source/include/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:../../source/include/core_cm3.h ****  */
 838:../../source/include/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:../../source/include/core_cm3.h **** 
 840:../../source/include/core_cm3.h **** /**
 841:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:../../source/include/core_cm3.h ****  *
 843:../../source/include/core_cm3.h ****  * @param   value  value to reverse
 844:../../source/include/core_cm3.h ****  * @return         reversed value
 845:../../source/include/core_cm3.h ****  *
 846:../../source/include/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:../../source/include/core_cm3.h ****  */
 848:../../source/include/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:../../source/include/core_cm3.h **** 
 850:../../source/include/core_cm3.h **** 
 851:../../source/include/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:../../source/include/core_cm3.h **** 
 853:../../source/include/core_cm3.h **** /**
 854:../../source/include/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:../../source/include/core_cm3.h ****  *
 856:../../source/include/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:../../source/include/core_cm3.h ****  */
 858:../../source/include/core_cm3.h **** extern void __CLREX(void);
 859:../../source/include/core_cm3.h **** 
 860:../../source/include/core_cm3.h **** /**
 861:../../source/include/core_cm3.h ****  * @brief  Return the Base Priority value
 862:../../source/include/core_cm3.h ****  *
 863:../../source/include/core_cm3.h ****  * @return BasePriority
 864:../../source/include/core_cm3.h ****  *
 865:../../source/include/core_cm3.h ****  * Return the content of the base priority register
 866:../../source/include/core_cm3.h ****  */
 867:../../source/include/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:../../source/include/core_cm3.h **** 
 869:../../source/include/core_cm3.h **** /**
 870:../../source/include/core_cm3.h ****  * @brief  Set the Base Priority value
 871:../../source/include/core_cm3.h ****  *
 872:../../source/include/core_cm3.h ****  * @param  basePri  BasePriority
 873:../../source/include/core_cm3.h ****  *
 874:../../source/include/core_cm3.h ****  * Set the base priority register
 875:../../source/include/core_cm3.h ****  */
 876:../../source/include/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:../../source/include/core_cm3.h **** 
 878:../../source/include/core_cm3.h **** /**
 879:../../source/include/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:../../source/include/core_cm3.h ****  *
 881:../../source/include/core_cm3.h ****  * @return PriMask
 882:../../source/include/core_cm3.h ****  *
 883:../../source/include/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:../../source/include/core_cm3.h ****  */
 885:../../source/include/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:../../source/include/core_cm3.h **** 
 887:../../source/include/core_cm3.h **** /**
 888:../../source/include/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:../../source/include/core_cm3.h ****  *
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 17


 890:../../source/include/core_cm3.h ****  * @param   priMask  PriMask
 891:../../source/include/core_cm3.h ****  *
 892:../../source/include/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:../../source/include/core_cm3.h ****  */
 894:../../source/include/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:../../source/include/core_cm3.h **** 
 896:../../source/include/core_cm3.h **** /**
 897:../../source/include/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:../../source/include/core_cm3.h ****  *
 899:../../source/include/core_cm3.h ****  * @return FaultMask
 900:../../source/include/core_cm3.h ****  *
 901:../../source/include/core_cm3.h ****  * Return the content of the fault mask register
 902:../../source/include/core_cm3.h ****  */
 903:../../source/include/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:../../source/include/core_cm3.h **** 
 905:../../source/include/core_cm3.h **** /**
 906:../../source/include/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:../../source/include/core_cm3.h ****  *
 908:../../source/include/core_cm3.h ****  * @param  faultMask faultMask value
 909:../../source/include/core_cm3.h ****  *
 910:../../source/include/core_cm3.h ****  * Set the fault mask register
 911:../../source/include/core_cm3.h ****  */
 912:../../source/include/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:../../source/include/core_cm3.h **** 
 914:../../source/include/core_cm3.h **** /**
 915:../../source/include/core_cm3.h ****  * @brief  Return the Control Register value
 916:../../source/include/core_cm3.h ****  * 
 917:../../source/include/core_cm3.h ****  * @return Control value
 918:../../source/include/core_cm3.h ****  *
 919:../../source/include/core_cm3.h ****  * Return the content of the control register
 920:../../source/include/core_cm3.h ****  */
 921:../../source/include/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:../../source/include/core_cm3.h **** 
 923:../../source/include/core_cm3.h **** /**
 924:../../source/include/core_cm3.h ****  * @brief  Set the Control Register value
 925:../../source/include/core_cm3.h ****  *
 926:../../source/include/core_cm3.h ****  * @param  control  Control value
 927:../../source/include/core_cm3.h ****  *
 928:../../source/include/core_cm3.h ****  * Set the control register
 929:../../source/include/core_cm3.h ****  */
 930:../../source/include/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:../../source/include/core_cm3.h **** 
 932:../../source/include/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:../../source/include/core_cm3.h **** 
 934:../../source/include/core_cm3.h **** /**
 935:../../source/include/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:../../source/include/core_cm3.h ****  *
 937:../../source/include/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:../../source/include/core_cm3.h ****  */
 939:../../source/include/core_cm3.h **** #define __CLREX                           __clrex
 940:../../source/include/core_cm3.h **** 
 941:../../source/include/core_cm3.h **** /**
 942:../../source/include/core_cm3.h ****  * @brief  Return the Base Priority value
 943:../../source/include/core_cm3.h ****  *
 944:../../source/include/core_cm3.h ****  * @return BasePriority
 945:../../source/include/core_cm3.h ****  *
 946:../../source/include/core_cm3.h ****  * Return the content of the base priority register
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 18


 947:../../source/include/core_cm3.h ****  */
 948:../../source/include/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:../../source/include/core_cm3.h **** {
 950:../../source/include/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:../../source/include/core_cm3.h ****   return(__regBasePri);
 952:../../source/include/core_cm3.h **** }
 953:../../source/include/core_cm3.h **** 
 954:../../source/include/core_cm3.h **** /**
 955:../../source/include/core_cm3.h ****  * @brief  Set the Base Priority value
 956:../../source/include/core_cm3.h ****  *
 957:../../source/include/core_cm3.h ****  * @param  basePri  BasePriority
 958:../../source/include/core_cm3.h ****  *
 959:../../source/include/core_cm3.h ****  * Set the base priority register
 960:../../source/include/core_cm3.h ****  */
 961:../../source/include/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:../../source/include/core_cm3.h **** {
 963:../../source/include/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:../../source/include/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:../../source/include/core_cm3.h **** }
 966:../../source/include/core_cm3.h **** 
 967:../../source/include/core_cm3.h **** /**
 968:../../source/include/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:../../source/include/core_cm3.h ****  *
 970:../../source/include/core_cm3.h ****  * @return PriMask
 971:../../source/include/core_cm3.h ****  *
 972:../../source/include/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:../../source/include/core_cm3.h ****  */
 974:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:../../source/include/core_cm3.h **** {
 976:../../source/include/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:../../source/include/core_cm3.h ****   return(__regPriMask);
 978:../../source/include/core_cm3.h **** }
 979:../../source/include/core_cm3.h **** 
 980:../../source/include/core_cm3.h **** /**
 981:../../source/include/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:../../source/include/core_cm3.h ****  *
 983:../../source/include/core_cm3.h ****  * @param  priMask  PriMask
 984:../../source/include/core_cm3.h ****  *
 985:../../source/include/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:../../source/include/core_cm3.h ****  */
 987:../../source/include/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:../../source/include/core_cm3.h **** {
 989:../../source/include/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:../../source/include/core_cm3.h ****   __regPriMask = (priMask);
 991:../../source/include/core_cm3.h **** }
 992:../../source/include/core_cm3.h **** 
 993:../../source/include/core_cm3.h **** /**
 994:../../source/include/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:../../source/include/core_cm3.h ****  *
 996:../../source/include/core_cm3.h ****  * @return FaultMask
 997:../../source/include/core_cm3.h ****  *
 998:../../source/include/core_cm3.h ****  * Return the content of the fault mask register
 999:../../source/include/core_cm3.h ****  */
1000:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:../../source/include/core_cm3.h **** {
1002:../../source/include/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:../../source/include/core_cm3.h ****   return(__regFaultMask);
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 19


1004:../../source/include/core_cm3.h **** }
1005:../../source/include/core_cm3.h **** 
1006:../../source/include/core_cm3.h **** /**
1007:../../source/include/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:../../source/include/core_cm3.h ****  *
1009:../../source/include/core_cm3.h ****  * @param  faultMask  faultMask value
1010:../../source/include/core_cm3.h ****  *
1011:../../source/include/core_cm3.h ****  * Set the fault mask register
1012:../../source/include/core_cm3.h ****  */
1013:../../source/include/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:../../source/include/core_cm3.h **** {
1015:../../source/include/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:../../source/include/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:../../source/include/core_cm3.h **** }
1018:../../source/include/core_cm3.h **** 
1019:../../source/include/core_cm3.h **** /**
1020:../../source/include/core_cm3.h ****  * @brief  Return the Control Register value
1021:../../source/include/core_cm3.h ****  * 
1022:../../source/include/core_cm3.h ****  * @return Control value
1023:../../source/include/core_cm3.h ****  *
1024:../../source/include/core_cm3.h ****  * Return the content of the control register
1025:../../source/include/core_cm3.h ****  */
1026:../../source/include/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:../../source/include/core_cm3.h **** {
1028:../../source/include/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:../../source/include/core_cm3.h ****   return(__regControl);
1030:../../source/include/core_cm3.h **** }
1031:../../source/include/core_cm3.h **** 
1032:../../source/include/core_cm3.h **** /**
1033:../../source/include/core_cm3.h ****  * @brief  Set the Control Register value
1034:../../source/include/core_cm3.h ****  *
1035:../../source/include/core_cm3.h ****  * @param  control  Control value
1036:../../source/include/core_cm3.h ****  *
1037:../../source/include/core_cm3.h ****  * Set the control register
1038:../../source/include/core_cm3.h ****  */
1039:../../source/include/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:../../source/include/core_cm3.h **** {
1041:../../source/include/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:../../source/include/core_cm3.h ****   __regControl = control;
1043:../../source/include/core_cm3.h **** }
1044:../../source/include/core_cm3.h **** 
1045:../../source/include/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:../../source/include/core_cm3.h **** 
1047:../../source/include/core_cm3.h **** 
1048:../../source/include/core_cm3.h **** 
1049:../../source/include/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:../../source/include/core_cm3.h **** /* IAR iccarm specific functions */
1051:../../source/include/core_cm3.h **** 
1052:../../source/include/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:../../source/include/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:../../source/include/core_cm3.h **** 
1055:../../source/include/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:../../source/include/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:../../source/include/core_cm3.h **** 
1058:../../source/include/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:../../source/include/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:../../source/include/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 20


1061:../../source/include/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:../../source/include/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:../../source/include/core_cm3.h **** 
1064:../../source/include/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:../../source/include/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:../../source/include/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:../../source/include/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:../../source/include/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:../../source/include/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:../../source/include/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:../../source/include/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:../../source/include/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:../../source/include/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:../../source/include/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:../../source/include/core_cm3.h **** 
1076:../../source/include/core_cm3.h **** 
1077:../../source/include/core_cm3.h **** /**
1078:../../source/include/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:../../source/include/core_cm3.h ****  *
1080:../../source/include/core_cm3.h ****  * @return ProcessStackPointer
1081:../../source/include/core_cm3.h ****  *
1082:../../source/include/core_cm3.h ****  * Return the actual process stack pointer
1083:../../source/include/core_cm3.h ****  */
1084:../../source/include/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:../../source/include/core_cm3.h **** 
1086:../../source/include/core_cm3.h **** /**
1087:../../source/include/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:../../source/include/core_cm3.h ****  *
1089:../../source/include/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:../../source/include/core_cm3.h ****  *
1091:../../source/include/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:../../source/include/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:../../source/include/core_cm3.h ****  */
1094:../../source/include/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:../../source/include/core_cm3.h **** 
1096:../../source/include/core_cm3.h **** /**
1097:../../source/include/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:../../source/include/core_cm3.h ****  *
1099:../../source/include/core_cm3.h ****  * @return Main Stack Pointer
1100:../../source/include/core_cm3.h ****  *
1101:../../source/include/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:../../source/include/core_cm3.h ****  * Cortex processor register
1103:../../source/include/core_cm3.h ****  */
1104:../../source/include/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:../../source/include/core_cm3.h **** 
1106:../../source/include/core_cm3.h **** /**
1107:../../source/include/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:../../source/include/core_cm3.h ****  *
1109:../../source/include/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:../../source/include/core_cm3.h ****  *
1111:../../source/include/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:../../source/include/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:../../source/include/core_cm3.h ****  */
1114:../../source/include/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:../../source/include/core_cm3.h **** 
1116:../../source/include/core_cm3.h **** /**
1117:../../source/include/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 21


1118:../../source/include/core_cm3.h ****  *
1119:../../source/include/core_cm3.h ****  * @param  value  value to reverse
1120:../../source/include/core_cm3.h ****  * @return        reversed value
1121:../../source/include/core_cm3.h ****  *
1122:../../source/include/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:../../source/include/core_cm3.h ****  */
1124:../../source/include/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:../../source/include/core_cm3.h **** 
1126:../../source/include/core_cm3.h **** /**
1127:../../source/include/core_cm3.h ****  * @brief  Reverse bit order of value
1128:../../source/include/core_cm3.h ****  *
1129:../../source/include/core_cm3.h ****  * @param  value  value to reverse
1130:../../source/include/core_cm3.h ****  * @return        reversed value
1131:../../source/include/core_cm3.h ****  *
1132:../../source/include/core_cm3.h ****  * Reverse bit order of value
1133:../../source/include/core_cm3.h ****  */
1134:../../source/include/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:../../source/include/core_cm3.h **** 
1136:../../source/include/core_cm3.h **** /**
1137:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:../../source/include/core_cm3.h ****  *
1139:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1140:../../source/include/core_cm3.h ****  * @return        value of (*address)
1141:../../source/include/core_cm3.h ****  *
1142:../../source/include/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:../../source/include/core_cm3.h ****  */
1144:../../source/include/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:../../source/include/core_cm3.h **** 
1146:../../source/include/core_cm3.h **** /**
1147:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:../../source/include/core_cm3.h ****  *
1149:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1150:../../source/include/core_cm3.h ****  * @return        value of (*address)
1151:../../source/include/core_cm3.h ****  *
1152:../../source/include/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:../../source/include/core_cm3.h ****  */
1154:../../source/include/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:../../source/include/core_cm3.h **** 
1156:../../source/include/core_cm3.h **** /**
1157:../../source/include/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:../../source/include/core_cm3.h ****  *
1159:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1160:../../source/include/core_cm3.h ****  * @return        value of (*address)
1161:../../source/include/core_cm3.h ****  *
1162:../../source/include/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:../../source/include/core_cm3.h ****  */
1164:../../source/include/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:../../source/include/core_cm3.h **** 
1166:../../source/include/core_cm3.h **** /**
1167:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:../../source/include/core_cm3.h ****  *
1169:../../source/include/core_cm3.h ****  * @param  value  value to store
1170:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1171:../../source/include/core_cm3.h ****  * @return        successful / failed
1172:../../source/include/core_cm3.h ****  *
1173:../../source/include/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:../../source/include/core_cm3.h ****  */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 22


1175:../../source/include/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:../../source/include/core_cm3.h **** 
1177:../../source/include/core_cm3.h **** /**
1178:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:../../source/include/core_cm3.h ****  *
1180:../../source/include/core_cm3.h ****  * @param  value  value to store
1181:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1182:../../source/include/core_cm3.h ****  * @return        successful / failed
1183:../../source/include/core_cm3.h ****  *
1184:../../source/include/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:../../source/include/core_cm3.h ****  */
1186:../../source/include/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:../../source/include/core_cm3.h **** 
1188:../../source/include/core_cm3.h **** /**
1189:../../source/include/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:../../source/include/core_cm3.h ****  *
1191:../../source/include/core_cm3.h ****  * @param  value  value to store
1192:../../source/include/core_cm3.h ****  * @param  *addr  address pointer
1193:../../source/include/core_cm3.h ****  * @return        successful / failed
1194:../../source/include/core_cm3.h ****  *
1195:../../source/include/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:../../source/include/core_cm3.h ****  */
1197:../../source/include/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:../../source/include/core_cm3.h **** 
1199:../../source/include/core_cm3.h **** 
1200:../../source/include/core_cm3.h **** 
1201:../../source/include/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:../../source/include/core_cm3.h **** /* GNU gcc specific functions */
1203:../../source/include/core_cm3.h **** 
1204:../../source/include/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:../../source/include/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:../../source/include/core_cm3.h **** 
1207:../../source/include/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:../../source/include/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:../../source/include/core_cm3.h **** 
1210:../../source/include/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:../../source/include/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
  24              		.loc 1 1211 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 0
  27              		@ frame_needed = 1, uses_anonymous_args = 0
  28              		@ link register save eliminated.
  29 0000 80B4     		push	{r7}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 7, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  36              		.loc 1 1211 0
  37              		.syntax unified
  38              	@ 1211 "../../source/include/core_cm3.h" 1
  39 0004 30BF     		wfi
  40              	@ 0 "" 2
  41              		.thumb
  42              		.syntax unified
  43 0006 00BF     		nop
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 23


  44 0008 BD46     		mov	sp, r7
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 000a 80BC     		pop	{r7}
  49              	.LCFI3:
  50              		.cfi_restore 7
  51              		.cfi_def_cfa_offset 0
  52 000c 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE5:
  55              		.size	__WFI, .-__WFI
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  61              		.type	__WFE, %function
  62              	__WFE:
  63              	.LFB6:
1212:../../source/include/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
  64              		.loc 1 1212 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 000e 80B4     		push	{r7}
  70              	.LCFI4:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0010 00AF     		add	r7, sp, #0
  74              	.LCFI5:
  75              		.cfi_def_cfa_register 7
  76              		.loc 1 1212 0
  77              		.syntax unified
  78              	@ 1212 "../../source/include/core_cm3.h" 1
  79 0012 20BF     		wfe
  80              	@ 0 "" 2
  81              		.thumb
  82              		.syntax unified
  83 0014 00BF     		nop
  84 0016 BD46     		mov	sp, r7
  85              	.LCFI6:
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 0018 80BC     		pop	{r7}
  89              	.LCFI7:
  90              		.cfi_restore 7
  91              		.cfi_def_cfa_offset 0
  92 001a 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE6:
  95              		.size	__WFE, .-__WFE
  96              		.align	1
  97              		.global	PWR_DeInit
  98              		.syntax unified
  99              		.thumb
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 24


 100              		.thumb_func
 101              		.fpu softvfp
 102              		.type	PWR_DeInit, %function
 103              	PWR_DeInit:
 104              	.LFB29:
 105              		.file 2 "../../source/src/FWlib/src/stm32f10x_pwr.c"
   1:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
   2:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
   3:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @file    stm32f10x_pwr.c
   4:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @author  MCD Application Team
   5:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @version V3.5.0
   6:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @date    11-March-2011
   7:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief   This file provides all the PWR firmware functions.
   8:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
   9:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @attention
  10:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *
  11:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *
  18:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../../source/src/FWlib/src/stm32f10x_pwr.c ****   ******************************************************************************
  20:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  21:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  22:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Includes ------------------------------------------------------------------*/
  23:../../source/src/FWlib/src/stm32f10x_pwr.c **** #include "stm32f10x_pwr.h"
  24:../../source/src/FWlib/src/stm32f10x_pwr.c **** #include "stm32f10x_rcc.h"
  25:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  26:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  28:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  29:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  30:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR 
  31:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief PWR driver modules
  32:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  33:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */ 
  34:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  35:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_TypesDefinitions
  36:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  37:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  38:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  39:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  40:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  41:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  42:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  43:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Defines
  44:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  45:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  46:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  47:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  48:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  49:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  50:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --- CR Register ---*/
  51:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 25


  52:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of DBP bit */
  53:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  54:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define DBP_BitNumber            0x08
  55:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  56:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  57:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of PVDE bit */
  58:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define PVDE_BitNumber           0x04
  59:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  60:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  61:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* --- CSR Register ---*/
  62:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  63:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* Alias word address of EWUP bit */
  64:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CSR_OFFSET               (PWR_OFFSET + 0x04)
  65:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define EWUP_BitNumber           0x08
  66:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CSR_EWUP_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (EWUP_BitNumber * 4))
  67:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  68:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
  69:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  70:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* CR register bit mask */
  71:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_DS_MASK               ((uint32_t)0xFFFFFFFC)
  72:../../source/src/FWlib/src/stm32f10x_pwr.c **** #define CR_PLS_MASK              ((uint32_t)0xFFFFFF1F)
  73:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  74:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  75:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  76:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  77:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  78:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  79:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Macros
  80:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  81:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  82:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  83:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  84:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  85:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  86:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  87:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Variables
  88:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  89:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  90:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  91:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
  92:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
  93:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  94:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  95:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_FunctionPrototypes
  96:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
  97:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
  98:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
  99:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 100:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @}
 101:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 102:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 103:../../source/src/FWlib/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Functions
 104:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @{
 105:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 106:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 107:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 108:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 26


 109:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  None
 110:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 111:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 112:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_DeInit(void)
 113:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 106              		.loc 2 113 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110 001c 80B5     		push	{r7, lr}
 111              	.LCFI8:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 001e 00AF     		add	r7, sp, #0
 116              	.LCFI9:
 117              		.cfi_def_cfa_register 7
 114:../../source/src/FWlib/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
 118              		.loc 2 114 0
 119 0020 0121     		movs	r1, #1
 120 0022 4FF08050 		mov	r0, #268435456
 121 0026 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 115:../../source/src/FWlib/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
 122              		.loc 2 115 0
 123 002a 0021     		movs	r1, #0
 124 002c 4FF08050 		mov	r0, #268435456
 125 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 116:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 126              		.loc 2 116 0
 127 0034 00BF     		nop
 128 0036 80BD     		pop	{r7, pc}
 129              		.cfi_endproc
 130              	.LFE29:
 131              		.size	PWR_DeInit, .-PWR_DeInit
 132              		.align	1
 133              		.global	PWR_BackupAccessCmd
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 138              		.type	PWR_BackupAccessCmd, %function
 139              	PWR_BackupAccessCmd:
 140              	.LFB30:
 117:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 118:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 119:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables access to the RTC and backup registers.
 120:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the access to the RTC and backup registers.
 121:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 122:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 123:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 124:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 125:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 141              		.loc 2 125 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 27


 146 0038 80B4     		push	{r7}
 147              	.LCFI10:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 003a 83B0     		sub	sp, sp, #12
 151              	.LCFI11:
 152              		.cfi_def_cfa_offset 16
 153 003c 00AF     		add	r7, sp, #0
 154              	.LCFI12:
 155              		.cfi_def_cfa_register 7
 156 003e 0346     		mov	r3, r0
 157 0040 FB71     		strb	r3, [r7, #7]
 126:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 127:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 128:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
 158              		.loc 2 128 0
 159 0042 044A     		ldr	r2, .L5
 160 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 161 0046 1360     		str	r3, [r2]
 129:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 162              		.loc 2 129 0
 163 0048 00BF     		nop
 164 004a 0C37     		adds	r7, r7, #12
 165              	.LCFI13:
 166              		.cfi_def_cfa_offset 4
 167 004c BD46     		mov	sp, r7
 168              	.LCFI14:
 169              		.cfi_def_cfa_register 13
 170              		@ sp needed
 171 004e 80BC     		pop	{r7}
 172              	.LCFI15:
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 0
 175 0050 7047     		bx	lr
 176              	.L6:
 177 0052 00BF     		.align	2
 178              	.L5:
 179 0054 20000E42 		.word	1108213792
 180              		.cfi_endproc
 181              	.LFE30:
 182              		.size	PWR_BackupAccessCmd, .-PWR_BackupAccessCmd
 183              		.align	1
 184              		.global	PWR_PVDCmd
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu softvfp
 189              		.type	PWR_PVDCmd, %function
 190              	PWR_PVDCmd:
 191              	.LFB31:
 130:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 131:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 132:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 133:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the PVD.
 134:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 135:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 136:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 28


 137:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 138:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 192              		.loc 2 138 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0058 80B4     		push	{r7}
 198              	.LCFI16:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 005a 83B0     		sub	sp, sp, #12
 202              	.LCFI17:
 203              		.cfi_def_cfa_offset 16
 204 005c 00AF     		add	r7, sp, #0
 205              	.LCFI18:
 206              		.cfi_def_cfa_register 7
 207 005e 0346     		mov	r3, r0
 208 0060 FB71     		strb	r3, [r7, #7]
 139:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 140:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 141:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
 209              		.loc 2 141 0
 210 0062 044A     		ldr	r2, .L8
 211 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 212 0066 1360     		str	r3, [r2]
 142:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 213              		.loc 2 142 0
 214 0068 00BF     		nop
 215 006a 0C37     		adds	r7, r7, #12
 216              	.LCFI19:
 217              		.cfi_def_cfa_offset 4
 218 006c BD46     		mov	sp, r7
 219              	.LCFI20:
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 006e 80BC     		pop	{r7}
 223              	.LCFI21:
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0070 7047     		bx	lr
 227              	.L9:
 228 0072 00BF     		.align	2
 229              	.L8:
 230 0074 10000E42 		.word	1108213776
 231              		.cfi_endproc
 232              	.LFE31:
 233              		.size	PWR_PVDCmd, .-PWR_PVDCmd
 234              		.align	1
 235              		.global	PWR_PVDLevelConfig
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 240              		.type	PWR_PVDLevelConfig, %function
 241              	PWR_PVDLevelConfig:
 242              	.LFB32:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 29


 143:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 144:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 145:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 146:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 147:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 148:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V2: PVD detection level set to 2.2V
 149:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V3: PVD detection level set to 2.3V
 150:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V4: PVD detection level set to 2.4V
 151:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V5: PVD detection level set to 2.5V
 152:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V6: PVD detection level set to 2.6V
 153:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V7: PVD detection level set to 2.7V
 154:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V8: PVD detection level set to 2.8V
 155:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V9: PVD detection level set to 2.9V
 156:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 157:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 158:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 159:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 243              		.loc 2 159 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0078 80B4     		push	{r7}
 249              	.LCFI22:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 7, -4
 252 007a 85B0     		sub	sp, sp, #20
 253              	.LCFI23:
 254              		.cfi_def_cfa_offset 24
 255 007c 00AF     		add	r7, sp, #0
 256              	.LCFI24:
 257              		.cfi_def_cfa_register 7
 258 007e 7860     		str	r0, [r7, #4]
 160:../../source/src/FWlib/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 259              		.loc 2 160 0
 260 0080 0023     		movs	r3, #0
 261 0082 FB60     		str	r3, [r7, #12]
 161:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 162:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 163:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 262              		.loc 2 163 0
 263 0084 094B     		ldr	r3, .L11
 264 0086 1B68     		ldr	r3, [r3]
 265 0088 FB60     		str	r3, [r7, #12]
 164:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear PLS[7:5] bits */
 165:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg &= CR_PLS_MASK;
 266              		.loc 2 165 0
 267 008a FB68     		ldr	r3, [r7, #12]
 268 008c 23F0E003 		bic	r3, r3, #224
 269 0090 FB60     		str	r3, [r7, #12]
 166:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 167:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg |= PWR_PVDLevel;
 270              		.loc 2 167 0
 271 0092 FA68     		ldr	r2, [r7, #12]
 272 0094 7B68     		ldr	r3, [r7, #4]
 273 0096 1343     		orrs	r3, r3, r2
 274 0098 FB60     		str	r3, [r7, #12]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 30


 168:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Store the new value */
 169:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 275              		.loc 2 169 0
 276 009a 044A     		ldr	r2, .L11
 277 009c FB68     		ldr	r3, [r7, #12]
 278 009e 1360     		str	r3, [r2]
 170:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 279              		.loc 2 170 0
 280 00a0 00BF     		nop
 281 00a2 1437     		adds	r7, r7, #20
 282              	.LCFI25:
 283              		.cfi_def_cfa_offset 4
 284 00a4 BD46     		mov	sp, r7
 285              	.LCFI26:
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 00a6 80BC     		pop	{r7}
 289              	.LCFI27:
 290              		.cfi_restore 7
 291              		.cfi_def_cfa_offset 0
 292 00a8 7047     		bx	lr
 293              	.L12:
 294 00aa 00BF     		.align	2
 295              	.L11:
 296 00ac 00700040 		.word	1073770496
 297              		.cfi_endproc
 298              	.LFE32:
 299              		.size	PWR_PVDLevelConfig, .-PWR_PVDLevelConfig
 300              		.align	1
 301              		.global	PWR_WakeUpPinCmd
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 306              		.type	PWR_WakeUpPinCmd, %function
 307              	PWR_WakeUpPinCmd:
 308              	.LFB33:
 171:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 172:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 173:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 174:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 175:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 176:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 177:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 178:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_WakeUpPinCmd(FunctionalState NewState)
 179:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 309              		.loc 2 179 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 00b0 80B4     		push	{r7}
 315              	.LCFI28:
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 7, -4
 318 00b2 83B0     		sub	sp, sp, #12
 319              	.LCFI29:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 31


 320              		.cfi_def_cfa_offset 16
 321 00b4 00AF     		add	r7, sp, #0
 322              	.LCFI30:
 323              		.cfi_def_cfa_register 7
 324 00b6 0346     		mov	r3, r0
 325 00b8 FB71     		strb	r3, [r7, #7]
 180:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 181:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 182:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
 326              		.loc 2 182 0
 327 00ba 044A     		ldr	r2, .L14
 328 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 00be 1360     		str	r3, [r2]
 183:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 330              		.loc 2 183 0
 331 00c0 00BF     		nop
 332 00c2 0C37     		adds	r7, r7, #12
 333              	.LCFI31:
 334              		.cfi_def_cfa_offset 4
 335 00c4 BD46     		mov	sp, r7
 336              	.LCFI32:
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
 339 00c6 80BC     		pop	{r7}
 340              	.LCFI33:
 341              		.cfi_restore 7
 342              		.cfi_def_cfa_offset 0
 343 00c8 7047     		bx	lr
 344              	.L15:
 345 00ca 00BF     		.align	2
 346              	.L14:
 347 00cc A0000E42 		.word	1108213920
 348              		.cfi_endproc
 349              	.LFE33:
 350              		.size	PWR_WakeUpPinCmd, .-PWR_WakeUpPinCmd
 351              		.align	1
 352              		.global	PWR_EnterSTOPMode
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu softvfp
 357              		.type	PWR_EnterSTOPMode, %function
 358              	PWR_EnterSTOPMode:
 359              	.LFB34:
 184:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 185:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 186:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enters STOP mode.
 187:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 188:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 189:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_ON: STOP mode with regulator ON
 190:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_LowPower: STOP mode with regulator in low power mode
 191:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 192:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 193:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 194:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 195:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 196:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 32


 197:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 198:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 360              		.loc 2 198 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 16
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 00d0 80B5     		push	{r7, lr}
 365              	.LCFI34:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 00d2 84B0     		sub	sp, sp, #16
 370              	.LCFI35:
 371              		.cfi_def_cfa_offset 24
 372 00d4 00AF     		add	r7, sp, #0
 373              	.LCFI36:
 374              		.cfi_def_cfa_register 7
 375 00d6 7860     		str	r0, [r7, #4]
 376 00d8 0B46     		mov	r3, r1
 377 00da FB70     		strb	r3, [r7, #3]
 199:../../source/src/FWlib/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 378              		.loc 2 199 0
 379 00dc 0023     		movs	r3, #0
 380 00de FB60     		str	r3, [r7, #12]
 200:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 201:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 202:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 203:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 204:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 205:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 381              		.loc 2 205 0
 382 00e0 124B     		ldr	r3, .L19
 383 00e2 1B68     		ldr	r3, [r3]
 384 00e4 FB60     		str	r3, [r7, #12]
 206:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear PDDS and LPDS bits */
 207:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg &= CR_DS_MASK;
 385              		.loc 2 207 0
 386 00e6 FB68     		ldr	r3, [r7, #12]
 387 00e8 23F00303 		bic	r3, r3, #3
 388 00ec FB60     		str	r3, [r7, #12]
 208:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set LPDS bit according to PWR_Regulator value */
 209:../../source/src/FWlib/src/stm32f10x_pwr.c ****   tmpreg |= PWR_Regulator;
 389              		.loc 2 209 0
 390 00ee FA68     		ldr	r2, [r7, #12]
 391 00f0 7B68     		ldr	r3, [r7, #4]
 392 00f2 1343     		orrs	r3, r3, r2
 393 00f4 FB60     		str	r3, [r7, #12]
 210:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Store the new value */
 211:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 394              		.loc 2 211 0
 395 00f6 0D4A     		ldr	r2, .L19
 396 00f8 FB68     		ldr	r3, [r7, #12]
 397 00fa 1360     		str	r3, [r2]
 212:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 213:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 398              		.loc 2 213 0
 399 00fc 0C4B     		ldr	r3, .L19+4
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 33


 400 00fe 1B69     		ldr	r3, [r3, #16]
 401 0100 0B4A     		ldr	r2, .L19+4
 402 0102 43F00403 		orr	r3, r3, #4
 403 0106 1361     		str	r3, [r2, #16]
 214:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 215:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 216:../../source/src/FWlib/src/stm32f10x_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 404              		.loc 2 216 0
 405 0108 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 406 010a 012B     		cmp	r3, #1
 407 010c 02D1     		bne	.L17
 217:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {   
 218:../../source/src/FWlib/src/stm32f10x_pwr.c ****     /* Request Wait For Interrupt */
 219:../../source/src/FWlib/src/stm32f10x_pwr.c ****     __WFI();
 408              		.loc 2 219 0
 409 010e FFF777FF 		bl	__WFI
 410 0112 01E0     		b	.L18
 411              	.L17:
 220:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 221:../../source/src/FWlib/src/stm32f10x_pwr.c ****   else
 222:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 223:../../source/src/FWlib/src/stm32f10x_pwr.c ****     /* Request Wait For Event */
 224:../../source/src/FWlib/src/stm32f10x_pwr.c ****     __WFE();
 412              		.loc 2 224 0
 413 0114 FFF77BFF 		bl	__WFE
 414              	.L18:
 225:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 226:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 227:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 228:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP);  
 415              		.loc 2 228 0
 416 0118 054B     		ldr	r3, .L19+4
 417 011a 1B69     		ldr	r3, [r3, #16]
 418 011c 044A     		ldr	r2, .L19+4
 419 011e 23F00403 		bic	r3, r3, #4
 420 0122 1361     		str	r3, [r2, #16]
 229:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 421              		.loc 2 229 0
 422 0124 00BF     		nop
 423 0126 1037     		adds	r7, r7, #16
 424              	.LCFI37:
 425              		.cfi_def_cfa_offset 8
 426 0128 BD46     		mov	sp, r7
 427              	.LCFI38:
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 012a 80BD     		pop	{r7, pc}
 431              	.L20:
 432              		.align	2
 433              	.L19:
 434 012c 00700040 		.word	1073770496
 435 0130 00ED00E0 		.word	-536810240
 436              		.cfi_endproc
 437              	.LFE34:
 438              		.size	PWR_EnterSTOPMode, .-PWR_EnterSTOPMode
 439              		.align	1
 440              		.global	PWR_EnterSTANDBYMode
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 34


 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 445              		.type	PWR_EnterSTANDBYMode, %function
 446              	PWR_EnterSTANDBYMode:
 447              	.LFB35:
 230:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 231:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 232:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Enters STANDBY mode.
 233:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  None
 234:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 235:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 236:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_EnterSTANDBYMode(void)
 237:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 448              		.loc 2 237 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0134 80B5     		push	{r7, lr}
 453              	.LCFI39:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0136 00AF     		add	r7, sp, #0
 458              	.LCFI40:
 459              		.cfi_def_cfa_register 7
 238:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Clear Wake-up flag */
 239:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_CWUF;
 460              		.loc 2 239 0
 461 0138 0A4B     		ldr	r3, .L22
 462 013a 1B68     		ldr	r3, [r3]
 463 013c 094A     		ldr	r2, .L22
 464 013e 43F00403 		orr	r3, r3, #4
 465 0142 1360     		str	r3, [r2]
 240:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Select STANDBY mode */
 241:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 466              		.loc 2 241 0
 467 0144 074B     		ldr	r3, .L22
 468 0146 1B68     		ldr	r3, [r3]
 469 0148 064A     		ldr	r2, .L22
 470 014a 43F00203 		orr	r3, r3, #2
 471 014e 1360     		str	r3, [r2]
 242:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 243:../../source/src/FWlib/src/stm32f10x_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP;
 472              		.loc 2 243 0
 473 0150 054B     		ldr	r3, .L22+4
 474 0152 1B69     		ldr	r3, [r3, #16]
 475 0154 044A     		ldr	r2, .L22+4
 476 0156 43F00403 		orr	r3, r3, #4
 477 015a 1361     		str	r3, [r2, #16]
 244:../../source/src/FWlib/src/stm32f10x_pwr.c **** /* This option is used to ensure that store operations are completed */
 245:../../source/src/FWlib/src/stm32f10x_pwr.c **** #if defined ( __CC_ARM   )
 246:../../source/src/FWlib/src/stm32f10x_pwr.c ****   __force_stores();
 247:../../source/src/FWlib/src/stm32f10x_pwr.c **** #endif
 248:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Request Wait For Interrupt */
 249:../../source/src/FWlib/src/stm32f10x_pwr.c ****   __WFI();
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 35


 478              		.loc 2 249 0
 479 015c FFF750FF 		bl	__WFI
 250:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 480              		.loc 2 250 0
 481 0160 00BF     		nop
 482 0162 80BD     		pop	{r7, pc}
 483              	.L23:
 484              		.align	2
 485              	.L22:
 486 0164 00700040 		.word	1073770496
 487 0168 00ED00E0 		.word	-536810240
 488              		.cfi_endproc
 489              	.LFE35:
 490              		.size	PWR_EnterSTANDBYMode, .-PWR_EnterSTANDBYMode
 491              		.align	1
 492              		.global	PWR_GetFlagStatus
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu softvfp
 497              		.type	PWR_GetFlagStatus, %function
 498              	PWR_GetFlagStatus:
 499              	.LFB36:
 251:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 252:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 253:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 254:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 255:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 256:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 257:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 258:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_PVDO: PVD Output
 259:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 260:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 261:../../source/src/FWlib/src/stm32f10x_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
 262:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 500              		.loc 2 262 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 16
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505 016c 80B4     		push	{r7}
 506              	.LCFI41:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 016e 85B0     		sub	sp, sp, #20
 510              	.LCFI42:
 511              		.cfi_def_cfa_offset 24
 512 0170 00AF     		add	r7, sp, #0
 513              	.LCFI43:
 514              		.cfi_def_cfa_register 7
 515 0172 7860     		str	r0, [r7, #4]
 263:../../source/src/FWlib/src/stm32f10x_pwr.c ****   FlagStatus bitstatus = RESET;
 516              		.loc 2 263 0
 517 0174 0023     		movs	r3, #0
 518 0176 FB73     		strb	r3, [r7, #15]
 264:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 265:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 36


 266:../../source/src/FWlib/src/stm32f10x_pwr.c ****   
 267:../../source/src/FWlib/src/stm32f10x_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 519              		.loc 2 267 0
 520 0178 084B     		ldr	r3, .L28
 521 017a 5A68     		ldr	r2, [r3, #4]
 522 017c 7B68     		ldr	r3, [r7, #4]
 523 017e 1340     		ands	r3, r3, r2
 524 0180 002B     		cmp	r3, #0
 525 0182 02D0     		beq	.L25
 268:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 269:../../source/src/FWlib/src/stm32f10x_pwr.c ****     bitstatus = SET;
 526              		.loc 2 269 0
 527 0184 0123     		movs	r3, #1
 528 0186 FB73     		strb	r3, [r7, #15]
 529 0188 01E0     		b	.L26
 530              	.L25:
 270:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 271:../../source/src/FWlib/src/stm32f10x_pwr.c ****   else
 272:../../source/src/FWlib/src/stm32f10x_pwr.c ****   {
 273:../../source/src/FWlib/src/stm32f10x_pwr.c ****     bitstatus = RESET;
 531              		.loc 2 273 0
 532 018a 0023     		movs	r3, #0
 533 018c FB73     		strb	r3, [r7, #15]
 534              	.L26:
 274:../../source/src/FWlib/src/stm32f10x_pwr.c ****   }
 275:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Return the flag status */
 276:../../source/src/FWlib/src/stm32f10x_pwr.c ****   return bitstatus;
 535              		.loc 2 276 0
 536 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 277:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 537              		.loc 2 277 0
 538 0190 1846     		mov	r0, r3
 539 0192 1437     		adds	r7, r7, #20
 540              	.LCFI44:
 541              		.cfi_def_cfa_offset 4
 542 0194 BD46     		mov	sp, r7
 543              	.LCFI45:
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 0196 80BC     		pop	{r7}
 547              	.LCFI46:
 548              		.cfi_restore 7
 549              		.cfi_def_cfa_offset 0
 550 0198 7047     		bx	lr
 551              	.L29:
 552 019a 00BF     		.align	2
 553              	.L28:
 554 019c 00700040 		.word	1073770496
 555              		.cfi_endproc
 556              	.LFE36:
 557              		.size	PWR_GetFlagStatus, .-PWR_GetFlagStatus
 558              		.align	1
 559              		.global	PWR_ClearFlag
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 37


 564              		.type	PWR_ClearFlag, %function
 565              	PWR_ClearFlag:
 566              	.LFB37:
 278:../../source/src/FWlib/src/stm32f10x_pwr.c **** 
 279:../../source/src/FWlib/src/stm32f10x_pwr.c **** /**
 280:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @brief  Clears the PWR's pending flags.
 281:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 282:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 283:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 284:../../source/src/FWlib/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 285:../../source/src/FWlib/src/stm32f10x_pwr.c ****   * @retval None
 286:../../source/src/FWlib/src/stm32f10x_pwr.c ****   */
 287:../../source/src/FWlib/src/stm32f10x_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 288:../../source/src/FWlib/src/stm32f10x_pwr.c **** {
 567              		.loc 2 288 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572 01a0 80B4     		push	{r7}
 573              	.LCFI47:
 574              		.cfi_def_cfa_offset 4
 575              		.cfi_offset 7, -4
 576 01a2 83B0     		sub	sp, sp, #12
 577              	.LCFI48:
 578              		.cfi_def_cfa_offset 16
 579 01a4 00AF     		add	r7, sp, #0
 580              	.LCFI49:
 581              		.cfi_def_cfa_register 7
 582 01a6 7860     		str	r0, [r7, #4]
 289:../../source/src/FWlib/src/stm32f10x_pwr.c ****   /* Check the parameters */
 290:../../source/src/FWlib/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 291:../../source/src/FWlib/src/stm32f10x_pwr.c ****          
 292:../../source/src/FWlib/src/stm32f10x_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 583              		.loc 2 292 0
 584 01a8 054B     		ldr	r3, .L31
 585 01aa 1A68     		ldr	r2, [r3]
 586 01ac 7B68     		ldr	r3, [r7, #4]
 587 01ae 9B00     		lsls	r3, r3, #2
 588 01b0 0349     		ldr	r1, .L31
 589 01b2 1343     		orrs	r3, r3, r2
 590 01b4 0B60     		str	r3, [r1]
 293:../../source/src/FWlib/src/stm32f10x_pwr.c **** }
 591              		.loc 2 293 0
 592 01b6 00BF     		nop
 593 01b8 0C37     		adds	r7, r7, #12
 594              	.LCFI50:
 595              		.cfi_def_cfa_offset 4
 596 01ba BD46     		mov	sp, r7
 597              	.LCFI51:
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 01bc 80BC     		pop	{r7}
 601              	.LCFI52:
 602              		.cfi_restore 7
 603              		.cfi_def_cfa_offset 0
 604 01be 7047     		bx	lr
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 38


 605              	.L32:
 606              		.align	2
 607              	.L31:
 608 01c0 00700040 		.word	1073770496
 609              		.cfi_endproc
 610              	.LFE37:
 611              		.size	PWR_ClearFlag, .-PWR_ClearFlag
 612              	.Letext0:
 613              		.file 3 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\machine\\_default_types.h"
 614              		.file 4 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\sys\\_stdint.h"
 615              		.file 5 "../../source/include/system_stm32f10x.h"
 616              		.file 6 "../../source/include/stm32f10x.h"
 617              		.section	.debug_info,"",%progbits
 618              	.Ldebug_info0:
 619 0000 91040000 		.4byte	0x491
 620 0004 0200     		.2byte	0x2
 621 0006 00000000 		.4byte	.Ldebug_abbrev0
 622 000a 04       		.byte	0x4
 623 000b 01       		.uleb128 0x1
 624 000c 1F010000 		.4byte	.LASF54
 625 0010 0C       		.byte	0xc
 626 0011 C5010000 		.4byte	.LASF55
 627 0015 92000000 		.4byte	.LASF56
 628 0019 00000000 		.4byte	.Ltext0
 629 001d C4010000 		.4byte	.Letext0
 630 0021 00000000 		.4byte	.Ldebug_line0
 631 0025 02       		.uleb128 0x2
 632 0026 01       		.byte	0x1
 633 0027 06       		.byte	0x6
 634 0028 F0010000 		.4byte	.LASF0
 635 002c 03       		.uleb128 0x3
 636 002d E2000000 		.4byte	.LASF3
 637 0031 03       		.byte	0x3
 638 0032 2B       		.byte	0x2b
 639 0033 37000000 		.4byte	0x37
 640 0037 02       		.uleb128 0x2
 641 0038 01       		.byte	0x1
 642 0039 08       		.byte	0x8
 643 003a 02010000 		.4byte	.LASF1
 644 003e 02       		.uleb128 0x2
 645 003f 02       		.byte	0x2
 646 0040 05       		.byte	0x5
 647 0041 75000000 		.4byte	.LASF2
 648 0045 03       		.uleb128 0x3
 649 0046 32000000 		.4byte	.LASF4
 650 004a 03       		.byte	0x3
 651 004b 39       		.byte	0x39
 652 004c 50000000 		.4byte	0x50
 653 0050 02       		.uleb128 0x2
 654 0051 02       		.byte	0x2
 655 0052 07       		.byte	0x7
 656 0053 5D020000 		.4byte	.LASF5
 657 0057 02       		.uleb128 0x2
 658 0058 04       		.byte	0x4
 659 0059 05       		.byte	0x5
 660 005a D9000000 		.4byte	.LASF6
 661 005e 03       		.uleb128 0x3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 39


 662 005f 27000000 		.4byte	.LASF7
 663 0063 03       		.byte	0x3
 664 0064 4F       		.byte	0x4f
 665 0065 69000000 		.4byte	0x69
 666 0069 02       		.uleb128 0x2
 667 006a 04       		.byte	0x4
 668 006b 07       		.byte	0x7
 669 006c D2020000 		.4byte	.LASF8
 670 0070 02       		.uleb128 0x2
 671 0071 08       		.byte	0x8
 672 0072 05       		.byte	0x5
 673 0073 C0000000 		.4byte	.LASF9
 674 0077 02       		.uleb128 0x2
 675 0078 08       		.byte	0x8
 676 0079 07       		.byte	0x7
 677 007a FC010000 		.4byte	.LASF10
 678 007e 04       		.uleb128 0x4
 679 007f 04       		.byte	0x4
 680 0080 05       		.byte	0x5
 681 0081 696E7400 		.ascii	"int\000"
 682 0085 05       		.uleb128 0x5
 683 0086 7E000000 		.4byte	0x7e
 684 008a 02       		.uleb128 0x2
 685 008b 04       		.byte	0x4
 686 008c 07       		.byte	0x7
 687 008d 1C020000 		.4byte	.LASF11
 688 0091 03       		.uleb128 0x3
 689 0092 5C000000 		.4byte	.LASF12
 690 0096 04       		.byte	0x4
 691 0097 18       		.byte	0x18
 692 0098 2C000000 		.4byte	0x2c
 693 009c 05       		.uleb128 0x5
 694 009d 91000000 		.4byte	0x91
 695 00a1 03       		.uleb128 0x3
 696 00a2 29020000 		.4byte	.LASF13
 697 00a6 04       		.byte	0x4
 698 00a7 24       		.byte	0x24
 699 00a8 45000000 		.4byte	0x45
 700 00ac 03       		.uleb128 0x3
 701 00ad 13020000 		.4byte	.LASF14
 702 00b1 04       		.byte	0x4
 703 00b2 30       		.byte	0x30
 704 00b3 5E000000 		.4byte	0x5e
 705 00b7 05       		.uleb128 0x5
 706 00b8 AC000000 		.4byte	0xac
 707 00bc 06       		.uleb128 0x6
 708 00bd B7000000 		.4byte	0xb7
 709 00c1 07       		.uleb128 0x7
 710 00c2 74       		.byte	0x74
 711 00c3 01       		.byte	0x1
 712 00c4 9B       		.byte	0x9b
 713 00c5 D4010000 		.4byte	0x1d4
 714 00c9 08       		.uleb128 0x8
 715 00ca 3D000000 		.4byte	.LASF15
 716 00ce 01       		.byte	0x1
 717 00cf 9D       		.byte	0x9d
 718 00d0 BC000000 		.4byte	0xbc
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 40


 719 00d4 02       		.byte	0x2
 720 00d5 23       		.byte	0x23
 721 00d6 00       		.uleb128 0
 722 00d7 08       		.uleb128 0x8
 723 00d8 8D000000 		.4byte	.LASF16
 724 00dc 01       		.byte	0x1
 725 00dd 9E       		.byte	0x9e
 726 00de B7000000 		.4byte	0xb7
 727 00e2 02       		.byte	0x2
 728 00e3 23       		.byte	0x23
 729 00e4 04       		.uleb128 0x4
 730 00e5 08       		.uleb128 0x8
 731 00e6 7E020000 		.4byte	.LASF17
 732 00ea 01       		.byte	0x1
 733 00eb 9F       		.byte	0x9f
 734 00ec B7000000 		.4byte	0xb7
 735 00f0 02       		.byte	0x2
 736 00f1 23       		.byte	0x23
 737 00f2 08       		.uleb128 0x8
 738 00f3 08       		.uleb128 0x8
 739 00f4 10010000 		.4byte	.LASF18
 740 00f8 01       		.byte	0x1
 741 00f9 A0       		.byte	0xa0
 742 00fa B7000000 		.4byte	0xb7
 743 00fe 02       		.byte	0x2
 744 00ff 23       		.byte	0x23
 745 0100 0C       		.uleb128 0xc
 746 0101 09       		.uleb128 0x9
 747 0102 53435200 		.ascii	"SCR\000"
 748 0106 01       		.byte	0x1
 749 0107 A1       		.byte	0xa1
 750 0108 B7000000 		.4byte	0xb7
 751 010c 02       		.byte	0x2
 752 010d 23       		.byte	0x23
 753 010e 10       		.uleb128 0x10
 754 010f 09       		.uleb128 0x9
 755 0110 43435200 		.ascii	"CCR\000"
 756 0114 01       		.byte	0x1
 757 0115 A2       		.byte	0xa2
 758 0116 B7000000 		.4byte	0xb7
 759 011a 02       		.byte	0x2
 760 011b 23       		.byte	0x23
 761 011c 14       		.uleb128 0x14
 762 011d 09       		.uleb128 0x9
 763 011e 53485000 		.ascii	"SHP\000"
 764 0122 01       		.byte	0x1
 765 0123 A3       		.byte	0xa3
 766 0124 E4010000 		.4byte	0x1e4
 767 0128 02       		.byte	0x2
 768 0129 23       		.byte	0x23
 769 012a 18       		.uleb128 0x18
 770 012b 08       		.uleb128 0x8
 771 012c 32020000 		.4byte	.LASF19
 772 0130 01       		.byte	0x1
 773 0131 A4       		.byte	0xa4
 774 0132 B7000000 		.4byte	0xb7
 775 0136 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 41


 776 0137 23       		.byte	0x23
 777 0138 24       		.uleb128 0x24
 778 0139 08       		.uleb128 0x8
 779 013a EC000000 		.4byte	.LASF20
 780 013e 01       		.byte	0x1
 781 013f A5       		.byte	0xa5
 782 0140 B7000000 		.4byte	0xb7
 783 0144 02       		.byte	0x2
 784 0145 23       		.byte	0x23
 785 0146 28       		.uleb128 0x28
 786 0147 08       		.uleb128 0x8
 787 0148 A8020000 		.4byte	.LASF21
 788 014c 01       		.byte	0x1
 789 014d A6       		.byte	0xa6
 790 014e B7000000 		.4byte	0xb7
 791 0152 02       		.byte	0x2
 792 0153 23       		.byte	0x23
 793 0154 2C       		.uleb128 0x2c
 794 0155 08       		.uleb128 0x8
 795 0156 88020000 		.4byte	.LASF22
 796 015a 01       		.byte	0x1
 797 015b A7       		.byte	0xa7
 798 015c B7000000 		.4byte	0xb7
 799 0160 02       		.byte	0x2
 800 0161 23       		.byte	0x23
 801 0162 30       		.uleb128 0x30
 802 0163 08       		.uleb128 0x8
 803 0164 46020000 		.4byte	.LASF23
 804 0168 01       		.byte	0x1
 805 0169 A8       		.byte	0xa8
 806 016a B7000000 		.4byte	0xb7
 807 016e 02       		.byte	0x2
 808 016f 23       		.byte	0x23
 809 0170 34       		.uleb128 0x34
 810 0171 08       		.uleb128 0x8
 811 0172 57000000 		.4byte	.LASF24
 812 0176 01       		.byte	0x1
 813 0177 A9       		.byte	0xa9
 814 0178 B7000000 		.4byte	0xb7
 815 017c 02       		.byte	0x2
 816 017d 23       		.byte	0x23
 817 017e 38       		.uleb128 0x38
 818 017f 08       		.uleb128 0x8
 819 0180 06030000 		.4byte	.LASF25
 820 0184 01       		.byte	0x1
 821 0185 AA       		.byte	0xaa
 822 0186 B7000000 		.4byte	0xb7
 823 018a 02       		.byte	0x2
 824 018b 23       		.byte	0x23
 825 018c 3C       		.uleb128 0x3c
 826 018d 09       		.uleb128 0x9
 827 018e 50465200 		.ascii	"PFR\000"
 828 0192 01       		.byte	0x1
 829 0193 AB       		.byte	0xab
 830 0194 FE010000 		.4byte	0x1fe
 831 0198 02       		.byte	0x2
 832 0199 23       		.byte	0x23
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 42


 833 019a 40       		.uleb128 0x40
 834 019b 09       		.uleb128 0x9
 835 019c 44465200 		.ascii	"DFR\000"
 836 01a0 01       		.byte	0x1
 837 01a1 AC       		.byte	0xac
 838 01a2 BC000000 		.4byte	0xbc
 839 01a6 02       		.byte	0x2
 840 01a7 23       		.byte	0x23
 841 01a8 48       		.uleb128 0x48
 842 01a9 09       		.uleb128 0x9
 843 01aa 41445200 		.ascii	"ADR\000"
 844 01ae 01       		.byte	0x1
 845 01af AD       		.byte	0xad
 846 01b0 BC000000 		.4byte	0xbc
 847 01b4 02       		.byte	0x2
 848 01b5 23       		.byte	0x23
 849 01b6 4C       		.uleb128 0x4c
 850 01b7 08       		.uleb128 0x8
 851 01b8 AD020000 		.4byte	.LASF26
 852 01bc 01       		.byte	0x1
 853 01bd AE       		.byte	0xae
 854 01be 18020000 		.4byte	0x218
 855 01c2 02       		.byte	0x2
 856 01c3 23       		.byte	0x23
 857 01c4 50       		.uleb128 0x50
 858 01c5 08       		.uleb128 0x8
 859 01c6 83020000 		.4byte	.LASF27
 860 01ca 01       		.byte	0x1
 861 01cb AF       		.byte	0xaf
 862 01cc 32020000 		.4byte	0x232
 863 01d0 02       		.byte	0x2
 864 01d1 23       		.byte	0x23
 865 01d2 60       		.uleb128 0x60
 866 01d3 00       		.byte	0
 867 01d4 0A       		.uleb128 0xa
 868 01d5 9C000000 		.4byte	0x9c
 869 01d9 E4010000 		.4byte	0x1e4
 870 01dd 0B       		.uleb128 0xb
 871 01de 8A000000 		.4byte	0x8a
 872 01e2 0B       		.byte	0xb
 873 01e3 00       		.byte	0
 874 01e4 05       		.uleb128 0x5
 875 01e5 D4010000 		.4byte	0x1d4
 876 01e9 0A       		.uleb128 0xa
 877 01ea BC000000 		.4byte	0xbc
 878 01ee F9010000 		.4byte	0x1f9
 879 01f2 0B       		.uleb128 0xb
 880 01f3 8A000000 		.4byte	0x8a
 881 01f7 01       		.byte	0x1
 882 01f8 00       		.byte	0
 883 01f9 06       		.uleb128 0x6
 884 01fa E9010000 		.4byte	0x1e9
 885 01fe 05       		.uleb128 0x5
 886 01ff F9010000 		.4byte	0x1f9
 887 0203 0A       		.uleb128 0xa
 888 0204 BC000000 		.4byte	0xbc
 889 0208 13020000 		.4byte	0x213
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 43


 890 020c 0B       		.uleb128 0xb
 891 020d 8A000000 		.4byte	0x8a
 892 0211 03       		.byte	0x3
 893 0212 00       		.byte	0
 894 0213 06       		.uleb128 0x6
 895 0214 03020000 		.4byte	0x203
 896 0218 05       		.uleb128 0x5
 897 0219 13020000 		.4byte	0x213
 898 021d 0A       		.uleb128 0xa
 899 021e BC000000 		.4byte	0xbc
 900 0222 2D020000 		.4byte	0x22d
 901 0226 0B       		.uleb128 0xb
 902 0227 8A000000 		.4byte	0x8a
 903 022b 04       		.byte	0x4
 904 022c 00       		.byte	0
 905 022d 06       		.uleb128 0x6
 906 022e 1D020000 		.4byte	0x21d
 907 0232 05       		.uleb128 0x5
 908 0233 2D020000 		.4byte	0x22d
 909 0237 03       		.uleb128 0x3
 910 0238 16010000 		.4byte	.LASF28
 911 023c 01       		.byte	0x1
 912 023d B0       		.byte	0xb0
 913 023e C1000000 		.4byte	0xc1
 914 0242 0C       		.uleb128 0xc
 915 0243 20030000 		.4byte	.LASF29
 916 0247 01       		.byte	0x1
 917 0248 CE06     		.2byte	0x6ce
 918 024a 85000000 		.4byte	0x85
 919 024e 01       		.byte	0x1
 920 024f 01       		.byte	0x1
 921 0250 0D       		.uleb128 0xd
 922 0251 98020000 		.4byte	.LASF30
 923 0255 05       		.byte	0x5
 924 0256 35       		.byte	0x35
 925 0257 AC000000 		.4byte	0xac
 926 025b 01       		.byte	0x1
 927 025c 01       		.byte	0x1
 928 025d 0E       		.uleb128 0xe
 929 025e 07       		.byte	0x7
 930 025f 01       		.byte	0x1
 931 0260 37000000 		.4byte	0x37
 932 0264 06       		.byte	0x6
 933 0265 0702     		.2byte	0x207
 934 0267 78020000 		.4byte	0x278
 935 026b 0F       		.uleb128 0xf
 936 026c F4020000 		.4byte	.LASF31
 937 0270 00       		.byte	0
 938 0271 10       		.uleb128 0x10
 939 0272 53455400 		.ascii	"SET\000"
 940 0276 01       		.byte	0x1
 941 0277 00       		.byte	0
 942 0278 11       		.uleb128 0x11
 943 0279 2D030000 		.4byte	.LASF32
 944 027d 06       		.byte	0x6
 945 027e 0702     		.2byte	0x207
 946 0280 5D020000 		.4byte	0x25d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 44


 947 0284 0E       		.uleb128 0xe
 948 0285 07       		.byte	0x7
 949 0286 01       		.byte	0x1
 950 0287 37000000 		.4byte	0x37
 951 028b 06       		.byte	0x6
 952 028c 0902     		.2byte	0x209
 953 028e 9F020000 		.4byte	0x29f
 954 0292 0F       		.uleb128 0xf
 955 0293 6D000000 		.4byte	.LASF33
 956 0297 00       		.byte	0
 957 0298 0F       		.uleb128 0xf
 958 0299 38030000 		.4byte	.LASF34
 959 029d 01       		.byte	0x1
 960 029e 00       		.byte	0
 961 029f 11       		.uleb128 0x11
 962 02a0 E4020000 		.4byte	.LASF35
 963 02a4 06       		.byte	0x6
 964 02a5 0902     		.2byte	0x209
 965 02a7 84020000 		.4byte	0x284
 966 02ab 12       		.uleb128 0x12
 967 02ac 08       		.byte	0x8
 968 02ad 06       		.byte	0x6
 969 02ae 2A04     		.2byte	0x42a
 970 02b0 D2020000 		.4byte	0x2d2
 971 02b4 13       		.uleb128 0x13
 972 02b5 435200   		.ascii	"CR\000"
 973 02b8 06       		.byte	0x6
 974 02b9 2C04     		.2byte	0x42c
 975 02bb B7000000 		.4byte	0xb7
 976 02bf 02       		.byte	0x2
 977 02c0 23       		.byte	0x23
 978 02c1 00       		.uleb128 0
 979 02c2 13       		.uleb128 0x13
 980 02c3 43535200 		.ascii	"CSR\000"
 981 02c7 06       		.byte	0x6
 982 02c8 2D04     		.2byte	0x42d
 983 02ca B7000000 		.4byte	0xb7
 984 02ce 02       		.byte	0x2
 985 02cf 23       		.byte	0x23
 986 02d0 04       		.uleb128 0x4
 987 02d1 00       		.byte	0
 988 02d2 11       		.uleb128 0x11
 989 02d3 1B000000 		.4byte	.LASF36
 990 02d7 06       		.byte	0x6
 991 02d8 2E04     		.2byte	0x42e
 992 02da AB020000 		.4byte	0x2ab
 993 02de 14       		.uleb128 0x14
 994 02df 01       		.byte	0x1
 995 02e0 7F000000 		.4byte	.LASF38
 996 02e4 02       		.byte	0x2
 997 02e5 1F01     		.2byte	0x11f
 998 02e7 01       		.byte	0x1
 999 02e8 A0010000 		.4byte	.LFB37
 1000 02ec C4010000 		.4byte	.LFE37
 1001 02f0 00000000 		.4byte	.LLST10
 1002 02f4 01       		.byte	0x1
 1003 02f5 09030000 		.4byte	0x309
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 45


 1004 02f9 15       		.uleb128 0x15
 1005 02fa 12000000 		.4byte	.LASF37
 1006 02fe 02       		.byte	0x2
 1007 02ff 1F01     		.2byte	0x11f
 1008 0301 AC000000 		.4byte	0xac
 1009 0305 02       		.byte	0x2
 1010 0306 91       		.byte	0x91
 1011 0307 74       		.sleb128 -12
 1012 0308 00       		.byte	0
 1013 0309 16       		.uleb128 0x16
 1014 030a 01       		.byte	0x1
 1015 030b 3F030000 		.4byte	.LASF57
 1016 030f 02       		.byte	0x2
 1017 0310 0501     		.2byte	0x105
 1018 0312 01       		.byte	0x1
 1019 0313 78020000 		.4byte	0x278
 1020 0317 6C010000 		.4byte	.LFB36
 1021 031b A0010000 		.4byte	.LFE36
 1022 031f 5C000000 		.4byte	.LLST9
 1023 0323 01       		.byte	0x1
 1024 0324 47030000 		.4byte	0x347
 1025 0328 15       		.uleb128 0x15
 1026 0329 12000000 		.4byte	.LASF37
 1027 032d 02       		.byte	0x2
 1028 032e 0501     		.2byte	0x105
 1029 0330 AC000000 		.4byte	0xac
 1030 0334 02       		.byte	0x2
 1031 0335 91       		.byte	0x91
 1032 0336 6C       		.sleb128 -20
 1033 0337 17       		.uleb128 0x17
 1034 0338 F8000000 		.4byte	.LASF42
 1035 033c 02       		.byte	0x2
 1036 033d 0701     		.2byte	0x107
 1037 033f 78020000 		.4byte	0x278
 1038 0343 02       		.byte	0x2
 1039 0344 91       		.byte	0x91
 1040 0345 77       		.sleb128 -9
 1041 0346 00       		.byte	0
 1042 0347 18       		.uleb128 0x18
 1043 0348 01       		.byte	0x1
 1044 0349 0B030000 		.4byte	.LASF50
 1045 034d 02       		.byte	0x2
 1046 034e EC       		.byte	0xec
 1047 034f 01       		.byte	0x1
 1048 0350 34010000 		.4byte	.LFB35
 1049 0354 6C010000 		.4byte	.LFE35
 1050 0358 B8000000 		.4byte	.LLST8
 1051 035c 01       		.byte	0x1
 1052 035d 19       		.uleb128 0x19
 1053 035e 01       		.byte	0x1
 1054 035f 00000000 		.4byte	.LASF39
 1055 0363 02       		.byte	0x2
 1056 0364 C5       		.byte	0xc5
 1057 0365 01       		.byte	0x1
 1058 0366 D0000000 		.4byte	.LFB34
 1059 036a 34010000 		.4byte	.LFE34
 1060 036e E4000000 		.4byte	.LLST7
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 46


 1061 0372 01       		.byte	0x1
 1062 0373 A2030000 		.4byte	0x3a2
 1063 0377 1A       		.uleb128 0x1a
 1064 0378 70020000 		.4byte	.LASF40
 1065 037c 02       		.byte	0x2
 1066 037d C5       		.byte	0xc5
 1067 037e AC000000 		.4byte	0xac
 1068 0382 02       		.byte	0x2
 1069 0383 91       		.byte	0x91
 1070 0384 6C       		.sleb128 -20
 1071 0385 1A       		.uleb128 0x1a
 1072 0386 38020000 		.4byte	.LASF41
 1073 038a 02       		.byte	0x2
 1074 038b C5       		.byte	0xc5
 1075 038c 91000000 		.4byte	0x91
 1076 0390 02       		.byte	0x2
 1077 0391 91       		.byte	0x91
 1078 0392 6B       		.sleb128 -21
 1079 0393 1B       		.uleb128 0x1b
 1080 0394 F1000000 		.4byte	.LASF43
 1081 0398 02       		.byte	0x2
 1082 0399 C7       		.byte	0xc7
 1083 039a AC000000 		.4byte	0xac
 1084 039e 02       		.byte	0x2
 1085 039f 91       		.byte	0x91
 1086 03a0 74       		.sleb128 -12
 1087 03a1 00       		.byte	0
 1088 03a2 1C       		.uleb128 0x1c
 1089 03a3 01       		.byte	0x1
 1090 03a4 4C020000 		.4byte	.LASF44
 1091 03a8 02       		.byte	0x2
 1092 03a9 B2       		.byte	0xb2
 1093 03aa 01       		.byte	0x1
 1094 03ab B0000000 		.4byte	.LFB33
 1095 03af D0000000 		.4byte	.LFE33
 1096 03b3 34010000 		.4byte	.LLST6
 1097 03b7 01       		.byte	0x1
 1098 03b8 CB030000 		.4byte	0x3cb
 1099 03bc 1A       		.uleb128 0x1a
 1100 03bd 64000000 		.4byte	.LASF45
 1101 03c1 02       		.byte	0x2
 1102 03c2 B2       		.byte	0xb2
 1103 03c3 9F020000 		.4byte	0x29f
 1104 03c7 02       		.byte	0x2
 1105 03c8 91       		.byte	0x91
 1106 03c9 77       		.sleb128 -9
 1107 03ca 00       		.byte	0
 1108 03cb 1C       		.uleb128 0x1c
 1109 03cc 01       		.byte	0x1
 1110 03cd BF020000 		.4byte	.LASF46
 1111 03d1 02       		.byte	0x2
 1112 03d2 9E       		.byte	0x9e
 1113 03d3 01       		.byte	0x1
 1114 03d4 78000000 		.4byte	.LFB32
 1115 03d8 B0000000 		.4byte	.LFE32
 1116 03dc 90010000 		.4byte	.LLST5
 1117 03e0 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 47


 1118 03e1 02040000 		.4byte	0x402
 1119 03e5 1A       		.uleb128 0x1a
 1120 03e6 B2020000 		.4byte	.LASF47
 1121 03ea 02       		.byte	0x2
 1122 03eb 9E       		.byte	0x9e
 1123 03ec AC000000 		.4byte	0xac
 1124 03f0 02       		.byte	0x2
 1125 03f1 91       		.byte	0x91
 1126 03f2 6C       		.sleb128 -20
 1127 03f3 1B       		.uleb128 0x1b
 1128 03f4 F1000000 		.4byte	.LASF43
 1129 03f8 02       		.byte	0x2
 1130 03f9 A0       		.byte	0xa0
 1131 03fa AC000000 		.4byte	0xac
 1132 03fe 02       		.byte	0x2
 1133 03ff 91       		.byte	0x91
 1134 0400 74       		.sleb128 -12
 1135 0401 00       		.byte	0
 1136 0402 1C       		.uleb128 0x1c
 1137 0403 01       		.byte	0x1
 1138 0404 8D020000 		.4byte	.LASF48
 1139 0408 02       		.byte	0x2
 1140 0409 89       		.byte	0x89
 1141 040a 01       		.byte	0x1
 1142 040b 58000000 		.4byte	.LFB31
 1143 040f 78000000 		.4byte	.LFE31
 1144 0413 EC010000 		.4byte	.LLST4
 1145 0417 01       		.byte	0x1
 1146 0418 2B040000 		.4byte	0x42b
 1147 041c 1A       		.uleb128 0x1a
 1148 041d 64000000 		.4byte	.LASF45
 1149 0421 02       		.byte	0x2
 1150 0422 89       		.byte	0x89
 1151 0423 9F020000 		.4byte	0x29f
 1152 0427 02       		.byte	0x2
 1153 0428 91       		.byte	0x91
 1154 0429 77       		.sleb128 -9
 1155 042a 00       		.byte	0
 1156 042b 1C       		.uleb128 0x1c
 1157 042c 01       		.byte	0x1
 1158 042d 43000000 		.4byte	.LASF49
 1159 0431 02       		.byte	0x2
 1160 0432 7C       		.byte	0x7c
 1161 0433 01       		.byte	0x1
 1162 0434 38000000 		.4byte	.LFB30
 1163 0438 58000000 		.4byte	.LFE30
 1164 043c 48020000 		.4byte	.LLST3
 1165 0440 01       		.byte	0x1
 1166 0441 54040000 		.4byte	0x454
 1167 0445 1A       		.uleb128 0x1a
 1168 0446 64000000 		.4byte	.LASF45
 1169 044a 02       		.byte	0x2
 1170 044b 7C       		.byte	0x7c
 1171 044c 9F020000 		.4byte	0x29f
 1172 0450 02       		.byte	0x2
 1173 0451 91       		.byte	0x91
 1174 0452 77       		.sleb128 -9
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 48


 1175 0453 00       		.byte	0
 1176 0454 18       		.uleb128 0x18
 1177 0455 01       		.byte	0x1
 1178 0456 CE000000 		.4byte	.LASF51
 1179 045a 02       		.byte	0x2
 1180 045b 70       		.byte	0x70
 1181 045c 01       		.byte	0x1
 1182 045d 1C000000 		.4byte	.LFB29
 1183 0461 38000000 		.4byte	.LFE29
 1184 0465 A4020000 		.4byte	.LLST2
 1185 0469 01       		.byte	0x1
 1186 046a 1D       		.uleb128 0x1d
 1187 046b FA020000 		.4byte	.LASF52
 1188 046f 01       		.byte	0x1
 1189 0470 BC04     		.2byte	0x4bc
 1190 0472 0E000000 		.4byte	.LFB6
 1191 0476 1C000000 		.4byte	.LFE6
 1192 047a D0020000 		.4byte	.LLST1
 1193 047e 01       		.byte	0x1
 1194 047f 1D       		.uleb128 0x1d
 1195 0480 00030000 		.4byte	.LASF53
 1196 0484 01       		.byte	0x1
 1197 0485 BB04     		.2byte	0x4bb
 1198 0487 00000000 		.4byte	.LFB5
 1199 048b 0E000000 		.4byte	.LFE5
 1200 048f 14030000 		.4byte	.LLST0
 1201 0493 01       		.byte	0x1
 1202 0494 00       		.byte	0
 1203              		.section	.debug_abbrev,"",%progbits
 1204              	.Ldebug_abbrev0:
 1205 0000 01       		.uleb128 0x1
 1206 0001 11       		.uleb128 0x11
 1207 0002 01       		.byte	0x1
 1208 0003 25       		.uleb128 0x25
 1209 0004 0E       		.uleb128 0xe
 1210 0005 13       		.uleb128 0x13
 1211 0006 0B       		.uleb128 0xb
 1212 0007 03       		.uleb128 0x3
 1213 0008 0E       		.uleb128 0xe
 1214 0009 1B       		.uleb128 0x1b
 1215 000a 0E       		.uleb128 0xe
 1216 000b 11       		.uleb128 0x11
 1217 000c 01       		.uleb128 0x1
 1218 000d 12       		.uleb128 0x12
 1219 000e 01       		.uleb128 0x1
 1220 000f 10       		.uleb128 0x10
 1221 0010 06       		.uleb128 0x6
 1222 0011 00       		.byte	0
 1223 0012 00       		.byte	0
 1224 0013 02       		.uleb128 0x2
 1225 0014 24       		.uleb128 0x24
 1226 0015 00       		.byte	0
 1227 0016 0B       		.uleb128 0xb
 1228 0017 0B       		.uleb128 0xb
 1229 0018 3E       		.uleb128 0x3e
 1230 0019 0B       		.uleb128 0xb
 1231 001a 03       		.uleb128 0x3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 49


 1232 001b 0E       		.uleb128 0xe
 1233 001c 00       		.byte	0
 1234 001d 00       		.byte	0
 1235 001e 03       		.uleb128 0x3
 1236 001f 16       		.uleb128 0x16
 1237 0020 00       		.byte	0
 1238 0021 03       		.uleb128 0x3
 1239 0022 0E       		.uleb128 0xe
 1240 0023 3A       		.uleb128 0x3a
 1241 0024 0B       		.uleb128 0xb
 1242 0025 3B       		.uleb128 0x3b
 1243 0026 0B       		.uleb128 0xb
 1244 0027 49       		.uleb128 0x49
 1245 0028 13       		.uleb128 0x13
 1246 0029 00       		.byte	0
 1247 002a 00       		.byte	0
 1248 002b 04       		.uleb128 0x4
 1249 002c 24       		.uleb128 0x24
 1250 002d 00       		.byte	0
 1251 002e 0B       		.uleb128 0xb
 1252 002f 0B       		.uleb128 0xb
 1253 0030 3E       		.uleb128 0x3e
 1254 0031 0B       		.uleb128 0xb
 1255 0032 03       		.uleb128 0x3
 1256 0033 08       		.uleb128 0x8
 1257 0034 00       		.byte	0
 1258 0035 00       		.byte	0
 1259 0036 05       		.uleb128 0x5
 1260 0037 35       		.uleb128 0x35
 1261 0038 00       		.byte	0
 1262 0039 49       		.uleb128 0x49
 1263 003a 13       		.uleb128 0x13
 1264 003b 00       		.byte	0
 1265 003c 00       		.byte	0
 1266 003d 06       		.uleb128 0x6
 1267 003e 26       		.uleb128 0x26
 1268 003f 00       		.byte	0
 1269 0040 49       		.uleb128 0x49
 1270 0041 13       		.uleb128 0x13
 1271 0042 00       		.byte	0
 1272 0043 00       		.byte	0
 1273 0044 07       		.uleb128 0x7
 1274 0045 13       		.uleb128 0x13
 1275 0046 01       		.byte	0x1
 1276 0047 0B       		.uleb128 0xb
 1277 0048 0B       		.uleb128 0xb
 1278 0049 3A       		.uleb128 0x3a
 1279 004a 0B       		.uleb128 0xb
 1280 004b 3B       		.uleb128 0x3b
 1281 004c 0B       		.uleb128 0xb
 1282 004d 01       		.uleb128 0x1
 1283 004e 13       		.uleb128 0x13
 1284 004f 00       		.byte	0
 1285 0050 00       		.byte	0
 1286 0051 08       		.uleb128 0x8
 1287 0052 0D       		.uleb128 0xd
 1288 0053 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 50


 1289 0054 03       		.uleb128 0x3
 1290 0055 0E       		.uleb128 0xe
 1291 0056 3A       		.uleb128 0x3a
 1292 0057 0B       		.uleb128 0xb
 1293 0058 3B       		.uleb128 0x3b
 1294 0059 0B       		.uleb128 0xb
 1295 005a 49       		.uleb128 0x49
 1296 005b 13       		.uleb128 0x13
 1297 005c 38       		.uleb128 0x38
 1298 005d 0A       		.uleb128 0xa
 1299 005e 00       		.byte	0
 1300 005f 00       		.byte	0
 1301 0060 09       		.uleb128 0x9
 1302 0061 0D       		.uleb128 0xd
 1303 0062 00       		.byte	0
 1304 0063 03       		.uleb128 0x3
 1305 0064 08       		.uleb128 0x8
 1306 0065 3A       		.uleb128 0x3a
 1307 0066 0B       		.uleb128 0xb
 1308 0067 3B       		.uleb128 0x3b
 1309 0068 0B       		.uleb128 0xb
 1310 0069 49       		.uleb128 0x49
 1311 006a 13       		.uleb128 0x13
 1312 006b 38       		.uleb128 0x38
 1313 006c 0A       		.uleb128 0xa
 1314 006d 00       		.byte	0
 1315 006e 00       		.byte	0
 1316 006f 0A       		.uleb128 0xa
 1317 0070 01       		.uleb128 0x1
 1318 0071 01       		.byte	0x1
 1319 0072 49       		.uleb128 0x49
 1320 0073 13       		.uleb128 0x13
 1321 0074 01       		.uleb128 0x1
 1322 0075 13       		.uleb128 0x13
 1323 0076 00       		.byte	0
 1324 0077 00       		.byte	0
 1325 0078 0B       		.uleb128 0xb
 1326 0079 21       		.uleb128 0x21
 1327 007a 00       		.byte	0
 1328 007b 49       		.uleb128 0x49
 1329 007c 13       		.uleb128 0x13
 1330 007d 2F       		.uleb128 0x2f
 1331 007e 0B       		.uleb128 0xb
 1332 007f 00       		.byte	0
 1333 0080 00       		.byte	0
 1334 0081 0C       		.uleb128 0xc
 1335 0082 34       		.uleb128 0x34
 1336 0083 00       		.byte	0
 1337 0084 03       		.uleb128 0x3
 1338 0085 0E       		.uleb128 0xe
 1339 0086 3A       		.uleb128 0x3a
 1340 0087 0B       		.uleb128 0xb
 1341 0088 3B       		.uleb128 0x3b
 1342 0089 05       		.uleb128 0x5
 1343 008a 49       		.uleb128 0x49
 1344 008b 13       		.uleb128 0x13
 1345 008c 3F       		.uleb128 0x3f
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 51


 1346 008d 0C       		.uleb128 0xc
 1347 008e 3C       		.uleb128 0x3c
 1348 008f 0C       		.uleb128 0xc
 1349 0090 00       		.byte	0
 1350 0091 00       		.byte	0
 1351 0092 0D       		.uleb128 0xd
 1352 0093 34       		.uleb128 0x34
 1353 0094 00       		.byte	0
 1354 0095 03       		.uleb128 0x3
 1355 0096 0E       		.uleb128 0xe
 1356 0097 3A       		.uleb128 0x3a
 1357 0098 0B       		.uleb128 0xb
 1358 0099 3B       		.uleb128 0x3b
 1359 009a 0B       		.uleb128 0xb
 1360 009b 49       		.uleb128 0x49
 1361 009c 13       		.uleb128 0x13
 1362 009d 3F       		.uleb128 0x3f
 1363 009e 0C       		.uleb128 0xc
 1364 009f 3C       		.uleb128 0x3c
 1365 00a0 0C       		.uleb128 0xc
 1366 00a1 00       		.byte	0
 1367 00a2 00       		.byte	0
 1368 00a3 0E       		.uleb128 0xe
 1369 00a4 04       		.uleb128 0x4
 1370 00a5 01       		.byte	0x1
 1371 00a6 3E       		.uleb128 0x3e
 1372 00a7 0B       		.uleb128 0xb
 1373 00a8 0B       		.uleb128 0xb
 1374 00a9 0B       		.uleb128 0xb
 1375 00aa 49       		.uleb128 0x49
 1376 00ab 13       		.uleb128 0x13
 1377 00ac 3A       		.uleb128 0x3a
 1378 00ad 0B       		.uleb128 0xb
 1379 00ae 3B       		.uleb128 0x3b
 1380 00af 05       		.uleb128 0x5
 1381 00b0 01       		.uleb128 0x1
 1382 00b1 13       		.uleb128 0x13
 1383 00b2 00       		.byte	0
 1384 00b3 00       		.byte	0
 1385 00b4 0F       		.uleb128 0xf
 1386 00b5 28       		.uleb128 0x28
 1387 00b6 00       		.byte	0
 1388 00b7 03       		.uleb128 0x3
 1389 00b8 0E       		.uleb128 0xe
 1390 00b9 1C       		.uleb128 0x1c
 1391 00ba 0B       		.uleb128 0xb
 1392 00bb 00       		.byte	0
 1393 00bc 00       		.byte	0
 1394 00bd 10       		.uleb128 0x10
 1395 00be 28       		.uleb128 0x28
 1396 00bf 00       		.byte	0
 1397 00c0 03       		.uleb128 0x3
 1398 00c1 08       		.uleb128 0x8
 1399 00c2 1C       		.uleb128 0x1c
 1400 00c3 0B       		.uleb128 0xb
 1401 00c4 00       		.byte	0
 1402 00c5 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 52


 1403 00c6 11       		.uleb128 0x11
 1404 00c7 16       		.uleb128 0x16
 1405 00c8 00       		.byte	0
 1406 00c9 03       		.uleb128 0x3
 1407 00ca 0E       		.uleb128 0xe
 1408 00cb 3A       		.uleb128 0x3a
 1409 00cc 0B       		.uleb128 0xb
 1410 00cd 3B       		.uleb128 0x3b
 1411 00ce 05       		.uleb128 0x5
 1412 00cf 49       		.uleb128 0x49
 1413 00d0 13       		.uleb128 0x13
 1414 00d1 00       		.byte	0
 1415 00d2 00       		.byte	0
 1416 00d3 12       		.uleb128 0x12
 1417 00d4 13       		.uleb128 0x13
 1418 00d5 01       		.byte	0x1
 1419 00d6 0B       		.uleb128 0xb
 1420 00d7 0B       		.uleb128 0xb
 1421 00d8 3A       		.uleb128 0x3a
 1422 00d9 0B       		.uleb128 0xb
 1423 00da 3B       		.uleb128 0x3b
 1424 00db 05       		.uleb128 0x5
 1425 00dc 01       		.uleb128 0x1
 1426 00dd 13       		.uleb128 0x13
 1427 00de 00       		.byte	0
 1428 00df 00       		.byte	0
 1429 00e0 13       		.uleb128 0x13
 1430 00e1 0D       		.uleb128 0xd
 1431 00e2 00       		.byte	0
 1432 00e3 03       		.uleb128 0x3
 1433 00e4 08       		.uleb128 0x8
 1434 00e5 3A       		.uleb128 0x3a
 1435 00e6 0B       		.uleb128 0xb
 1436 00e7 3B       		.uleb128 0x3b
 1437 00e8 05       		.uleb128 0x5
 1438 00e9 49       		.uleb128 0x49
 1439 00ea 13       		.uleb128 0x13
 1440 00eb 38       		.uleb128 0x38
 1441 00ec 0A       		.uleb128 0xa
 1442 00ed 00       		.byte	0
 1443 00ee 00       		.byte	0
 1444 00ef 14       		.uleb128 0x14
 1445 00f0 2E       		.uleb128 0x2e
 1446 00f1 01       		.byte	0x1
 1447 00f2 3F       		.uleb128 0x3f
 1448 00f3 0C       		.uleb128 0xc
 1449 00f4 03       		.uleb128 0x3
 1450 00f5 0E       		.uleb128 0xe
 1451 00f6 3A       		.uleb128 0x3a
 1452 00f7 0B       		.uleb128 0xb
 1453 00f8 3B       		.uleb128 0x3b
 1454 00f9 05       		.uleb128 0x5
 1455 00fa 27       		.uleb128 0x27
 1456 00fb 0C       		.uleb128 0xc
 1457 00fc 11       		.uleb128 0x11
 1458 00fd 01       		.uleb128 0x1
 1459 00fe 12       		.uleb128 0x12
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 53


 1460 00ff 01       		.uleb128 0x1
 1461 0100 40       		.uleb128 0x40
 1462 0101 06       		.uleb128 0x6
 1463 0102 9742     		.uleb128 0x2117
 1464 0104 0C       		.uleb128 0xc
 1465 0105 01       		.uleb128 0x1
 1466 0106 13       		.uleb128 0x13
 1467 0107 00       		.byte	0
 1468 0108 00       		.byte	0
 1469 0109 15       		.uleb128 0x15
 1470 010a 05       		.uleb128 0x5
 1471 010b 00       		.byte	0
 1472 010c 03       		.uleb128 0x3
 1473 010d 0E       		.uleb128 0xe
 1474 010e 3A       		.uleb128 0x3a
 1475 010f 0B       		.uleb128 0xb
 1476 0110 3B       		.uleb128 0x3b
 1477 0111 05       		.uleb128 0x5
 1478 0112 49       		.uleb128 0x49
 1479 0113 13       		.uleb128 0x13
 1480 0114 02       		.uleb128 0x2
 1481 0115 0A       		.uleb128 0xa
 1482 0116 00       		.byte	0
 1483 0117 00       		.byte	0
 1484 0118 16       		.uleb128 0x16
 1485 0119 2E       		.uleb128 0x2e
 1486 011a 01       		.byte	0x1
 1487 011b 3F       		.uleb128 0x3f
 1488 011c 0C       		.uleb128 0xc
 1489 011d 03       		.uleb128 0x3
 1490 011e 0E       		.uleb128 0xe
 1491 011f 3A       		.uleb128 0x3a
 1492 0120 0B       		.uleb128 0xb
 1493 0121 3B       		.uleb128 0x3b
 1494 0122 05       		.uleb128 0x5
 1495 0123 27       		.uleb128 0x27
 1496 0124 0C       		.uleb128 0xc
 1497 0125 49       		.uleb128 0x49
 1498 0126 13       		.uleb128 0x13
 1499 0127 11       		.uleb128 0x11
 1500 0128 01       		.uleb128 0x1
 1501 0129 12       		.uleb128 0x12
 1502 012a 01       		.uleb128 0x1
 1503 012b 40       		.uleb128 0x40
 1504 012c 06       		.uleb128 0x6
 1505 012d 9742     		.uleb128 0x2117
 1506 012f 0C       		.uleb128 0xc
 1507 0130 01       		.uleb128 0x1
 1508 0131 13       		.uleb128 0x13
 1509 0132 00       		.byte	0
 1510 0133 00       		.byte	0
 1511 0134 17       		.uleb128 0x17
 1512 0135 34       		.uleb128 0x34
 1513 0136 00       		.byte	0
 1514 0137 03       		.uleb128 0x3
 1515 0138 0E       		.uleb128 0xe
 1516 0139 3A       		.uleb128 0x3a
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 54


 1517 013a 0B       		.uleb128 0xb
 1518 013b 3B       		.uleb128 0x3b
 1519 013c 05       		.uleb128 0x5
 1520 013d 49       		.uleb128 0x49
 1521 013e 13       		.uleb128 0x13
 1522 013f 02       		.uleb128 0x2
 1523 0140 0A       		.uleb128 0xa
 1524 0141 00       		.byte	0
 1525 0142 00       		.byte	0
 1526 0143 18       		.uleb128 0x18
 1527 0144 2E       		.uleb128 0x2e
 1528 0145 00       		.byte	0
 1529 0146 3F       		.uleb128 0x3f
 1530 0147 0C       		.uleb128 0xc
 1531 0148 03       		.uleb128 0x3
 1532 0149 0E       		.uleb128 0xe
 1533 014a 3A       		.uleb128 0x3a
 1534 014b 0B       		.uleb128 0xb
 1535 014c 3B       		.uleb128 0x3b
 1536 014d 0B       		.uleb128 0xb
 1537 014e 27       		.uleb128 0x27
 1538 014f 0C       		.uleb128 0xc
 1539 0150 11       		.uleb128 0x11
 1540 0151 01       		.uleb128 0x1
 1541 0152 12       		.uleb128 0x12
 1542 0153 01       		.uleb128 0x1
 1543 0154 40       		.uleb128 0x40
 1544 0155 06       		.uleb128 0x6
 1545 0156 9642     		.uleb128 0x2116
 1546 0158 0C       		.uleb128 0xc
 1547 0159 00       		.byte	0
 1548 015a 00       		.byte	0
 1549 015b 19       		.uleb128 0x19
 1550 015c 2E       		.uleb128 0x2e
 1551 015d 01       		.byte	0x1
 1552 015e 3F       		.uleb128 0x3f
 1553 015f 0C       		.uleb128 0xc
 1554 0160 03       		.uleb128 0x3
 1555 0161 0E       		.uleb128 0xe
 1556 0162 3A       		.uleb128 0x3a
 1557 0163 0B       		.uleb128 0xb
 1558 0164 3B       		.uleb128 0x3b
 1559 0165 0B       		.uleb128 0xb
 1560 0166 27       		.uleb128 0x27
 1561 0167 0C       		.uleb128 0xc
 1562 0168 11       		.uleb128 0x11
 1563 0169 01       		.uleb128 0x1
 1564 016a 12       		.uleb128 0x12
 1565 016b 01       		.uleb128 0x1
 1566 016c 40       		.uleb128 0x40
 1567 016d 06       		.uleb128 0x6
 1568 016e 9642     		.uleb128 0x2116
 1569 0170 0C       		.uleb128 0xc
 1570 0171 01       		.uleb128 0x1
 1571 0172 13       		.uleb128 0x13
 1572 0173 00       		.byte	0
 1573 0174 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 55


 1574 0175 1A       		.uleb128 0x1a
 1575 0176 05       		.uleb128 0x5
 1576 0177 00       		.byte	0
 1577 0178 03       		.uleb128 0x3
 1578 0179 0E       		.uleb128 0xe
 1579 017a 3A       		.uleb128 0x3a
 1580 017b 0B       		.uleb128 0xb
 1581 017c 3B       		.uleb128 0x3b
 1582 017d 0B       		.uleb128 0xb
 1583 017e 49       		.uleb128 0x49
 1584 017f 13       		.uleb128 0x13
 1585 0180 02       		.uleb128 0x2
 1586 0181 0A       		.uleb128 0xa
 1587 0182 00       		.byte	0
 1588 0183 00       		.byte	0
 1589 0184 1B       		.uleb128 0x1b
 1590 0185 34       		.uleb128 0x34
 1591 0186 00       		.byte	0
 1592 0187 03       		.uleb128 0x3
 1593 0188 0E       		.uleb128 0xe
 1594 0189 3A       		.uleb128 0x3a
 1595 018a 0B       		.uleb128 0xb
 1596 018b 3B       		.uleb128 0x3b
 1597 018c 0B       		.uleb128 0xb
 1598 018d 49       		.uleb128 0x49
 1599 018e 13       		.uleb128 0x13
 1600 018f 02       		.uleb128 0x2
 1601 0190 0A       		.uleb128 0xa
 1602 0191 00       		.byte	0
 1603 0192 00       		.byte	0
 1604 0193 1C       		.uleb128 0x1c
 1605 0194 2E       		.uleb128 0x2e
 1606 0195 01       		.byte	0x1
 1607 0196 3F       		.uleb128 0x3f
 1608 0197 0C       		.uleb128 0xc
 1609 0198 03       		.uleb128 0x3
 1610 0199 0E       		.uleb128 0xe
 1611 019a 3A       		.uleb128 0x3a
 1612 019b 0B       		.uleb128 0xb
 1613 019c 3B       		.uleb128 0x3b
 1614 019d 0B       		.uleb128 0xb
 1615 019e 27       		.uleb128 0x27
 1616 019f 0C       		.uleb128 0xc
 1617 01a0 11       		.uleb128 0x11
 1618 01a1 01       		.uleb128 0x1
 1619 01a2 12       		.uleb128 0x12
 1620 01a3 01       		.uleb128 0x1
 1621 01a4 40       		.uleb128 0x40
 1622 01a5 06       		.uleb128 0x6
 1623 01a6 9742     		.uleb128 0x2117
 1624 01a8 0C       		.uleb128 0xc
 1625 01a9 01       		.uleb128 0x1
 1626 01aa 13       		.uleb128 0x13
 1627 01ab 00       		.byte	0
 1628 01ac 00       		.byte	0
 1629 01ad 1D       		.uleb128 0x1d
 1630 01ae 2E       		.uleb128 0x2e
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 56


 1631 01af 00       		.byte	0
 1632 01b0 03       		.uleb128 0x3
 1633 01b1 0E       		.uleb128 0xe
 1634 01b2 3A       		.uleb128 0x3a
 1635 01b3 0B       		.uleb128 0xb
 1636 01b4 3B       		.uleb128 0x3b
 1637 01b5 05       		.uleb128 0x5
 1638 01b6 11       		.uleb128 0x11
 1639 01b7 01       		.uleb128 0x1
 1640 01b8 12       		.uleb128 0x12
 1641 01b9 01       		.uleb128 0x1
 1642 01ba 40       		.uleb128 0x40
 1643 01bb 06       		.uleb128 0x6
 1644 01bc 9742     		.uleb128 0x2117
 1645 01be 0C       		.uleb128 0xc
 1646 01bf 00       		.byte	0
 1647 01c0 00       		.byte	0
 1648 01c1 00       		.byte	0
 1649              		.section	.debug_loc,"",%progbits
 1650              	.Ldebug_loc0:
 1651              	.LLST10:
 1652 0000 A0010000 		.4byte	.LFB37-.Ltext0
 1653 0004 A2010000 		.4byte	.LCFI47-.Ltext0
 1654 0008 0200     		.2byte	0x2
 1655 000a 7D       		.byte	0x7d
 1656 000b 00       		.sleb128 0
 1657 000c A2010000 		.4byte	.LCFI47-.Ltext0
 1658 0010 A4010000 		.4byte	.LCFI48-.Ltext0
 1659 0014 0200     		.2byte	0x2
 1660 0016 7D       		.byte	0x7d
 1661 0017 04       		.sleb128 4
 1662 0018 A4010000 		.4byte	.LCFI48-.Ltext0
 1663 001c A6010000 		.4byte	.LCFI49-.Ltext0
 1664 0020 0200     		.2byte	0x2
 1665 0022 7D       		.byte	0x7d
 1666 0023 10       		.sleb128 16
 1667 0024 A6010000 		.4byte	.LCFI49-.Ltext0
 1668 0028 BA010000 		.4byte	.LCFI50-.Ltext0
 1669 002c 0200     		.2byte	0x2
 1670 002e 77       		.byte	0x77
 1671 002f 10       		.sleb128 16
 1672 0030 BA010000 		.4byte	.LCFI50-.Ltext0
 1673 0034 BC010000 		.4byte	.LCFI51-.Ltext0
 1674 0038 0200     		.2byte	0x2
 1675 003a 77       		.byte	0x77
 1676 003b 04       		.sleb128 4
 1677 003c BC010000 		.4byte	.LCFI51-.Ltext0
 1678 0040 BE010000 		.4byte	.LCFI52-.Ltext0
 1679 0044 0200     		.2byte	0x2
 1680 0046 7D       		.byte	0x7d
 1681 0047 04       		.sleb128 4
 1682 0048 BE010000 		.4byte	.LCFI52-.Ltext0
 1683 004c C4010000 		.4byte	.LFE37-.Ltext0
 1684 0050 0200     		.2byte	0x2
 1685 0052 7D       		.byte	0x7d
 1686 0053 00       		.sleb128 0
 1687 0054 00000000 		.4byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 57


 1688 0058 00000000 		.4byte	0
 1689              	.LLST9:
 1690 005c 6C010000 		.4byte	.LFB36-.Ltext0
 1691 0060 6E010000 		.4byte	.LCFI41-.Ltext0
 1692 0064 0200     		.2byte	0x2
 1693 0066 7D       		.byte	0x7d
 1694 0067 00       		.sleb128 0
 1695 0068 6E010000 		.4byte	.LCFI41-.Ltext0
 1696 006c 70010000 		.4byte	.LCFI42-.Ltext0
 1697 0070 0200     		.2byte	0x2
 1698 0072 7D       		.byte	0x7d
 1699 0073 04       		.sleb128 4
 1700 0074 70010000 		.4byte	.LCFI42-.Ltext0
 1701 0078 72010000 		.4byte	.LCFI43-.Ltext0
 1702 007c 0200     		.2byte	0x2
 1703 007e 7D       		.byte	0x7d
 1704 007f 18       		.sleb128 24
 1705 0080 72010000 		.4byte	.LCFI43-.Ltext0
 1706 0084 94010000 		.4byte	.LCFI44-.Ltext0
 1707 0088 0200     		.2byte	0x2
 1708 008a 77       		.byte	0x77
 1709 008b 18       		.sleb128 24
 1710 008c 94010000 		.4byte	.LCFI44-.Ltext0
 1711 0090 96010000 		.4byte	.LCFI45-.Ltext0
 1712 0094 0200     		.2byte	0x2
 1713 0096 77       		.byte	0x77
 1714 0097 04       		.sleb128 4
 1715 0098 96010000 		.4byte	.LCFI45-.Ltext0
 1716 009c 98010000 		.4byte	.LCFI46-.Ltext0
 1717 00a0 0200     		.2byte	0x2
 1718 00a2 7D       		.byte	0x7d
 1719 00a3 04       		.sleb128 4
 1720 00a4 98010000 		.4byte	.LCFI46-.Ltext0
 1721 00a8 A0010000 		.4byte	.LFE36-.Ltext0
 1722 00ac 0200     		.2byte	0x2
 1723 00ae 7D       		.byte	0x7d
 1724 00af 00       		.sleb128 0
 1725 00b0 00000000 		.4byte	0
 1726 00b4 00000000 		.4byte	0
 1727              	.LLST8:
 1728 00b8 34010000 		.4byte	.LFB35-.Ltext0
 1729 00bc 36010000 		.4byte	.LCFI39-.Ltext0
 1730 00c0 0200     		.2byte	0x2
 1731 00c2 7D       		.byte	0x7d
 1732 00c3 00       		.sleb128 0
 1733 00c4 36010000 		.4byte	.LCFI39-.Ltext0
 1734 00c8 38010000 		.4byte	.LCFI40-.Ltext0
 1735 00cc 0200     		.2byte	0x2
 1736 00ce 7D       		.byte	0x7d
 1737 00cf 08       		.sleb128 8
 1738 00d0 38010000 		.4byte	.LCFI40-.Ltext0
 1739 00d4 6C010000 		.4byte	.LFE35-.Ltext0
 1740 00d8 0200     		.2byte	0x2
 1741 00da 77       		.byte	0x77
 1742 00db 08       		.sleb128 8
 1743 00dc 00000000 		.4byte	0
 1744 00e0 00000000 		.4byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 58


 1745              	.LLST7:
 1746 00e4 D0000000 		.4byte	.LFB34-.Ltext0
 1747 00e8 D2000000 		.4byte	.LCFI34-.Ltext0
 1748 00ec 0200     		.2byte	0x2
 1749 00ee 7D       		.byte	0x7d
 1750 00ef 00       		.sleb128 0
 1751 00f0 D2000000 		.4byte	.LCFI34-.Ltext0
 1752 00f4 D4000000 		.4byte	.LCFI35-.Ltext0
 1753 00f8 0200     		.2byte	0x2
 1754 00fa 7D       		.byte	0x7d
 1755 00fb 08       		.sleb128 8
 1756 00fc D4000000 		.4byte	.LCFI35-.Ltext0
 1757 0100 D6000000 		.4byte	.LCFI36-.Ltext0
 1758 0104 0200     		.2byte	0x2
 1759 0106 7D       		.byte	0x7d
 1760 0107 18       		.sleb128 24
 1761 0108 D6000000 		.4byte	.LCFI36-.Ltext0
 1762 010c 28010000 		.4byte	.LCFI37-.Ltext0
 1763 0110 0200     		.2byte	0x2
 1764 0112 77       		.byte	0x77
 1765 0113 18       		.sleb128 24
 1766 0114 28010000 		.4byte	.LCFI37-.Ltext0
 1767 0118 2A010000 		.4byte	.LCFI38-.Ltext0
 1768 011c 0200     		.2byte	0x2
 1769 011e 77       		.byte	0x77
 1770 011f 08       		.sleb128 8
 1771 0120 2A010000 		.4byte	.LCFI38-.Ltext0
 1772 0124 34010000 		.4byte	.LFE34-.Ltext0
 1773 0128 0200     		.2byte	0x2
 1774 012a 7D       		.byte	0x7d
 1775 012b 08       		.sleb128 8
 1776 012c 00000000 		.4byte	0
 1777 0130 00000000 		.4byte	0
 1778              	.LLST6:
 1779 0134 B0000000 		.4byte	.LFB33-.Ltext0
 1780 0138 B2000000 		.4byte	.LCFI28-.Ltext0
 1781 013c 0200     		.2byte	0x2
 1782 013e 7D       		.byte	0x7d
 1783 013f 00       		.sleb128 0
 1784 0140 B2000000 		.4byte	.LCFI28-.Ltext0
 1785 0144 B4000000 		.4byte	.LCFI29-.Ltext0
 1786 0148 0200     		.2byte	0x2
 1787 014a 7D       		.byte	0x7d
 1788 014b 04       		.sleb128 4
 1789 014c B4000000 		.4byte	.LCFI29-.Ltext0
 1790 0150 B6000000 		.4byte	.LCFI30-.Ltext0
 1791 0154 0200     		.2byte	0x2
 1792 0156 7D       		.byte	0x7d
 1793 0157 10       		.sleb128 16
 1794 0158 B6000000 		.4byte	.LCFI30-.Ltext0
 1795 015c C4000000 		.4byte	.LCFI31-.Ltext0
 1796 0160 0200     		.2byte	0x2
 1797 0162 77       		.byte	0x77
 1798 0163 10       		.sleb128 16
 1799 0164 C4000000 		.4byte	.LCFI31-.Ltext0
 1800 0168 C6000000 		.4byte	.LCFI32-.Ltext0
 1801 016c 0200     		.2byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 59


 1802 016e 77       		.byte	0x77
 1803 016f 04       		.sleb128 4
 1804 0170 C6000000 		.4byte	.LCFI32-.Ltext0
 1805 0174 C8000000 		.4byte	.LCFI33-.Ltext0
 1806 0178 0200     		.2byte	0x2
 1807 017a 7D       		.byte	0x7d
 1808 017b 04       		.sleb128 4
 1809 017c C8000000 		.4byte	.LCFI33-.Ltext0
 1810 0180 D0000000 		.4byte	.LFE33-.Ltext0
 1811 0184 0200     		.2byte	0x2
 1812 0186 7D       		.byte	0x7d
 1813 0187 00       		.sleb128 0
 1814 0188 00000000 		.4byte	0
 1815 018c 00000000 		.4byte	0
 1816              	.LLST5:
 1817 0190 78000000 		.4byte	.LFB32-.Ltext0
 1818 0194 7A000000 		.4byte	.LCFI22-.Ltext0
 1819 0198 0200     		.2byte	0x2
 1820 019a 7D       		.byte	0x7d
 1821 019b 00       		.sleb128 0
 1822 019c 7A000000 		.4byte	.LCFI22-.Ltext0
 1823 01a0 7C000000 		.4byte	.LCFI23-.Ltext0
 1824 01a4 0200     		.2byte	0x2
 1825 01a6 7D       		.byte	0x7d
 1826 01a7 04       		.sleb128 4
 1827 01a8 7C000000 		.4byte	.LCFI23-.Ltext0
 1828 01ac 7E000000 		.4byte	.LCFI24-.Ltext0
 1829 01b0 0200     		.2byte	0x2
 1830 01b2 7D       		.byte	0x7d
 1831 01b3 18       		.sleb128 24
 1832 01b4 7E000000 		.4byte	.LCFI24-.Ltext0
 1833 01b8 A4000000 		.4byte	.LCFI25-.Ltext0
 1834 01bc 0200     		.2byte	0x2
 1835 01be 77       		.byte	0x77
 1836 01bf 18       		.sleb128 24
 1837 01c0 A4000000 		.4byte	.LCFI25-.Ltext0
 1838 01c4 A6000000 		.4byte	.LCFI26-.Ltext0
 1839 01c8 0200     		.2byte	0x2
 1840 01ca 77       		.byte	0x77
 1841 01cb 04       		.sleb128 4
 1842 01cc A6000000 		.4byte	.LCFI26-.Ltext0
 1843 01d0 A8000000 		.4byte	.LCFI27-.Ltext0
 1844 01d4 0200     		.2byte	0x2
 1845 01d6 7D       		.byte	0x7d
 1846 01d7 04       		.sleb128 4
 1847 01d8 A8000000 		.4byte	.LCFI27-.Ltext0
 1848 01dc B0000000 		.4byte	.LFE32-.Ltext0
 1849 01e0 0200     		.2byte	0x2
 1850 01e2 7D       		.byte	0x7d
 1851 01e3 00       		.sleb128 0
 1852 01e4 00000000 		.4byte	0
 1853 01e8 00000000 		.4byte	0
 1854              	.LLST4:
 1855 01ec 58000000 		.4byte	.LFB31-.Ltext0
 1856 01f0 5A000000 		.4byte	.LCFI16-.Ltext0
 1857 01f4 0200     		.2byte	0x2
 1858 01f6 7D       		.byte	0x7d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 60


 1859 01f7 00       		.sleb128 0
 1860 01f8 5A000000 		.4byte	.LCFI16-.Ltext0
 1861 01fc 5C000000 		.4byte	.LCFI17-.Ltext0
 1862 0200 0200     		.2byte	0x2
 1863 0202 7D       		.byte	0x7d
 1864 0203 04       		.sleb128 4
 1865 0204 5C000000 		.4byte	.LCFI17-.Ltext0
 1866 0208 5E000000 		.4byte	.LCFI18-.Ltext0
 1867 020c 0200     		.2byte	0x2
 1868 020e 7D       		.byte	0x7d
 1869 020f 10       		.sleb128 16
 1870 0210 5E000000 		.4byte	.LCFI18-.Ltext0
 1871 0214 6C000000 		.4byte	.LCFI19-.Ltext0
 1872 0218 0200     		.2byte	0x2
 1873 021a 77       		.byte	0x77
 1874 021b 10       		.sleb128 16
 1875 021c 6C000000 		.4byte	.LCFI19-.Ltext0
 1876 0220 6E000000 		.4byte	.LCFI20-.Ltext0
 1877 0224 0200     		.2byte	0x2
 1878 0226 77       		.byte	0x77
 1879 0227 04       		.sleb128 4
 1880 0228 6E000000 		.4byte	.LCFI20-.Ltext0
 1881 022c 70000000 		.4byte	.LCFI21-.Ltext0
 1882 0230 0200     		.2byte	0x2
 1883 0232 7D       		.byte	0x7d
 1884 0233 04       		.sleb128 4
 1885 0234 70000000 		.4byte	.LCFI21-.Ltext0
 1886 0238 78000000 		.4byte	.LFE31-.Ltext0
 1887 023c 0200     		.2byte	0x2
 1888 023e 7D       		.byte	0x7d
 1889 023f 00       		.sleb128 0
 1890 0240 00000000 		.4byte	0
 1891 0244 00000000 		.4byte	0
 1892              	.LLST3:
 1893 0248 38000000 		.4byte	.LFB30-.Ltext0
 1894 024c 3A000000 		.4byte	.LCFI10-.Ltext0
 1895 0250 0200     		.2byte	0x2
 1896 0252 7D       		.byte	0x7d
 1897 0253 00       		.sleb128 0
 1898 0254 3A000000 		.4byte	.LCFI10-.Ltext0
 1899 0258 3C000000 		.4byte	.LCFI11-.Ltext0
 1900 025c 0200     		.2byte	0x2
 1901 025e 7D       		.byte	0x7d
 1902 025f 04       		.sleb128 4
 1903 0260 3C000000 		.4byte	.LCFI11-.Ltext0
 1904 0264 3E000000 		.4byte	.LCFI12-.Ltext0
 1905 0268 0200     		.2byte	0x2
 1906 026a 7D       		.byte	0x7d
 1907 026b 10       		.sleb128 16
 1908 026c 3E000000 		.4byte	.LCFI12-.Ltext0
 1909 0270 4C000000 		.4byte	.LCFI13-.Ltext0
 1910 0274 0200     		.2byte	0x2
 1911 0276 77       		.byte	0x77
 1912 0277 10       		.sleb128 16
 1913 0278 4C000000 		.4byte	.LCFI13-.Ltext0
 1914 027c 4E000000 		.4byte	.LCFI14-.Ltext0
 1915 0280 0200     		.2byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 61


 1916 0282 77       		.byte	0x77
 1917 0283 04       		.sleb128 4
 1918 0284 4E000000 		.4byte	.LCFI14-.Ltext0
 1919 0288 50000000 		.4byte	.LCFI15-.Ltext0
 1920 028c 0200     		.2byte	0x2
 1921 028e 7D       		.byte	0x7d
 1922 028f 04       		.sleb128 4
 1923 0290 50000000 		.4byte	.LCFI15-.Ltext0
 1924 0294 58000000 		.4byte	.LFE30-.Ltext0
 1925 0298 0200     		.2byte	0x2
 1926 029a 7D       		.byte	0x7d
 1927 029b 00       		.sleb128 0
 1928 029c 00000000 		.4byte	0
 1929 02a0 00000000 		.4byte	0
 1930              	.LLST2:
 1931 02a4 1C000000 		.4byte	.LFB29-.Ltext0
 1932 02a8 1E000000 		.4byte	.LCFI8-.Ltext0
 1933 02ac 0200     		.2byte	0x2
 1934 02ae 7D       		.byte	0x7d
 1935 02af 00       		.sleb128 0
 1936 02b0 1E000000 		.4byte	.LCFI8-.Ltext0
 1937 02b4 20000000 		.4byte	.LCFI9-.Ltext0
 1938 02b8 0200     		.2byte	0x2
 1939 02ba 7D       		.byte	0x7d
 1940 02bb 08       		.sleb128 8
 1941 02bc 20000000 		.4byte	.LCFI9-.Ltext0
 1942 02c0 38000000 		.4byte	.LFE29-.Ltext0
 1943 02c4 0200     		.2byte	0x2
 1944 02c6 77       		.byte	0x77
 1945 02c7 08       		.sleb128 8
 1946 02c8 00000000 		.4byte	0
 1947 02cc 00000000 		.4byte	0
 1948              	.LLST1:
 1949 02d0 0E000000 		.4byte	.LFB6-.Ltext0
 1950 02d4 10000000 		.4byte	.LCFI4-.Ltext0
 1951 02d8 0200     		.2byte	0x2
 1952 02da 7D       		.byte	0x7d
 1953 02db 00       		.sleb128 0
 1954 02dc 10000000 		.4byte	.LCFI4-.Ltext0
 1955 02e0 12000000 		.4byte	.LCFI5-.Ltext0
 1956 02e4 0200     		.2byte	0x2
 1957 02e6 7D       		.byte	0x7d
 1958 02e7 04       		.sleb128 4
 1959 02e8 12000000 		.4byte	.LCFI5-.Ltext0
 1960 02ec 18000000 		.4byte	.LCFI6-.Ltext0
 1961 02f0 0200     		.2byte	0x2
 1962 02f2 77       		.byte	0x77
 1963 02f3 04       		.sleb128 4
 1964 02f4 18000000 		.4byte	.LCFI6-.Ltext0
 1965 02f8 1A000000 		.4byte	.LCFI7-.Ltext0
 1966 02fc 0200     		.2byte	0x2
 1967 02fe 7D       		.byte	0x7d
 1968 02ff 04       		.sleb128 4
 1969 0300 1A000000 		.4byte	.LCFI7-.Ltext0
 1970 0304 1C000000 		.4byte	.LFE6-.Ltext0
 1971 0308 0200     		.2byte	0x2
 1972 030a 7D       		.byte	0x7d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 62


 1973 030b 00       		.sleb128 0
 1974 030c 00000000 		.4byte	0
 1975 0310 00000000 		.4byte	0
 1976              	.LLST0:
 1977 0314 00000000 		.4byte	.LFB5-.Ltext0
 1978 0318 02000000 		.4byte	.LCFI0-.Ltext0
 1979 031c 0200     		.2byte	0x2
 1980 031e 7D       		.byte	0x7d
 1981 031f 00       		.sleb128 0
 1982 0320 02000000 		.4byte	.LCFI0-.Ltext0
 1983 0324 04000000 		.4byte	.LCFI1-.Ltext0
 1984 0328 0200     		.2byte	0x2
 1985 032a 7D       		.byte	0x7d
 1986 032b 04       		.sleb128 4
 1987 032c 04000000 		.4byte	.LCFI1-.Ltext0
 1988 0330 0A000000 		.4byte	.LCFI2-.Ltext0
 1989 0334 0200     		.2byte	0x2
 1990 0336 77       		.byte	0x77
 1991 0337 04       		.sleb128 4
 1992 0338 0A000000 		.4byte	.LCFI2-.Ltext0
 1993 033c 0C000000 		.4byte	.LCFI3-.Ltext0
 1994 0340 0200     		.2byte	0x2
 1995 0342 7D       		.byte	0x7d
 1996 0343 04       		.sleb128 4
 1997 0344 0C000000 		.4byte	.LCFI3-.Ltext0
 1998 0348 0E000000 		.4byte	.LFE5-.Ltext0
 1999 034c 0200     		.2byte	0x2
 2000 034e 7D       		.byte	0x7d
 2001 034f 00       		.sleb128 0
 2002 0350 00000000 		.4byte	0
 2003 0354 00000000 		.4byte	0
 2004              		.section	.debug_aranges,"",%progbits
 2005 0000 1C000000 		.4byte	0x1c
 2006 0004 0200     		.2byte	0x2
 2007 0006 00000000 		.4byte	.Ldebug_info0
 2008 000a 04       		.byte	0x4
 2009 000b 00       		.byte	0
 2010 000c 0000     		.2byte	0
 2011 000e 0000     		.2byte	0
 2012 0010 00000000 		.4byte	.Ltext0
 2013 0014 C4010000 		.4byte	.Letext0-.Ltext0
 2014 0018 00000000 		.4byte	0
 2015 001c 00000000 		.4byte	0
 2016              		.section	.debug_line,"",%progbits
 2017              	.Ldebug_line0:
 2018 0000 5C010000 		.section	.debug_str,"MS",%progbits,1
 2018      02000001 
 2018      00000201 
 2018      FB0E0D00 
 2018      01010101 
 2019              	.LASF39:
 2020 0000 5057525F 		.ascii	"PWR_EnterSTOPMode\000"
 2020      456E7465 
 2020      7253544F 
 2020      504D6F64 
 2020      6500
 2021              	.LASF37:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 63


 2022 0012 5057525F 		.ascii	"PWR_FLAG\000"
 2022      464C4147 
 2022      00
 2023              	.LASF36:
 2024 001b 5057525F 		.ascii	"PWR_TypeDef\000"
 2024      54797065 
 2024      44656600 
 2025              	.LASF7:
 2026 0027 5F5F7569 		.ascii	"__uint32_t\000"
 2026      6E743332 
 2026      5F7400
 2027              	.LASF4:
 2028 0032 5F5F7569 		.ascii	"__uint16_t\000"
 2028      6E743136 
 2028      5F7400
 2029              	.LASF15:
 2030 003d 43505549 		.ascii	"CPUID\000"
 2030      4400
 2031              	.LASF49:
 2032 0043 5057525F 		.ascii	"PWR_BackupAccessCmd\000"
 2032      4261636B 
 2032      75704163 
 2032      63657373 
 2032      436D6400 
 2033              	.LASF24:
 2034 0057 42464152 		.ascii	"BFAR\000"
 2034      00
 2035              	.LASF12:
 2036 005c 75696E74 		.ascii	"uint8_t\000"
 2036      385F7400 
 2037              	.LASF45:
 2038 0064 4E657753 		.ascii	"NewState\000"
 2038      74617465 
 2038      00
 2039              	.LASF33:
 2040 006d 44495341 		.ascii	"DISABLE\000"
 2040      424C4500 
 2041              	.LASF2:
 2042 0075 73686F72 		.ascii	"short int\000"
 2042      7420696E 
 2042      7400
 2043              	.LASF38:
 2044 007f 5057525F 		.ascii	"PWR_ClearFlag\000"
 2044      436C6561 
 2044      72466C61 
 2044      6700
 2045              	.LASF16:
 2046 008d 49435352 		.ascii	"ICSR\000"
 2046      00
 2047              	.LASF56:
 2048 0092 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 2048      616B615C 
 2048      4B414B41 
 2048      4F535C43 
 2048      5C77696E 
 2049 00ba 757635A3 		.ascii	"uv5\243\251\000"
 2049      A900
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 64


 2050              	.LASF9:
 2051 00c0 6C6F6E67 		.ascii	"long long int\000"
 2051      206C6F6E 
 2051      6720696E 
 2051      7400
 2052              	.LASF51:
 2053 00ce 5057525F 		.ascii	"PWR_DeInit\000"
 2053      4465496E 
 2053      697400
 2054              	.LASF6:
 2055 00d9 6C6F6E67 		.ascii	"long int\000"
 2055      20696E74 
 2055      00
 2056              	.LASF3:
 2057 00e2 5F5F7569 		.ascii	"__uint8_t\000"
 2057      6E74385F 
 2057      7400
 2058              	.LASF20:
 2059 00ec 43465352 		.ascii	"CFSR\000"
 2059      00
 2060              	.LASF43:
 2061 00f1 746D7072 		.ascii	"tmpreg\000"
 2061      656700
 2062              	.LASF42:
 2063 00f8 62697473 		.ascii	"bitstatus\000"
 2063      74617475 
 2063      7300
 2064              	.LASF1:
 2065 0102 756E7369 		.ascii	"unsigned char\000"
 2065      676E6564 
 2065      20636861 
 2065      7200
 2066              	.LASF18:
 2067 0110 41495243 		.ascii	"AIRCR\000"
 2067      5200
 2068              	.LASF28:
 2069 0116 5343425F 		.ascii	"SCB_Type\000"
 2069      54797065 
 2069      00
 2070              	.LASF54:
 2071 011f 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 2071      43313120 
 2071      372E332E 
 2071      31203230 
 2071      31383036 
 2072 0152 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 2072      20726576 
 2072      6973696F 
 2072      6E203236 
 2072      31393037 
 2073 0185 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 2073      616D6520 
 2073      2D6D7468 
 2073      756D622D 
 2073      696E7465 
 2074 01b8 67647761 		.ascii	"gdwarf-2 -O0\000"
 2074      72662D32 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 65


 2074      202D4F30 
 2074      00
 2075              	.LASF55:
 2076 01c5 2E2E2F2E 		.ascii	"../../source/src/FWlib/src/stm32f10x_pwr.c\000"
 2076      2E2F736F 
 2076      75726365 
 2076      2F737263 
 2076      2F46576C 
 2077              	.LASF0:
 2078 01f0 7369676E 		.ascii	"signed char\000"
 2078      65642063 
 2078      68617200 
 2079              	.LASF10:
 2080 01fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 2080      206C6F6E 
 2080      6720756E 
 2080      7369676E 
 2080      65642069 
 2081              	.LASF14:
 2082 0213 75696E74 		.ascii	"uint32_t\000"
 2082      33325F74 
 2082      00
 2083              	.LASF11:
 2084 021c 756E7369 		.ascii	"unsigned int\000"
 2084      676E6564 
 2084      20696E74 
 2084      00
 2085              	.LASF13:
 2086 0229 75696E74 		.ascii	"uint16_t\000"
 2086      31365F74 
 2086      00
 2087              	.LASF19:
 2088 0232 53484353 		.ascii	"SHCSR\000"
 2088      5200
 2089              	.LASF41:
 2090 0238 5057525F 		.ascii	"PWR_STOPEntry\000"
 2090      53544F50 
 2090      456E7472 
 2090      7900
 2091              	.LASF23:
 2092 0246 4D4D4641 		.ascii	"MMFAR\000"
 2092      5200
 2093              	.LASF44:
 2094 024c 5057525F 		.ascii	"PWR_WakeUpPinCmd\000"
 2094      57616B65 
 2094      55705069 
 2094      6E436D64 
 2094      00
 2095              	.LASF5:
 2096 025d 73686F72 		.ascii	"short unsigned int\000"
 2096      7420756E 
 2096      7369676E 
 2096      65642069 
 2096      6E7400
 2097              	.LASF40:
 2098 0270 5057525F 		.ascii	"PWR_Regulator\000"
 2098      52656775 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 66


 2098      6C61746F 
 2098      7200
 2099              	.LASF17:
 2100 027e 56544F52 		.ascii	"VTOR\000"
 2100      00
 2101              	.LASF27:
 2102 0283 49534152 		.ascii	"ISAR\000"
 2102      00
 2103              	.LASF22:
 2104 0288 44465352 		.ascii	"DFSR\000"
 2104      00
 2105              	.LASF48:
 2106 028d 5057525F 		.ascii	"PWR_PVDCmd\000"
 2106      50564443 
 2106      6D6400
 2107              	.LASF30:
 2108 0298 53797374 		.ascii	"SystemCoreClock\000"
 2108      656D436F 
 2108      7265436C 
 2108      6F636B00 
 2109              	.LASF21:
 2110 02a8 48465352 		.ascii	"HFSR\000"
 2110      00
 2111              	.LASF26:
 2112 02ad 4D4D4652 		.ascii	"MMFR\000"
 2112      00
 2113              	.LASF47:
 2114 02b2 5057525F 		.ascii	"PWR_PVDLevel\000"
 2114      5056444C 
 2114      6576656C 
 2114      00
 2115              	.LASF46:
 2116 02bf 5057525F 		.ascii	"PWR_PVDLevelConfig\000"
 2116      5056444C 
 2116      6576656C 
 2116      436F6E66 
 2116      696700
 2117              	.LASF8:
 2118 02d2 6C6F6E67 		.ascii	"long unsigned int\000"
 2118      20756E73 
 2118      69676E65 
 2118      6420696E 
 2118      7400
 2119              	.LASF35:
 2120 02e4 46756E63 		.ascii	"FunctionalState\000"
 2120      74696F6E 
 2120      616C5374 
 2120      61746500 
 2121              	.LASF31:
 2122 02f4 52455345 		.ascii	"RESET\000"
 2122      5400
 2123              	.LASF52:
 2124 02fa 5F5F5746 		.ascii	"__WFE\000"
 2124      4500
 2125              	.LASF53:
 2126 0300 5F5F5746 		.ascii	"__WFI\000"
 2126      4900
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 67


 2127              	.LASF25:
 2128 0306 41465352 		.ascii	"AFSR\000"
 2128      00
 2129              	.LASF50:
 2130 030b 5057525F 		.ascii	"PWR_EnterSTANDBYMode\000"
 2130      456E7465 
 2130      72535441 
 2130      4E444259 
 2130      4D6F6465 
 2131              	.LASF29:
 2132 0320 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2132      52784275 
 2132      66666572 
 2132      00
 2133              	.LASF32:
 2134 032d 466C6167 		.ascii	"FlagStatus\000"
 2134      53746174 
 2134      757300
 2135              	.LASF34:
 2136 0338 454E4142 		.ascii	"ENABLE\000"
 2136      4C4500
 2137              	.LASF57:
 2138 033f 5057525F 		.ascii	"PWR_GetFlagStatus\000"
 2138      47657446 
 2138      6C616753 
 2138      74617475 
 2138      7300
 2139              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_pwr.c
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:15     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:21     .text:00000000 __WFI
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:62     .text:0000000e __WFE
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:103    .text:0000001c PWR_DeInit
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:139    .text:00000038 PWR_BackupAccessCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:179    .text:00000054 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:183    .text:00000058 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:190    .text:00000058 PWR_PVDCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:230    .text:00000074 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:234    .text:00000078 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:241    .text:00000078 PWR_PVDLevelConfig
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:296    .text:000000ac $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:300    .text:000000b0 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:307    .text:000000b0 PWR_WakeUpPinCmd
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:347    .text:000000cc $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:351    .text:000000d0 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:358    .text:000000d0 PWR_EnterSTOPMode
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:434    .text:0000012c $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:439    .text:00000134 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:446    .text:00000134 PWR_EnterSTANDBYMode
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:486    .text:00000164 $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:491    .text:0000016c $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:498    .text:0000016c PWR_GetFlagStatus
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:554    .text:0000019c $d
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:558    .text:000001a0 $t
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:565    .text:000001a0 PWR_ClearFlag
G:\Users\Jaxb\AppData\Local\Temp\ccVfcF73.s:608    .text:000001c0 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
