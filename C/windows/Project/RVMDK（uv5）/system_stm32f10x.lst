ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f10x.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  22              		.type	SystemInit, %function
  23              	SystemInit:
  24              	.LFB29:
  25              		.file 1 "../../source/src/CMSIS/system_stm32f10x.c"
   1:../../source/src/CMSIS/system_stm32f10x.c **** /**
   2:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
   3:../../source/src/CMSIS/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../../source/src/CMSIS/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../../source/src/CMSIS/system_stm32f10x.c ****   * @version V3.5.0
   6:../../source/src/CMSIS/system_stm32f10x.c ****   * @date    11-March-2011
   7:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../../source/src/CMSIS/system_stm32f10x.c ****   * 
   9:../../source/src/CMSIS/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../../source/src/CMSIS/system_stm32f10x.c ****   *     user application:
  11:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../../source/src/CMSIS/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../../source/src/CMSIS/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../../source/src/CMSIS/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../../source/src/CMSIS/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../../source/src/CMSIS/system_stm32f10x.c ****   *
  17:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../../source/src/CMSIS/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../../source/src/CMSIS/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../../source/src/CMSIS/system_stm32f10x.c ****   *                                     
  21:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../../source/src/CMSIS/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../../source/src/CMSIS/system_stm32f10x.c ****   *                                 during program execution.
  24:../../source/src/CMSIS/system_stm32f10x.c ****   *
  25:../../source/src/CMSIS/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../../source/src/CMSIS/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../../source/src/CMSIS/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../../source/src/CMSIS/system_stm32f10x.c ****   *
  29:../../source/src/CMSIS/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../../source/src/CMSIS/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../../source/src/CMSIS/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../../source/src/CMSIS/system_stm32f10x.c ****   *
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 2


  33:../../source/src/CMSIS/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../../source/src/CMSIS/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../../source/src/CMSIS/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../../source/src/CMSIS/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../../source/src/CMSIS/system_stm32f10x.c ****   *    configuration.
  38:../../source/src/CMSIS/system_stm32f10x.c ****   *        
  39:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
  40:../../source/src/CMSIS/system_stm32f10x.c ****   * @attention
  41:../../source/src/CMSIS/system_stm32f10x.c ****   *
  42:../../source/src/CMSIS/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../../source/src/CMSIS/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../../source/src/CMSIS/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../../source/src/CMSIS/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../../source/src/CMSIS/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../../source/src/CMSIS/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../../source/src/CMSIS/system_stm32f10x.c ****   *
  49:../../source/src/CMSIS/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
  51:../../source/src/CMSIS/system_stm32f10x.c ****   */
  52:../../source/src/CMSIS/system_stm32f10x.c **** 
  53:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  55:../../source/src/CMSIS/system_stm32f10x.c ****   */
  56:../../source/src/CMSIS/system_stm32f10x.c **** 
  57:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  59:../../source/src/CMSIS/system_stm32f10x.c ****   */  
  60:../../source/src/CMSIS/system_stm32f10x.c ****   
  61:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  63:../../source/src/CMSIS/system_stm32f10x.c ****   */
  64:../../source/src/CMSIS/system_stm32f10x.c **** 
  65:../../source/src/CMSIS/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../../source/src/CMSIS/system_stm32f10x.c **** 
  67:../../source/src/CMSIS/system_stm32f10x.c **** /**
  68:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
  69:../../source/src/CMSIS/system_stm32f10x.c ****   */
  70:../../source/src/CMSIS/system_stm32f10x.c **** 
  71:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  73:../../source/src/CMSIS/system_stm32f10x.c ****   */
  74:../../source/src/CMSIS/system_stm32f10x.c **** 
  75:../../source/src/CMSIS/system_stm32f10x.c **** /**
  76:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
  77:../../source/src/CMSIS/system_stm32f10x.c ****   */
  78:../../source/src/CMSIS/system_stm32f10x.c **** 
  79:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  81:../../source/src/CMSIS/system_stm32f10x.c ****   */
  82:../../source/src/CMSIS/system_stm32f10x.c **** 
  83:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../../source/src/CMSIS/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../../source/src/CMSIS/system_stm32f10x.c ****    
  86:../../source/src/CMSIS/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../../source/src/CMSIS/system_stm32f10x.c ****    ============== 
  88:../../source/src/CMSIS/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../../source/src/CMSIS/system_stm32f10x.c **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 3


  90:../../source/src/CMSIS/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../../source/src/CMSIS/system_stm32f10x.c ****       maximum frequency.
  92:../../source/src/CMSIS/system_stm32f10x.c ****       
  93:../../source/src/CMSIS/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../../source/src/CMSIS/system_stm32f10x.c ****     source.
  95:../../source/src/CMSIS/system_stm32f10x.c **** 
  96:../../source/src/CMSIS/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../../source/src/CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../../source/src/CMSIS/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../../source/src/CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../../source/src/CMSIS/system_stm32f10x.c ****           used to drive the System clock.
 101:../../source/src/CMSIS/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../../source/src/CMSIS/system_stm32f10x.c ****           the System clock.
 103:../../source/src/CMSIS/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../../source/src/CMSIS/system_stm32f10x.c ****     */
 105:../../source/src/CMSIS/system_stm32f10x.c ****     
 106:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../../source/src/CMSIS/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../../source/src/CMSIS/system_stm32f10x.c **** #else
 110:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../../source/src/CMSIS/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 117:../../source/src/CMSIS/system_stm32f10x.c **** 
 118:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:../../source/src/CMSIS/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../../source/src/CMSIS/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../../source/src/CMSIS/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 124:../../source/src/CMSIS/system_stm32f10x.c **** 
 125:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../../source/src/CMSIS/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../../source/src/CMSIS/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../../source/src/CMSIS/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../../source/src/CMSIS/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../../source/src/CMSIS/system_stm32f10x.c **** 
 131:../../source/src/CMSIS/system_stm32f10x.c **** 
 132:../../source/src/CMSIS/system_stm32f10x.c **** /**
 133:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 134:../../source/src/CMSIS/system_stm32f10x.c ****   */
 135:../../source/src/CMSIS/system_stm32f10x.c **** 
 136:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 138:../../source/src/CMSIS/system_stm32f10x.c ****   */
 139:../../source/src/CMSIS/system_stm32f10x.c **** 
 140:../../source/src/CMSIS/system_stm32f10x.c **** /**
 141:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 142:../../source/src/CMSIS/system_stm32f10x.c ****   */
 143:../../source/src/CMSIS/system_stm32f10x.c **** 
 144:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 146:../../source/src/CMSIS/system_stm32f10x.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 4


 147:../../source/src/CMSIS/system_stm32f10x.c **** 
 148:../../source/src/CMSIS/system_stm32f10x.c **** /*******************************************************************************
 149:../../source/src/CMSIS/system_stm32f10x.c **** *  Clock Definitions
 150:../../source/src/CMSIS/system_stm32f10x.c **** *******************************************************************************/
 151:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../../source/src/CMSIS/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 166:../../source/src/CMSIS/system_stm32f10x.c **** 
 167:../../source/src/CMSIS/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../../source/src/CMSIS/system_stm32f10x.c **** /**
 169:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 170:../../source/src/CMSIS/system_stm32f10x.c ****   */
 171:../../source/src/CMSIS/system_stm32f10x.c **** 
 172:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 174:../../source/src/CMSIS/system_stm32f10x.c ****   */
 175:../../source/src/CMSIS/system_stm32f10x.c **** 
 176:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClock(void);
 177:../../source/src/CMSIS/system_stm32f10x.c **** 
 178:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 191:../../source/src/CMSIS/system_stm32f10x.c **** 
 192:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../../source/src/CMSIS/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../../source/src/CMSIS/system_stm32f10x.c **** 
 196:../../source/src/CMSIS/system_stm32f10x.c **** /**
 197:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 198:../../source/src/CMSIS/system_stm32f10x.c ****   */
 199:../../source/src/CMSIS/system_stm32f10x.c **** 
 200:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 202:../../source/src/CMSIS/system_stm32f10x.c ****   */
 203:../../source/src/CMSIS/system_stm32f10x.c **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 5


 204:../../source/src/CMSIS/system_stm32f10x.c **** /**
 205:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../../source/src/CMSIS/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../../source/src/CMSIS/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 210:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 211:../../source/src/CMSIS/system_stm32f10x.c ****   */
 212:../../source/src/CMSIS/system_stm32f10x.c **** void SystemInit (void)
 213:../../source/src/CMSIS/system_stm32f10x.c **** {
  26              		.loc 1 213 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 30B4     		push	{r4, r5}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 5, -4
  36              	.LBB8:
  37              	.LBB9:
  38              	.LBB10:
 214:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../../source/src/CMSIS/system_stm32f10x.c ****   /* Set HSION bit */
 216:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 217:../../source/src/CMSIS/system_stm32f10x.c **** 
 218:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 221:../../source/src/CMSIS/system_stm32f10x.c **** #else
 222:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../../source/src/CMSIS/system_stm32f10x.c ****   
 225:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 227:../../source/src/CMSIS/system_stm32f10x.c **** 
 228:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 230:../../source/src/CMSIS/system_stm32f10x.c **** 
 231:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 233:../../source/src/CMSIS/system_stm32f10x.c **** 
 234:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../../source/src/CMSIS/system_stm32f10x.c **** 
 238:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../../source/src/CMSIS/system_stm32f10x.c **** 
 241:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:../../source/src/CMSIS/system_stm32f10x.c **** 
 247:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 6


 248:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:../../source/src/CMSIS/system_stm32f10x.c **** #else
 250:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 252:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../../source/src/CMSIS/system_stm32f10x.c ****     
 254:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../../source/src/CMSIS/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../../source/src/CMSIS/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../../source/src/CMSIS/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../../source/src/CMSIS/system_stm32f10x.c **** #endif 
 259:../../source/src/CMSIS/system_stm32f10x.c **** 
 260:../../source/src/CMSIS/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../../source/src/CMSIS/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClock();
 263:../../source/src/CMSIS/system_stm32f10x.c **** 
 264:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../../source/src/CMSIS/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../../source/src/CMSIS/system_stm32f10x.c **** #else
 267:../../source/src/CMSIS/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 268:../../source/src/CMSIS/system_stm32f10x.c **** #endif 
 269:../../source/src/CMSIS/system_stm32f10x.c **** }
 270:../../source/src/CMSIS/system_stm32f10x.c **** 
 271:../../source/src/CMSIS/system_stm32f10x.c **** /**
 272:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../../source/src/CMSIS/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../../source/src/CMSIS/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../../source/src/CMSIS/system_stm32f10x.c ****   *         other parameters.
 276:../../source/src/CMSIS/system_stm32f10x.c ****   *           
 277:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../../source/src/CMSIS/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../../source/src/CMSIS/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../../source/src/CMSIS/system_stm32f10x.c ****   *     
 281:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../../source/src/CMSIS/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../../source/src/CMSIS/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../../source/src/CMSIS/system_stm32f10x.c ****   *             
 285:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../../source/src/CMSIS/system_stm32f10x.c ****   *                                              
 287:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../../source/src/CMSIS/system_stm32f10x.c ****   *                          
 289:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../../source/src/CMSIS/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../../source/src/CMSIS/system_stm32f10x.c ****   *         
 292:../../source/src/CMSIS/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../../source/src/CMSIS/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../../source/src/CMSIS/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../../source/src/CMSIS/system_stm32f10x.c ****   *    
 296:../../source/src/CMSIS/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../../source/src/CMSIS/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../../source/src/CMSIS/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../../source/src/CMSIS/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../../source/src/CMSIS/system_stm32f10x.c ****   *                
 301:../../source/src/CMSIS/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../../source/src/CMSIS/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 304:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 7


 305:../../source/src/CMSIS/system_stm32f10x.c ****   */
 306:../../source/src/CMSIS/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../../source/src/CMSIS/system_stm32f10x.c **** {
 308:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 309:../../source/src/CMSIS/system_stm32f10x.c **** 
 310:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../../source/src/CMSIS/system_stm32f10x.c **** 
 314:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../../source/src/CMSIS/system_stm32f10x.c ****     
 318:../../source/src/CMSIS/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../../source/src/CMSIS/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 320:../../source/src/CMSIS/system_stm32f10x.c ****   
 321:../../source/src/CMSIS/system_stm32f10x.c ****   switch (tmp)
 322:../../source/src/CMSIS/system_stm32f10x.c ****   {
 323:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 325:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 326:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 328:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 329:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../../source/src/CMSIS/system_stm32f10x.c **** 
 331:../../source/src/CMSIS/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 333:../../source/src/CMSIS/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 334:../../source/src/CMSIS/system_stm32f10x.c ****       
 335:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 337:../../source/src/CMSIS/system_stm32f10x.c ****       
 338:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 339:../../source/src/CMSIS/system_stm32f10x.c ****       {
 340:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../../source/src/CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 342:../../source/src/CMSIS/system_stm32f10x.c ****       }
 343:../../source/src/CMSIS/system_stm32f10x.c ****       else
 344:../../source/src/CMSIS/system_stm32f10x.c ****       {
 345:../../source/src/CMSIS/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../../source/src/CMSIS/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../../source/src/CMSIS/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../../source/src/CMSIS/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../../source/src/CMSIS/system_stm32f10x.c ****  #else
 350:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../../source/src/CMSIS/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../../source/src/CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../../source/src/CMSIS/system_stm32f10x.c ****         }
 355:../../source/src/CMSIS/system_stm32f10x.c ****         else
 356:../../source/src/CMSIS/system_stm32f10x.c ****         {
 357:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../../source/src/CMSIS/system_stm32f10x.c ****         }
 359:../../source/src/CMSIS/system_stm32f10x.c ****  #endif
 360:../../source/src/CMSIS/system_stm32f10x.c ****       }
 361:../../source/src/CMSIS/system_stm32f10x.c **** #else
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 8


 362:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../../source/src/CMSIS/system_stm32f10x.c ****       
 364:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../../source/src/CMSIS/system_stm32f10x.c ****       {
 366:../../source/src/CMSIS/system_stm32f10x.c ****          pllmull += 2;
 367:../../source/src/CMSIS/system_stm32f10x.c ****       }
 368:../../source/src/CMSIS/system_stm32f10x.c ****       else
 369:../../source/src/CMSIS/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../../source/src/CMSIS/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../../source/src/CMSIS/system_stm32f10x.c ****       }
 372:../../source/src/CMSIS/system_stm32f10x.c ****             
 373:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../../source/src/CMSIS/system_stm32f10x.c ****       {
 375:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../../source/src/CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../../source/src/CMSIS/system_stm32f10x.c ****       }
 378:../../source/src/CMSIS/system_stm32f10x.c ****       else
 379:../../source/src/CMSIS/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../../source/src/CMSIS/system_stm32f10x.c ****         
 381:../../source/src/CMSIS/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../../source/src/CMSIS/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../../source/src/CMSIS/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../../source/src/CMSIS/system_stm32f10x.c ****         
 385:../../source/src/CMSIS/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../../source/src/CMSIS/system_stm32f10x.c ****         { 
 387:../../source/src/CMSIS/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../../source/src/CMSIS/system_stm32f10x.c ****         }
 390:../../source/src/CMSIS/system_stm32f10x.c ****         else
 391:../../source/src/CMSIS/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../../source/src/CMSIS/system_stm32f10x.c ****           
 393:../../source/src/CMSIS/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../../source/src/CMSIS/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../../source/src/CMSIS/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../../source/src/CMSIS/system_stm32f10x.c ****         }
 398:../../source/src/CMSIS/system_stm32f10x.c ****       }
 399:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 401:../../source/src/CMSIS/system_stm32f10x.c **** 
 402:../../source/src/CMSIS/system_stm32f10x.c ****     default:
 403:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 404:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 405:../../source/src/CMSIS/system_stm32f10x.c ****   }
 406:../../source/src/CMSIS/system_stm32f10x.c ****   
 407:../../source/src/CMSIS/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../../source/src/CMSIS/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../../source/src/CMSIS/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 410:../../source/src/CMSIS/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../../source/src/CMSIS/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 412:../../source/src/CMSIS/system_stm32f10x.c **** }
 413:../../source/src/CMSIS/system_stm32f10x.c **** 
 414:../../source/src/CMSIS/system_stm32f10x.c **** /**
 415:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 417:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 418:../../source/src/CMSIS/system_stm32f10x.c ****   */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 9


 419:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClock(void)
 420:../../source/src/CMSIS/system_stm32f10x.c **** {
 421:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo24();
 425:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo36();
 427:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo48();
 429:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo72();
 433:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 434:../../source/src/CMSIS/system_stm32f10x.c ****  
 435:../../source/src/CMSIS/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../../source/src/CMSIS/system_stm32f10x.c ****     source (default after reset) */ 
 437:../../source/src/CMSIS/system_stm32f10x.c **** }
 438:../../source/src/CMSIS/system_stm32f10x.c **** 
 439:../../source/src/CMSIS/system_stm32f10x.c **** /**
 440:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../../source/src/CMSIS/system_stm32f10x.c ****   *          before jump to __main
 442:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 443:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 444:../../source/src/CMSIS/system_stm32f10x.c ****   */ 
 445:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../../source/src/CMSIS/system_stm32f10x.c **** /**
 447:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../../source/src/CMSIS/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../../source/src/CMSIS/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../../source/src/CMSIS/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../../source/src/CMSIS/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 453:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 454:../../source/src/CMSIS/system_stm32f10x.c ****   */ 
 455:../../source/src/CMSIS/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../../source/src/CMSIS/system_stm32f10x.c **** {
 457:../../source/src/CMSIS/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../../source/src/CMSIS/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../../source/src/CMSIS/system_stm32f10x.c **** 
 460:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../../source/src/CMSIS/system_stm32f10x.c ****   
 463:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../../source/src/CMSIS/system_stm32f10x.c ****   
 466:../../source/src/CMSIS/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../../source/src/CMSIS/system_stm32f10x.c ****   
 472:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../../source/src/CMSIS/system_stm32f10x.c **** 
 475:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 10


 476:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../../source/src/CMSIS/system_stm32f10x.c **** 
 478:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../../source/src/CMSIS/system_stm32f10x.c **** 
 481:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:../../source/src/CMSIS/system_stm32f10x.c ****    
 484:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../../source/src/CMSIS/system_stm32f10x.c ****   
 487:../../source/src/CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../../source/src/CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../../source/src/CMSIS/system_stm32f10x.c **** }
 490:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../../source/src/CMSIS/system_stm32f10x.c **** 
 492:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../../source/src/CMSIS/system_stm32f10x.c **** /**
 494:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 498:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 499:../../source/src/CMSIS/system_stm32f10x.c ****   */
 500:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../../source/src/CMSIS/system_stm32f10x.c **** {
 502:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../../source/src/CMSIS/system_stm32f10x.c ****   
 504:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 506:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../../source/src/CMSIS/system_stm32f10x.c ****  
 508:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../../source/src/CMSIS/system_stm32f10x.c ****   do
 510:../../source/src/CMSIS/system_stm32f10x.c ****   {
 511:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 513:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../../source/src/CMSIS/system_stm32f10x.c **** 
 515:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../../source/src/CMSIS/system_stm32f10x.c ****   {
 517:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../../source/src/CMSIS/system_stm32f10x.c ****   }
 519:../../source/src/CMSIS/system_stm32f10x.c ****   else
 520:../../source/src/CMSIS/system_stm32f10x.c ****   {
 521:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 523:../../source/src/CMSIS/system_stm32f10x.c **** 
 524:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../../source/src/CMSIS/system_stm32f10x.c ****   {
 526:../../source/src/CMSIS/system_stm32f10x.c **** 
 527:../../source/src/CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../../source/src/CMSIS/system_stm32f10x.c **** 
 531:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 11


 533:../../source/src/CMSIS/system_stm32f10x.c **** 
 534:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../../source/src/CMSIS/system_stm32f10x.c **** #else
 537:../../source/src/CMSIS/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../../source/src/CMSIS/system_stm32f10x.c **** 	{
 539:../../source/src/CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:../../source/src/CMSIS/system_stm32f10x.c **** 	}
 541:../../source/src/CMSIS/system_stm32f10x.c **** 	else
 542:../../source/src/CMSIS/system_stm32f10x.c **** 	{
 543:../../source/src/CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../../source/src/CMSIS/system_stm32f10x.c **** 	}
 545:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 547:../../source/src/CMSIS/system_stm32f10x.c ****  
 548:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../../source/src/CMSIS/system_stm32f10x.c ****       
 551:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../../source/src/CMSIS/system_stm32f10x.c ****     
 554:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../../source/src/CMSIS/system_stm32f10x.c ****     
 557:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../../source/src/CMSIS/system_stm32f10x.c **** 
 561:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../../source/src/CMSIS/system_stm32f10x.c ****     {
 564:../../source/src/CMSIS/system_stm32f10x.c ****     }
 565:../../source/src/CMSIS/system_stm32f10x.c ****   }
 566:../../source/src/CMSIS/system_stm32f10x.c ****   else
 567:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 570:../../source/src/CMSIS/system_stm32f10x.c **** }
 571:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../../source/src/CMSIS/system_stm32f10x.c **** /**
 573:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 577:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 578:../../source/src/CMSIS/system_stm32f10x.c ****   */
 579:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../../source/src/CMSIS/system_stm32f10x.c **** {
 581:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:../../source/src/CMSIS/system_stm32f10x.c ****   
 583:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 585:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:../../source/src/CMSIS/system_stm32f10x.c ****  
 587:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../../source/src/CMSIS/system_stm32f10x.c ****   do
 589:../../source/src/CMSIS/system_stm32f10x.c ****   {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 12


 590:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 592:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:../../source/src/CMSIS/system_stm32f10x.c **** 
 594:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:../../source/src/CMSIS/system_stm32f10x.c ****   {
 596:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:../../source/src/CMSIS/system_stm32f10x.c ****   }
 598:../../source/src/CMSIS/system_stm32f10x.c ****   else
 599:../../source/src/CMSIS/system_stm32f10x.c ****   {
 600:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 602:../../source/src/CMSIS/system_stm32f10x.c **** 
 603:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:../../source/src/CMSIS/system_stm32f10x.c ****   {
 605:../../source/src/CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../../source/src/CMSIS/system_stm32f10x.c **** 
 609:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 613:../../source/src/CMSIS/system_stm32f10x.c ****  
 614:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:../../source/src/CMSIS/system_stm32f10x.c ****       
 617:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:../../source/src/CMSIS/system_stm32f10x.c ****     
 620:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:../../source/src/CMSIS/system_stm32f10x.c ****     
 623:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../../source/src/CMSIS/system_stm32f10x.c **** 
 630:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../../source/src/CMSIS/system_stm32f10x.c ****   
 637:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../../source/src/CMSIS/system_stm32f10x.c ****     {
 642:../../source/src/CMSIS/system_stm32f10x.c ****     }   
 643:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 13


 647:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 648:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../../source/src/CMSIS/system_stm32f10x.c **** 
 653:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 654:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:../../source/src/CMSIS/system_stm32f10x.c **** 
 656:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:../../source/src/CMSIS/system_stm32f10x.c ****     {
 659:../../source/src/CMSIS/system_stm32f10x.c ****     }
 660:../../source/src/CMSIS/system_stm32f10x.c **** 
 661:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:../../source/src/CMSIS/system_stm32f10x.c **** 
 665:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:../../source/src/CMSIS/system_stm32f10x.c ****     {
 668:../../source/src/CMSIS/system_stm32f10x.c ****     }
 669:../../source/src/CMSIS/system_stm32f10x.c ****   }
 670:../../source/src/CMSIS/system_stm32f10x.c ****   else
 671:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 674:../../source/src/CMSIS/system_stm32f10x.c **** }
 675:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:../../source/src/CMSIS/system_stm32f10x.c **** /**
 677:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 681:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 682:../../source/src/CMSIS/system_stm32f10x.c ****   */
 683:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:../../source/src/CMSIS/system_stm32f10x.c **** {
 685:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:../../source/src/CMSIS/system_stm32f10x.c ****   
 687:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 689:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:../../source/src/CMSIS/system_stm32f10x.c ****  
 691:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:../../source/src/CMSIS/system_stm32f10x.c ****   do
 693:../../source/src/CMSIS/system_stm32f10x.c ****   {
 694:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 696:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:../../source/src/CMSIS/system_stm32f10x.c **** 
 698:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:../../source/src/CMSIS/system_stm32f10x.c ****   {
 700:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:../../source/src/CMSIS/system_stm32f10x.c ****   }
 702:../../source/src/CMSIS/system_stm32f10x.c ****   else
 703:../../source/src/CMSIS/system_stm32f10x.c ****   {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 14


 704:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 706:../../source/src/CMSIS/system_stm32f10x.c **** 
 707:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:../../source/src/CMSIS/system_stm32f10x.c ****   {
 709:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:../../source/src/CMSIS/system_stm32f10x.c **** 
 712:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:../../source/src/CMSIS/system_stm32f10x.c ****  
 716:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:../../source/src/CMSIS/system_stm32f10x.c ****       
 719:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:../../source/src/CMSIS/system_stm32f10x.c ****     
 722:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:../../source/src/CMSIS/system_stm32f10x.c ****     
 725:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:../../source/src/CMSIS/system_stm32f10x.c ****     
 728:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:../../source/src/CMSIS/system_stm32f10x.c **** 
 733:../../source/src/CMSIS/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:../../source/src/CMSIS/system_stm32f10x.c ****         
 736:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:../../source/src/CMSIS/system_stm32f10x.c ****   
 741:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 742:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:../../source/src/CMSIS/system_stm32f10x.c ****     {
 746:../../source/src/CMSIS/system_stm32f10x.c ****     }
 747:../../source/src/CMSIS/system_stm32f10x.c ****     
 748:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 749:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:../../source/src/CMSIS/system_stm32f10x.c **** 
 754:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 755:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:../../source/src/CMSIS/system_stm32f10x.c **** 
 757:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:../../source/src/CMSIS/system_stm32f10x.c ****     {
 760:../../source/src/CMSIS/system_stm32f10x.c ****     }
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 15


 761:../../source/src/CMSIS/system_stm32f10x.c **** 
 762:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:../../source/src/CMSIS/system_stm32f10x.c **** 
 766:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:../../source/src/CMSIS/system_stm32f10x.c ****     {
 769:../../source/src/CMSIS/system_stm32f10x.c ****     }
 770:../../source/src/CMSIS/system_stm32f10x.c ****   }
 771:../../source/src/CMSIS/system_stm32f10x.c ****   else
 772:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 775:../../source/src/CMSIS/system_stm32f10x.c **** }
 776:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:../../source/src/CMSIS/system_stm32f10x.c **** /**
 778:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 782:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 783:../../source/src/CMSIS/system_stm32f10x.c ****   */
 784:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:../../source/src/CMSIS/system_stm32f10x.c **** {
 786:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:../../source/src/CMSIS/system_stm32f10x.c ****   
 788:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 790:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:../../source/src/CMSIS/system_stm32f10x.c ****  
 792:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:../../source/src/CMSIS/system_stm32f10x.c ****   do
 794:../../source/src/CMSIS/system_stm32f10x.c ****   {
 795:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 797:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:../../source/src/CMSIS/system_stm32f10x.c **** 
 799:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:../../source/src/CMSIS/system_stm32f10x.c ****   {
 801:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:../../source/src/CMSIS/system_stm32f10x.c ****   }
 803:../../source/src/CMSIS/system_stm32f10x.c ****   else
 804:../../source/src/CMSIS/system_stm32f10x.c ****   {
 805:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 807:../../source/src/CMSIS/system_stm32f10x.c **** 
 808:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:../../source/src/CMSIS/system_stm32f10x.c ****   {
 810:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:../../source/src/CMSIS/system_stm32f10x.c **** 
 813:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:../../source/src/CMSIS/system_stm32f10x.c ****  
 817:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 16


 818:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:../../source/src/CMSIS/system_stm32f10x.c ****       
 820:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:../../source/src/CMSIS/system_stm32f10x.c ****     
 823:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:../../source/src/CMSIS/system_stm32f10x.c ****     
 826:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:../../source/src/CMSIS/system_stm32f10x.c ****         
 831:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:../../source/src/CMSIS/system_stm32f10x.c ****   
 836:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 837:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:../../source/src/CMSIS/system_stm32f10x.c ****     {
 841:../../source/src/CMSIS/system_stm32f10x.c ****     }
 842:../../source/src/CMSIS/system_stm32f10x.c ****     
 843:../../source/src/CMSIS/system_stm32f10x.c ****    
 844:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 849:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:../../source/src/CMSIS/system_stm32f10x.c **** 
 854:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 855:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:../../source/src/CMSIS/system_stm32f10x.c **** 
 857:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:../../source/src/CMSIS/system_stm32f10x.c ****     {
 860:../../source/src/CMSIS/system_stm32f10x.c ****     }
 861:../../source/src/CMSIS/system_stm32f10x.c **** 
 862:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:../../source/src/CMSIS/system_stm32f10x.c **** 
 866:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:../../source/src/CMSIS/system_stm32f10x.c ****     {
 869:../../source/src/CMSIS/system_stm32f10x.c ****     }
 870:../../source/src/CMSIS/system_stm32f10x.c ****   }
 871:../../source/src/CMSIS/system_stm32f10x.c ****   else
 872:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:../../source/src/CMSIS/system_stm32f10x.c ****   } 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 17


 875:../../source/src/CMSIS/system_stm32f10x.c **** }
 876:../../source/src/CMSIS/system_stm32f10x.c **** 
 877:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:../../source/src/CMSIS/system_stm32f10x.c **** /**
 879:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 883:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 884:../../source/src/CMSIS/system_stm32f10x.c ****   */
 885:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:../../source/src/CMSIS/system_stm32f10x.c **** {
 887:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:../../source/src/CMSIS/system_stm32f10x.c ****   
 889:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 891:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:../../source/src/CMSIS/system_stm32f10x.c ****  
 893:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:../../source/src/CMSIS/system_stm32f10x.c ****   do
 895:../../source/src/CMSIS/system_stm32f10x.c ****   {
 896:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 898:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:../../source/src/CMSIS/system_stm32f10x.c **** 
 900:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:../../source/src/CMSIS/system_stm32f10x.c ****   {
 902:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:../../source/src/CMSIS/system_stm32f10x.c ****   }
 904:../../source/src/CMSIS/system_stm32f10x.c ****   else
 905:../../source/src/CMSIS/system_stm32f10x.c ****   {
 906:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 908:../../source/src/CMSIS/system_stm32f10x.c **** 
 909:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:../../source/src/CMSIS/system_stm32f10x.c ****   {
 911:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:../../source/src/CMSIS/system_stm32f10x.c **** 
 914:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:../../source/src/CMSIS/system_stm32f10x.c ****  
 918:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:../../source/src/CMSIS/system_stm32f10x.c ****       
 921:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:../../source/src/CMSIS/system_stm32f10x.c ****     
 924:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:../../source/src/CMSIS/system_stm32f10x.c **** 
 927:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:../../source/src/CMSIS/system_stm32f10x.c ****         
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 18


 932:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:../../source/src/CMSIS/system_stm32f10x.c ****   
 937:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 938:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:../../source/src/CMSIS/system_stm32f10x.c ****     {
 942:../../source/src/CMSIS/system_stm32f10x.c ****     }
 943:../../source/src/CMSIS/system_stm32f10x.c ****     
 944:../../source/src/CMSIS/system_stm32f10x.c ****    
 945:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:../../source/src/CMSIS/system_stm32f10x.c **** #else     
 950:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:../../source/src/CMSIS/system_stm32f10x.c **** 
 954:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:../../source/src/CMSIS/system_stm32f10x.c **** 
 956:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 957:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:../../source/src/CMSIS/system_stm32f10x.c **** 
 959:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:../../source/src/CMSIS/system_stm32f10x.c ****     {
 962:../../source/src/CMSIS/system_stm32f10x.c ****     }
 963:../../source/src/CMSIS/system_stm32f10x.c **** 
 964:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:../../source/src/CMSIS/system_stm32f10x.c **** 
 968:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:../../source/src/CMSIS/system_stm32f10x.c ****     {
 971:../../source/src/CMSIS/system_stm32f10x.c ****     }
 972:../../source/src/CMSIS/system_stm32f10x.c ****   }
 973:../../source/src/CMSIS/system_stm32f10x.c ****   else
 974:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 977:../../source/src/CMSIS/system_stm32f10x.c **** }
 978:../../source/src/CMSIS/system_stm32f10x.c **** 
 979:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:../../source/src/CMSIS/system_stm32f10x.c **** /**
 981:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 985:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 986:../../source/src/CMSIS/system_stm32f10x.c ****   */
 987:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:../../source/src/CMSIS/system_stm32f10x.c **** {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 19


 989:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  39              		.loc 1 989 0
  40 0002 0024     		movs	r4, #0
  41              	.LBE10:
  42              	.LBE9:
  43              	.LBE8:
 251:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
  44              		.loc 1 251 0
  45 0004 4FF41F05 		mov	r5, #10420224
 216:../../source/src/CMSIS/system_stm32f10x.c **** 
  46              		.loc 1 216 0
  47 0008 3A4B     		ldr	r3, .L16
 220:../../source/src/CMSIS/system_stm32f10x.c **** #else
  48              		.loc 1 220 0
  49 000a 3B49     		ldr	r1, .L16+4
 216:../../source/src/CMSIS/system_stm32f10x.c **** 
  50              		.loc 1 216 0
  51 000c 1868     		ldr	r0, [r3]
 213:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  52              		.loc 1 213 0
  53 000e 82B0     		sub	sp, sp, #8
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 16
 216:../../source/src/CMSIS/system_stm32f10x.c **** 
  56              		.loc 1 216 0
  57 0010 40F00100 		orr	r0, r0, #1
  58 0014 1860     		str	r0, [r3]
 220:../../source/src/CMSIS/system_stm32f10x.c **** #else
  59              		.loc 1 220 0
  60 0016 5868     		ldr	r0, [r3, #4]
  61              	.LBB17:
  62              	.LBB14:
  63              	.LBB11:
 990:../../source/src/CMSIS/system_stm32f10x.c ****   
 991:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 993:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 994:../../source/src/CMSIS/system_stm32f10x.c ****  
 995:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:../../source/src/CMSIS/system_stm32f10x.c ****   do
 997:../../source/src/CMSIS/system_stm32f10x.c ****   {
 998:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  64              		.loc 1 998 0
  65 0018 1A46     		mov	r2, r3
  66              	.LBE11:
  67              	.LBE14:
  68              	.LBE17:
 220:../../source/src/CMSIS/system_stm32f10x.c **** #else
  69              		.loc 1 220 0
  70 001a 0140     		ands	r1, r1, r0
  71 001c 5960     		str	r1, [r3, #4]
 226:../../source/src/CMSIS/system_stm32f10x.c **** 
  72              		.loc 1 226 0
  73 001e 1968     		ldr	r1, [r3]
  74 0020 21F08471 		bic	r1, r1, #17301504
  75 0024 21F48031 		bic	r1, r1, #65536
  76 0028 1960     		str	r1, [r3]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 20


 229:../../source/src/CMSIS/system_stm32f10x.c **** 
  77              		.loc 1 229 0
  78 002a 1968     		ldr	r1, [r3]
  79 002c 21F48021 		bic	r1, r1, #262144
  80 0030 1960     		str	r1, [r3]
 232:../../source/src/CMSIS/system_stm32f10x.c **** 
  81              		.loc 1 232 0
  82 0032 5968     		ldr	r1, [r3, #4]
  83 0034 21F4FE01 		bic	r1, r1, #8323072
  84 0038 5960     		str	r1, [r3, #4]
 251:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
  85              		.loc 1 251 0
  86 003a 9D60     		str	r5, [r3, #8]
  87              	.LBB18:
  88              	.LBB15:
  89              	.LBB12:
 989:../../source/src/CMSIS/system_stm32f10x.c ****   
  90              		.loc 1 989 0
  91 003c 0094     		str	r4, [sp]
  92 003e 0194     		str	r4, [sp, #4]
 993:../../source/src/CMSIS/system_stm32f10x.c ****  
  93              		.loc 1 993 0
  94 0040 1968     		ldr	r1, [r3]
  95 0042 41F48031 		orr	r1, r1, #65536
  96 0046 1960     		str	r1, [r3]
  97 0048 03E0     		b	.L3
  98              	.L14:
 999:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
1000:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  99              		.loc 1 1000 0
 100 004a 009B     		ldr	r3, [sp]
 101 004c B3F5A06F 		cmp	r3, #1280
 102 0050 09D0     		beq	.L2
 103              	.L3:
 998:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 104              		.loc 1 998 0
 105 0052 1368     		ldr	r3, [r2]
 106 0054 03F40033 		and	r3, r3, #131072
 107 0058 0193     		str	r3, [sp, #4]
 999:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 108              		.loc 1 999 0
 109 005a 009B     		ldr	r3, [sp]
 110 005c 0133     		adds	r3, r3, #1
 111 005e 0093     		str	r3, [sp]
 112              		.loc 1 1000 0
 113 0060 019B     		ldr	r3, [sp, #4]
 114 0062 002B     		cmp	r3, #0
 115 0064 F1D0     		beq	.L14
 116              	.L2:
1001:../../source/src/CMSIS/system_stm32f10x.c **** 
1002:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 117              		.loc 1 1002 0
 118 0066 234B     		ldr	r3, .L16
 119 0068 1B68     		ldr	r3, [r3]
 120 006a 13F40033 		ands	r3, r3, #131072
1003:../../source/src/CMSIS/system_stm32f10x.c ****   {
1004:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 21


 121              		.loc 1 1004 0
 122 006e 18BF     		it	ne
 123 0070 0123     		movne	r3, #1
1005:../../source/src/CMSIS/system_stm32f10x.c ****   }
1006:../../source/src/CMSIS/system_stm32f10x.c ****   else
1007:../../source/src/CMSIS/system_stm32f10x.c ****   {
1008:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 124              		.loc 1 1008 0
 125 0072 0193     		str	r3, [sp, #4]
1009:../../source/src/CMSIS/system_stm32f10x.c ****   }  
1010:../../source/src/CMSIS/system_stm32f10x.c **** 
1011:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 126              		.loc 1 1011 0
 127 0074 019B     		ldr	r3, [sp, #4]
 128 0076 012B     		cmp	r3, #1
 129 0078 06D0     		beq	.L15
 130              	.L6:
 131              	.LBE12:
 132              	.LBE15:
 133              	.LBE18:
 267:../../source/src/CMSIS/system_stm32f10x.c **** #endif 
 134              		.loc 1 267 0
 135 007a 4FF00062 		mov	r2, #134217728
 136 007e 1F4B     		ldr	r3, .L16+8
 137 0080 9A60     		str	r2, [r3, #8]
 269:../../source/src/CMSIS/system_stm32f10x.c **** 
 138              		.loc 1 269 0
 139 0082 02B0     		add	sp, sp, #8
 140              	.LCFI2:
 141              		.cfi_remember_state
 142              		.cfi_def_cfa_offset 8
 143              		@ sp needed
 144 0084 30BC     		pop	{r4, r5}
 145              	.LCFI3:
 146              		.cfi_restore 5
 147              		.cfi_restore 4
 148              		.cfi_def_cfa_offset 0
 149 0086 7047     		bx	lr
 150              	.L15:
 151              	.LCFI4:
 152              		.cfi_restore_state
 153              	.LBB19:
 154              	.LBB16:
 155              	.LBB13:
1012:../../source/src/CMSIS/system_stm32f10x.c ****   {
1013:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 156              		.loc 1 1014 0
 157 0088 1D49     		ldr	r1, .L16+12
1015:../../source/src/CMSIS/system_stm32f10x.c **** 
1016:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
1018:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
1019:../../source/src/CMSIS/system_stm32f10x.c **** 
1020:../../source/src/CMSIS/system_stm32f10x.c ****  
1021:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 22


 158              		.loc 1 1022 0
 159 008a 1A4B     		ldr	r3, .L16
1014:../../source/src/CMSIS/system_stm32f10x.c **** 
 160              		.loc 1 1014 0
 161 008c 0868     		ldr	r0, [r1]
1023:../../source/src/CMSIS/system_stm32f10x.c ****       
1024:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
1026:../../source/src/CMSIS/system_stm32f10x.c ****     
1027:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK/2 */
1028:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
1029:../../source/src/CMSIS/system_stm32f10x.c **** 
1030:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:../../source/src/CMSIS/system_stm32f10x.c ****         
1035:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:../../source/src/CMSIS/system_stm32f10x.c ****   
1040:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
1041:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:../../source/src/CMSIS/system_stm32f10x.c ****     {
1045:../../source/src/CMSIS/system_stm32f10x.c ****     }
1046:../../source/src/CMSIS/system_stm32f10x.c ****     
1047:../../source/src/CMSIS/system_stm32f10x.c ****    
1048:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:../../source/src/CMSIS/system_stm32f10x.c **** #else    
1053:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
1055:../../source/src/CMSIS/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
1057:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:../../source/src/CMSIS/system_stm32f10x.c **** 
1059:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
1060:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
1061:../../source/src/CMSIS/system_stm32f10x.c **** 
1062:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 162              		.loc 1 1063 0
 163 008e 1A46     		mov	r2, r3
1014:../../source/src/CMSIS/system_stm32f10x.c **** 
 164              		.loc 1 1014 0
 165 0090 40F01000 		orr	r0, r0, #16
 166 0094 0860     		str	r0, [r1]
1017:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 167              		.loc 1 1017 0
 168 0096 0868     		ldr	r0, [r1]
 169 0098 20F00300 		bic	r0, r0, #3
 170 009c 0860     		str	r0, [r1]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 23


1018:../../source/src/CMSIS/system_stm32f10x.c **** 
 171              		.loc 1 1018 0
 172 009e 0868     		ldr	r0, [r1]
 173 00a0 40F00200 		orr	r0, r0, #2
 174 00a4 0860     		str	r0, [r1]
1022:../../source/src/CMSIS/system_stm32f10x.c ****       
 175              		.loc 1 1022 0
 176 00a6 5968     		ldr	r1, [r3, #4]
 177 00a8 5960     		str	r1, [r3, #4]
1025:../../source/src/CMSIS/system_stm32f10x.c ****     
 178              		.loc 1 1025 0
 179 00aa 5968     		ldr	r1, [r3, #4]
 180 00ac 5960     		str	r1, [r3, #4]
1028:../../source/src/CMSIS/system_stm32f10x.c **** 
 181              		.loc 1 1028 0
 182 00ae 5968     		ldr	r1, [r3, #4]
 183 00b0 41F48061 		orr	r1, r1, #1024
 184 00b4 5960     		str	r1, [r3, #4]
1054:../../source/src/CMSIS/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 185              		.loc 1 1054 0
 186 00b6 5968     		ldr	r1, [r3, #4]
 187 00b8 21F47C11 		bic	r1, r1, #4128768
 188 00bc 5960     		str	r1, [r3, #4]
1056:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 189              		.loc 1 1056 0
 190 00be 5968     		ldr	r1, [r3, #4]
 191 00c0 41F4E811 		orr	r1, r1, #1900544
 192 00c4 5960     		str	r1, [r3, #4]
1060:../../source/src/CMSIS/system_stm32f10x.c **** 
 193              		.loc 1 1060 0
 194 00c6 1968     		ldr	r1, [r3]
 195 00c8 41F08071 		orr	r1, r1, #16777216
 196 00cc 1960     		str	r1, [r3]
 197              	.L7:
 198              		.loc 1 1063 0
 199 00ce 1368     		ldr	r3, [r2]
 200 00d0 9B01     		lsls	r3, r3, #6
 201 00d2 FCD5     		bpl	.L7
1064:../../source/src/CMSIS/system_stm32f10x.c ****     {
1065:../../source/src/CMSIS/system_stm32f10x.c ****     }
1066:../../source/src/CMSIS/system_stm32f10x.c ****     
1067:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 202              		.loc 1 1068 0
 203 00d4 5368     		ldr	r3, [r2, #4]
1069:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
1070:../../source/src/CMSIS/system_stm32f10x.c **** 
1071:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 204              		.loc 1 1072 0
 205 00d6 0749     		ldr	r1, .L16
1068:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 206              		.loc 1 1068 0
 207 00d8 23F00303 		bic	r3, r3, #3
 208 00dc 5360     		str	r3, [r2, #4]
1069:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 209              		.loc 1 1069 0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 24


 210 00de 5368     		ldr	r3, [r2, #4]
 211 00e0 43F00203 		orr	r3, r3, #2
 212 00e4 5360     		str	r3, [r2, #4]
 213              	.L8:
 214              		.loc 1 1072 0
 215 00e6 4B68     		ldr	r3, [r1, #4]
 216 00e8 03F00C03 		and	r3, r3, #12
 217 00ec 082B     		cmp	r3, #8
 218 00ee FAD1     		bne	.L8
 219 00f0 C3E7     		b	.L6
 220              	.L17:
 221 00f2 00BF     		.align	2
 222              	.L16:
 223 00f4 00100240 		.word	1073876992
 224 00f8 0000FFF8 		.word	-117506048
 225 00fc 00ED00E0 		.word	-536810240
 226 0100 00200240 		.word	1073881088
 227              	.LBE13:
 228              	.LBE16:
 229              	.LBE19:
 230              		.cfi_endproc
 231              	.LFE29:
 232              		.size	SystemInit, .-SystemInit
 233              		.align	1
 234              		.p2align 2,,3
 235              		.global	SystemCoreClockUpdate
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 240              		.type	SystemCoreClockUpdate, %function
 241              	SystemCoreClockUpdate:
 242              	.LFB30:
 307:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 243              		.loc 1 307 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              	.LVL0:
 319:../../source/src/CMSIS/system_stm32f10x.c ****   
 249              		.loc 1 319 0
 250 0104 114A     		ldr	r2, .L26
 251 0106 5368     		ldr	r3, [r2, #4]
 252              	.LVL1:
 253 0108 03F00C03 		and	r3, r3, #12
 254              	.LVL2:
 321:../../source/src/CMSIS/system_stm32f10x.c ****   {
 255              		.loc 1 321 0
 256 010c 082B     		cmp	r3, #8
 257 010e 0ED1     		bne	.L24
 332:../../source/src/CMSIS/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 258              		.loc 1 332 0
 259 0110 5368     		ldr	r3, [r2, #4]
 260              	.LVL3:
 333:../../source/src/CMSIS/system_stm32f10x.c ****       
 261              		.loc 1 333 0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 25


 262 0112 5168     		ldr	r1, [r2, #4]
 263              	.LVL4:
 336:../../source/src/CMSIS/system_stm32f10x.c ****       
 264              		.loc 1 336 0
 265 0114 C3F38343 		ubfx	r3, r3, #18, #4
 266              	.LVL5:
 338:../../source/src/CMSIS/system_stm32f10x.c ****       {
 267              		.loc 1 338 0
 268 0118 C903     		lsls	r1, r1, #15
 269              	.LVL6:
 336:../../source/src/CMSIS/system_stm32f10x.c ****       
 270              		.loc 1 336 0
 271 011a 03F10203 		add	r3, r3, #2
 272              	.LVL7:
 338:../../source/src/CMSIS/system_stm32f10x.c ****       {
 273              		.loc 1 338 0
 274 011e 10D5     		bpl	.L25
 351:../../source/src/CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 275              		.loc 1 351 0
 276 0120 5268     		ldr	r2, [r2, #4]
 277 0122 9203     		lsls	r2, r2, #14
 278 0124 0DD4     		bmi	.L25
 357:../../source/src/CMSIS/system_stm32f10x.c ****         }
 279              		.loc 1 357 0
 280 0126 0A4A     		ldr	r2, .L26+4
 281 0128 02FB03F3 		mul	r3, r2, r3
 282              	.LVL8:
 283 012c 00E0     		b	.L19
 284              	.LVL9:
 285              	.L24:
 321:../../source/src/CMSIS/system_stm32f10x.c ****   {
 286              		.loc 1 321 0
 287 012e 084B     		ldr	r3, .L26+4
 288              	.LVL10:
 289              	.L19:
 409:../../source/src/CMSIS/system_stm32f10x.c ****   /* HCLK clock frequency */
 290              		.loc 1 409 0
 291 0130 064A     		ldr	r2, .L26
 292 0132 0849     		ldr	r1, .L26+8
 293 0134 5268     		ldr	r2, [r2, #4]
 294 0136 C2F30312 		ubfx	r2, r2, #4, #4
 295 013a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 296              	.LVL11:
 411:../../source/src/CMSIS/system_stm32f10x.c **** }
 297              		.loc 1 411 0
 298 013c D340     		lsrs	r3, r3, r2
 299 013e 0B61     		str	r3, [r1, #16]
 412:../../source/src/CMSIS/system_stm32f10x.c **** 
 300              		.loc 1 412 0
 301 0140 7047     		bx	lr
 302              	.LVL12:
 303              	.L25:
 353:../../source/src/CMSIS/system_stm32f10x.c ****         }
 304              		.loc 1 353 0
 305 0142 054A     		ldr	r2, .L26+12
 306 0144 02FB03F3 		mul	r3, r2, r3
 307              	.LVL13:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 26


 308 0148 F2E7     		b	.L19
 309              	.L27:
 310 014a 00BF     		.align	2
 311              	.L26:
 312 014c 00100240 		.word	1073876992
 313 0150 00127A00 		.word	8000000
 314 0154 00000000 		.word	.LANCHOR0
 315 0158 00093D00 		.word	4000000
 316              		.cfi_endproc
 317              	.LFE30:
 318              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 319              		.global	AHBPrescTable
 320              		.global	SystemCoreClock
 321              		.data
 322              		.align	2
 323              		.set	.LANCHOR0,. + 0
 324              		.type	AHBPrescTable, %object
 325              		.size	AHBPrescTable, 16
 326              	AHBPrescTable:
 327 0000 00       		.byte	0
 328 0001 00       		.byte	0
 329 0002 00       		.byte	0
 330 0003 00       		.byte	0
 331 0004 00       		.byte	0
 332 0005 00       		.byte	0
 333 0006 00       		.byte	0
 334 0007 00       		.byte	0
 335 0008 01       		.byte	1
 336 0009 02       		.byte	2
 337 000a 03       		.byte	3
 338 000b 04       		.byte	4
 339 000c 06       		.byte	6
 340 000d 07       		.byte	7
 341 000e 08       		.byte	8
 342 000f 09       		.byte	9
 343              		.type	SystemCoreClock, %object
 344              		.size	SystemCoreClock, 4
 345              	SystemCoreClock:
 346 0010 00A24A04 		.word	72000000
 347              		.text
 348              	.Letext0:
 349              		.file 2 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\machine\\_default_types.h"
 350              		.file 3 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\sys\\_stdint.h"
 351              		.file 4 "../../source/include/core_cm3.h"
 352              		.file 5 "../../source/include/system_stm32f10x.h"
 353              		.file 6 "../../source/include/stm32f10x.h"
 354              		.section	.debug_info,"",%progbits
 355              	.Ldebug_info0:
 356 0000 C8040000 		.4byte	0x4c8
 357 0004 0200     		.2byte	0x2
 358 0006 00000000 		.4byte	.Ldebug_abbrev0
 359 000a 04       		.byte	0x4
 360 000b 01       		.uleb128 0x1
 361 000c 50010000 		.4byte	.LASF50
 362 0010 0C       		.byte	0xc
 363 0011 3A000000 		.4byte	.LASF51
 364 0015 9B000000 		.4byte	.LASF52
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 27


 365 0019 00000000 		.4byte	.Ltext0
 366 001d 5C010000 		.4byte	.Letext0
 367 0021 00000000 		.4byte	.Ldebug_line0
 368 0025 02       		.uleb128 0x2
 369 0026 01       		.byte	0x1
 370 0027 06       		.byte	0x6
 371 0028 05020000 		.4byte	.LASF0
 372 002c 03       		.uleb128 0x3
 373 002d FD000000 		.4byte	.LASF3
 374 0031 02       		.byte	0x2
 375 0032 2B       		.byte	0x2b
 376 0033 37000000 		.4byte	0x37
 377 0037 02       		.uleb128 0x2
 378 0038 01       		.byte	0x1
 379 0039 08       		.byte	0x8
 380 003a 2B010000 		.4byte	.LASF1
 381 003e 02       		.uleb128 0x2
 382 003f 02       		.byte	0x2
 383 0040 05       		.byte	0x5
 384 0041 84000000 		.4byte	.LASF2
 385 0045 03       		.uleb128 0x3
 386 0046 25000000 		.4byte	.LASF4
 387 004a 02       		.byte	0x2
 388 004b 39       		.byte	0x39
 389 004c 50000000 		.4byte	0x50
 390 0050 02       		.uleb128 0x2
 391 0051 02       		.byte	0x2
 392 0052 07       		.byte	0x7
 393 0053 5E020000 		.4byte	.LASF5
 394 0057 02       		.uleb128 0x2
 395 0058 04       		.byte	0x4
 396 0059 05       		.byte	0x5
 397 005a DC000000 		.4byte	.LASF6
 398 005e 03       		.uleb128 0x3
 399 005f 1A000000 		.4byte	.LASF7
 400 0063 02       		.byte	0x2
 401 0064 4F       		.byte	0x4f
 402 0065 69000000 		.4byte	0x69
 403 0069 02       		.uleb128 0x2
 404 006a 04       		.byte	0x4
 405 006b 07       		.byte	0x7
 406 006c CA020000 		.4byte	.LASF8
 407 0070 02       		.uleb128 0x2
 408 0071 08       		.byte	0x8
 409 0072 05       		.byte	0x5
 410 0073 C9000000 		.4byte	.LASF9
 411 0077 02       		.uleb128 0x2
 412 0078 08       		.byte	0x8
 413 0079 07       		.byte	0x7
 414 007a 11020000 		.4byte	.LASF10
 415 007e 04       		.uleb128 0x4
 416 007f 04       		.byte	0x4
 417 0080 05       		.byte	0x5
 418 0081 696E7400 		.ascii	"int\000"
 419 0085 05       		.uleb128 0x5
 420 0086 7E000000 		.4byte	0x7e
 421 008a 02       		.uleb128 0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 28


 422 008b 04       		.byte	0x4
 423 008c 07       		.byte	0x7
 424 008d 31020000 		.4byte	.LASF11
 425 0091 03       		.uleb128 0x3
 426 0092 74000000 		.4byte	.LASF12
 427 0096 03       		.byte	0x3
 428 0097 18       		.byte	0x18
 429 0098 2C000000 		.4byte	0x2c
 430 009c 05       		.uleb128 0x5
 431 009d 91000000 		.4byte	0x91
 432 00a1 06       		.uleb128 0x6
 433 00a2 91000000 		.4byte	0x91
 434 00a6 05       		.uleb128 0x5
 435 00a7 A1000000 		.4byte	0xa1
 436 00ab 03       		.uleb128 0x3
 437 00ac 3E020000 		.4byte	.LASF13
 438 00b0 03       		.byte	0x3
 439 00b1 24       		.byte	0x24
 440 00b2 45000000 		.4byte	0x45
 441 00b6 03       		.uleb128 0x3
 442 00b7 28020000 		.4byte	.LASF14
 443 00bb 03       		.byte	0x3
 444 00bc 30       		.byte	0x30
 445 00bd 5E000000 		.4byte	0x5e
 446 00c1 05       		.uleb128 0x5
 447 00c2 B6000000 		.4byte	0xb6
 448 00c6 06       		.uleb128 0x6
 449 00c7 C1000000 		.4byte	0xc1
 450 00cb 07       		.uleb128 0x7
 451 00cc 74       		.byte	0x74
 452 00cd 04       		.byte	0x4
 453 00ce 9B       		.byte	0x9b
 454 00cf DE010000 		.4byte	0x1de
 455 00d3 08       		.uleb128 0x8
 456 00d4 64000000 		.4byte	.LASF15
 457 00d8 04       		.byte	0x4
 458 00d9 9D       		.byte	0x9d
 459 00da C6000000 		.4byte	0xc6
 460 00de 02       		.byte	0x2
 461 00df 23       		.byte	0x23
 462 00e0 00       		.uleb128 0
 463 00e1 08       		.uleb128 0x8
 464 00e2 8E000000 		.4byte	.LASF16
 465 00e6 04       		.byte	0x4
 466 00e7 9E       		.byte	0x9e
 467 00e8 C1000000 		.4byte	0xc1
 468 00ec 02       		.byte	0x2
 469 00ed 23       		.byte	0x23
 470 00ee 04       		.uleb128 0x4
 471 00ef 08       		.uleb128 0x8
 472 00f0 71020000 		.4byte	.LASF17
 473 00f4 04       		.byte	0x4
 474 00f5 9F       		.byte	0x9f
 475 00f6 C1000000 		.4byte	0xc1
 476 00fa 02       		.byte	0x2
 477 00fb 23       		.byte	0x23
 478 00fc 08       		.uleb128 0x8
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 29


 479 00fd 08       		.uleb128 0x8
 480 00fe 39010000 		.4byte	.LASF18
 481 0102 04       		.byte	0x4
 482 0103 A0       		.byte	0xa0
 483 0104 C1000000 		.4byte	0xc1
 484 0108 02       		.byte	0x2
 485 0109 23       		.byte	0x23
 486 010a 0C       		.uleb128 0xc
 487 010b 09       		.uleb128 0x9
 488 010c 53435200 		.ascii	"SCR\000"
 489 0110 04       		.byte	0x4
 490 0111 A1       		.byte	0xa1
 491 0112 C1000000 		.4byte	0xc1
 492 0116 02       		.byte	0x2
 493 0117 23       		.byte	0x23
 494 0118 10       		.uleb128 0x10
 495 0119 09       		.uleb128 0x9
 496 011a 43435200 		.ascii	"CCR\000"
 497 011e 04       		.byte	0x4
 498 011f A2       		.byte	0xa2
 499 0120 C1000000 		.4byte	0xc1
 500 0124 02       		.byte	0x2
 501 0125 23       		.byte	0x23
 502 0126 14       		.uleb128 0x14
 503 0127 09       		.uleb128 0x9
 504 0128 53485000 		.ascii	"SHP\000"
 505 012c 04       		.byte	0x4
 506 012d A3       		.byte	0xa3
 507 012e EE010000 		.4byte	0x1ee
 508 0132 02       		.byte	0x2
 509 0133 23       		.byte	0x23
 510 0134 18       		.uleb128 0x18
 511 0135 08       		.uleb128 0x8
 512 0136 47020000 		.4byte	.LASF19
 513 013a 04       		.byte	0x4
 514 013b A4       		.byte	0xa4
 515 013c C1000000 		.4byte	0xc1
 516 0140 02       		.byte	0x2
 517 0141 23       		.byte	0x23
 518 0142 24       		.uleb128 0x24
 519 0143 08       		.uleb128 0x8
 520 0144 0C010000 		.4byte	.LASF20
 521 0148 04       		.byte	0x4
 522 0149 A5       		.byte	0xa5
 523 014a C1000000 		.4byte	0xc1
 524 014e 02       		.byte	0x2
 525 014f 23       		.byte	0x23
 526 0150 28       		.uleb128 0x28
 527 0151 08       		.uleb128 0x8
 528 0152 A6020000 		.4byte	.LASF21
 529 0156 04       		.byte	0x4
 530 0157 A6       		.byte	0xa6
 531 0158 C1000000 		.4byte	0xc1
 532 015c 02       		.byte	0x2
 533 015d 23       		.byte	0x23
 534 015e 2C       		.uleb128 0x2c
 535 015f 08       		.uleb128 0x8
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 30


 536 0160 91020000 		.4byte	.LASF22
 537 0164 04       		.byte	0x4
 538 0165 A7       		.byte	0xa7
 539 0166 C1000000 		.4byte	0xc1
 540 016a 02       		.byte	0x2
 541 016b 23       		.byte	0x23
 542 016c 30       		.uleb128 0x30
 543 016d 08       		.uleb128 0x8
 544 016e 4D020000 		.4byte	.LASF23
 545 0172 04       		.byte	0x4
 546 0173 A8       		.byte	0xa8
 547 0174 C1000000 		.4byte	0xc1
 548 0178 02       		.byte	0x2
 549 0179 23       		.byte	0x23
 550 017a 34       		.uleb128 0x34
 551 017b 08       		.uleb128 0x8
 552 017c D7000000 		.4byte	.LASF24
 553 0180 04       		.byte	0x4
 554 0181 A9       		.byte	0xa9
 555 0182 C1000000 		.4byte	0xc1
 556 0186 02       		.byte	0x2
 557 0187 23       		.byte	0x23
 558 0188 38       		.uleb128 0x38
 559 0189 08       		.uleb128 0x8
 560 018a E2020000 		.4byte	.LASF25
 561 018e 04       		.byte	0x4
 562 018f AA       		.byte	0xaa
 563 0190 C1000000 		.4byte	0xc1
 564 0194 02       		.byte	0x2
 565 0195 23       		.byte	0x23
 566 0196 3C       		.uleb128 0x3c
 567 0197 09       		.uleb128 0x9
 568 0198 50465200 		.ascii	"PFR\000"
 569 019c 04       		.byte	0x4
 570 019d AB       		.byte	0xab
 571 019e 08020000 		.4byte	0x208
 572 01a2 02       		.byte	0x2
 573 01a3 23       		.byte	0x23
 574 01a4 40       		.uleb128 0x40
 575 01a5 09       		.uleb128 0x9
 576 01a6 44465200 		.ascii	"DFR\000"
 577 01aa 04       		.byte	0x4
 578 01ab AC       		.byte	0xac
 579 01ac C6000000 		.4byte	0xc6
 580 01b0 02       		.byte	0x2
 581 01b1 23       		.byte	0x23
 582 01b2 48       		.uleb128 0x48
 583 01b3 09       		.uleb128 0x9
 584 01b4 41445200 		.ascii	"ADR\000"
 585 01b8 04       		.byte	0x4
 586 01b9 AD       		.byte	0xad
 587 01ba C6000000 		.4byte	0xc6
 588 01be 02       		.byte	0x2
 589 01bf 23       		.byte	0x23
 590 01c0 4C       		.uleb128 0x4c
 591 01c1 08       		.uleb128 0x8
 592 01c2 AB020000 		.4byte	.LASF26
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 31


 593 01c6 04       		.byte	0x4
 594 01c7 AE       		.byte	0xae
 595 01c8 22020000 		.4byte	0x222
 596 01cc 02       		.byte	0x2
 597 01cd 23       		.byte	0x23
 598 01ce 50       		.uleb128 0x50
 599 01cf 08       		.uleb128 0x8
 600 01d0 8C020000 		.4byte	.LASF27
 601 01d4 04       		.byte	0x4
 602 01d5 AF       		.byte	0xaf
 603 01d6 3C020000 		.4byte	0x23c
 604 01da 02       		.byte	0x2
 605 01db 23       		.byte	0x23
 606 01dc 60       		.uleb128 0x60
 607 01dd 00       		.byte	0
 608 01de 0A       		.uleb128 0xa
 609 01df 9C000000 		.4byte	0x9c
 610 01e3 EE010000 		.4byte	0x1ee
 611 01e7 0B       		.uleb128 0xb
 612 01e8 8A000000 		.4byte	0x8a
 613 01ec 0B       		.byte	0xb
 614 01ed 00       		.byte	0
 615 01ee 05       		.uleb128 0x5
 616 01ef DE010000 		.4byte	0x1de
 617 01f3 0A       		.uleb128 0xa
 618 01f4 C6000000 		.4byte	0xc6
 619 01f8 03020000 		.4byte	0x203
 620 01fc 0B       		.uleb128 0xb
 621 01fd 8A000000 		.4byte	0x8a
 622 0201 01       		.byte	0x1
 623 0202 00       		.byte	0
 624 0203 06       		.uleb128 0x6
 625 0204 F3010000 		.4byte	0x1f3
 626 0208 05       		.uleb128 0x5
 627 0209 03020000 		.4byte	0x203
 628 020d 0A       		.uleb128 0xa
 629 020e C6000000 		.4byte	0xc6
 630 0212 1D020000 		.4byte	0x21d
 631 0216 0B       		.uleb128 0xb
 632 0217 8A000000 		.4byte	0x8a
 633 021b 03       		.byte	0x3
 634 021c 00       		.byte	0
 635 021d 06       		.uleb128 0x6
 636 021e 0D020000 		.4byte	0x20d
 637 0222 05       		.uleb128 0x5
 638 0223 1D020000 		.4byte	0x21d
 639 0227 0A       		.uleb128 0xa
 640 0228 C6000000 		.4byte	0xc6
 641 022c 37020000 		.4byte	0x237
 642 0230 0B       		.uleb128 0xb
 643 0231 8A000000 		.4byte	0x8a
 644 0235 04       		.byte	0x4
 645 0236 00       		.byte	0
 646 0237 06       		.uleb128 0x6
 647 0238 27020000 		.4byte	0x227
 648 023c 05       		.uleb128 0x5
 649 023d 37020000 		.4byte	0x237
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 32


 650 0241 03       		.uleb128 0x3
 651 0242 3F010000 		.4byte	.LASF28
 652 0246 04       		.byte	0x4
 653 0247 B0       		.byte	0xb0
 654 0248 CB000000 		.4byte	0xcb
 655 024c 0C       		.uleb128 0xc
 656 024d FE020000 		.4byte	.LASF29
 657 0251 04       		.byte	0x4
 658 0252 CE06     		.2byte	0x6ce
 659 0254 85000000 		.4byte	0x85
 660 0258 01       		.byte	0x1
 661 0259 01       		.byte	0x1
 662 025a 0D       		.uleb128 0xd
 663 025b 96020000 		.4byte	.LASF30
 664 025f 05       		.byte	0x5
 665 0260 35       		.byte	0x35
 666 0261 B6000000 		.4byte	0xb6
 667 0265 01       		.byte	0x1
 668 0266 01       		.byte	0x1
 669 0267 0E       		.uleb128 0xe
 670 0268 07       		.byte	0x7
 671 0269 01       		.byte	0x1
 672 026a 37000000 		.4byte	0x37
 673 026e 06       		.byte	0x6
 674 026f 0702     		.2byte	0x207
 675 0271 82020000 		.4byte	0x282
 676 0275 0F       		.uleb128 0xf
 677 0276 DC020000 		.4byte	.LASF31
 678 027a 00       		.byte	0
 679 027b 10       		.uleb128 0x10
 680 027c 53455400 		.ascii	"SET\000"
 681 0280 01       		.byte	0x1
 682 0281 00       		.byte	0
 683 0282 11       		.uleb128 0x11
 684 0283 24       		.byte	0x24
 685 0284 06       		.byte	0x6
 686 0285 8503     		.2byte	0x385
 687 0287 10030000 		.4byte	0x310
 688 028b 12       		.uleb128 0x12
 689 028c 41435200 		.ascii	"ACR\000"
 690 0290 06       		.byte	0x6
 691 0291 8703     		.2byte	0x387
 692 0293 C1000000 		.4byte	0xc1
 693 0297 02       		.byte	0x2
 694 0298 23       		.byte	0x23
 695 0299 00       		.uleb128 0
 696 029a 13       		.uleb128 0x13
 697 029b 6A000000 		.4byte	.LASF32
 698 029f 06       		.byte	0x6
 699 02a0 8803     		.2byte	0x388
 700 02a2 C1000000 		.4byte	0xc1
 701 02a6 02       		.byte	0x2
 702 02a7 23       		.byte	0x23
 703 02a8 04       		.uleb128 0x4
 704 02a9 13       		.uleb128 0x13
 705 02aa 93000000 		.4byte	.LASF33
 706 02ae 06       		.byte	0x6
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 33


 707 02af 8903     		.2byte	0x389
 708 02b1 C1000000 		.4byte	0xc1
 709 02b5 02       		.byte	0x2
 710 02b6 23       		.byte	0x23
 711 02b7 08       		.uleb128 0x8
 712 02b8 12       		.uleb128 0x12
 713 02b9 535200   		.ascii	"SR\000"
 714 02bc 06       		.byte	0x6
 715 02bd 8A03     		.2byte	0x38a
 716 02bf C1000000 		.4byte	0xc1
 717 02c3 02       		.byte	0x2
 718 02c4 23       		.byte	0x23
 719 02c5 0C       		.uleb128 0xc
 720 02c6 12       		.uleb128 0x12
 721 02c7 435200   		.ascii	"CR\000"
 722 02ca 06       		.byte	0x6
 723 02cb 8B03     		.2byte	0x38b
 724 02cd C1000000 		.4byte	0xc1
 725 02d1 02       		.byte	0x2
 726 02d2 23       		.byte	0x23
 727 02d3 10       		.uleb128 0x10
 728 02d4 12       		.uleb128 0x12
 729 02d5 415200   		.ascii	"AR\000"
 730 02d8 06       		.byte	0x6
 731 02d9 8C03     		.2byte	0x38c
 732 02db C1000000 		.4byte	0xc1
 733 02df 02       		.byte	0x2
 734 02e0 23       		.byte	0x23
 735 02e1 14       		.uleb128 0x14
 736 02e2 13       		.uleb128 0x13
 737 02e3 E7020000 		.4byte	.LASF34
 738 02e7 06       		.byte	0x6
 739 02e8 8D03     		.2byte	0x38d
 740 02ea C1000000 		.4byte	0xc1
 741 02ee 02       		.byte	0x2
 742 02ef 23       		.byte	0x23
 743 02f0 18       		.uleb128 0x18
 744 02f1 12       		.uleb128 0x12
 745 02f2 4F425200 		.ascii	"OBR\000"
 746 02f6 06       		.byte	0x6
 747 02f7 8E03     		.2byte	0x38e
 748 02f9 C1000000 		.4byte	0xc1
 749 02fd 02       		.byte	0x2
 750 02fe 23       		.byte	0x23
 751 02ff 1C       		.uleb128 0x1c
 752 0300 13       		.uleb128 0x13
 753 0301 07010000 		.4byte	.LASF35
 754 0305 06       		.byte	0x6
 755 0306 8F03     		.2byte	0x38f
 756 0308 C1000000 		.4byte	0xc1
 757 030c 02       		.byte	0x2
 758 030d 23       		.byte	0x23
 759 030e 20       		.uleb128 0x20
 760 030f 00       		.byte	0
 761 0310 14       		.uleb128 0x14
 762 0311 F0020000 		.4byte	.LASF36
 763 0315 06       		.byte	0x6
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 34


 764 0316 9803     		.2byte	0x398
 765 0318 82020000 		.4byte	0x282
 766 031c 11       		.uleb128 0x11
 767 031d 28       		.byte	0x28
 768 031e 06       		.byte	0x6
 769 031f 3404     		.2byte	0x434
 770 0321 BB030000 		.4byte	0x3bb
 771 0325 12       		.uleb128 0x12
 772 0326 435200   		.ascii	"CR\000"
 773 0329 06       		.byte	0x6
 774 032a 3604     		.2byte	0x436
 775 032c C1000000 		.4byte	0xc1
 776 0330 02       		.byte	0x2
 777 0331 23       		.byte	0x23
 778 0332 00       		.uleb128 0
 779 0333 13       		.uleb128 0x13
 780 0334 6F000000 		.4byte	.LASF37
 781 0338 06       		.byte	0x6
 782 0339 3704     		.2byte	0x437
 783 033b C1000000 		.4byte	0xc1
 784 033f 02       		.byte	0x2
 785 0340 23       		.byte	0x23
 786 0341 04       		.uleb128 0x4
 787 0342 12       		.uleb128 0x12
 788 0343 43495200 		.ascii	"CIR\000"
 789 0347 06       		.byte	0x6
 790 0348 3804     		.2byte	0x438
 791 034a C1000000 		.4byte	0xc1
 792 034e 02       		.byte	0x2
 793 034f 23       		.byte	0x23
 794 0350 08       		.uleb128 0x8
 795 0351 13       		.uleb128 0x13
 796 0352 F4000000 		.4byte	.LASF38
 797 0356 06       		.byte	0x6
 798 0357 3904     		.2byte	0x439
 799 0359 C1000000 		.4byte	0xc1
 800 035d 02       		.byte	0x2
 801 035e 23       		.byte	0x23
 802 035f 0C       		.uleb128 0xc
 803 0360 13       		.uleb128 0x13
 804 0361 0C000000 		.4byte	.LASF39
 805 0365 06       		.byte	0x6
 806 0366 3A04     		.2byte	0x43a
 807 0368 C1000000 		.4byte	0xc1
 808 036c 02       		.byte	0x2
 809 036d 23       		.byte	0x23
 810 036e 10       		.uleb128 0x10
 811 036f 13       		.uleb128 0x13
 812 0370 ED000000 		.4byte	.LASF40
 813 0374 06       		.byte	0x6
 814 0375 3B04     		.2byte	0x43b
 815 0377 C1000000 		.4byte	0xc1
 816 037b 02       		.byte	0x2
 817 037c 23       		.byte	0x23
 818 037d 14       		.uleb128 0x14
 819 037e 13       		.uleb128 0x13
 820 037f 48010000 		.4byte	.LASF41
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 35


 821 0383 06       		.byte	0x6
 822 0384 3C04     		.2byte	0x43c
 823 0386 C1000000 		.4byte	0xc1
 824 038a 02       		.byte	0x2
 825 038b 23       		.byte	0x23
 826 038c 18       		.uleb128 0x18
 827 038d 13       		.uleb128 0x13
 828 038e 7C000000 		.4byte	.LASF42
 829 0392 06       		.byte	0x6
 830 0393 3D04     		.2byte	0x43d
 831 0395 C1000000 		.4byte	0xc1
 832 0399 02       		.byte	0x2
 833 039a 23       		.byte	0x23
 834 039b 1C       		.uleb128 0x1c
 835 039c 13       		.uleb128 0x13
 836 039d 15000000 		.4byte	.LASF43
 837 03a1 06       		.byte	0x6
 838 03a2 3E04     		.2byte	0x43e
 839 03a4 C1000000 		.4byte	0xc1
 840 03a8 02       		.byte	0x2
 841 03a9 23       		.byte	0x23
 842 03aa 20       		.uleb128 0x20
 843 03ab 12       		.uleb128 0x12
 844 03ac 43535200 		.ascii	"CSR\000"
 845 03b0 06       		.byte	0x6
 846 03b1 3F04     		.2byte	0x43f
 847 03b3 C1000000 		.4byte	0xc1
 848 03b7 02       		.byte	0x2
 849 03b8 23       		.byte	0x23
 850 03b9 24       		.uleb128 0x24
 851 03ba 00       		.byte	0
 852 03bb 14       		.uleb128 0x14
 853 03bc 00000000 		.4byte	.LASF44
 854 03c0 06       		.byte	0x6
 855 03c1 4A04     		.2byte	0x44a
 856 03c3 1C030000 		.4byte	0x31c
 857 03c7 15       		.uleb128 0x15
 858 03c8 5A020000 		.4byte	0x25a
 859 03cc 01       		.byte	0x1
 860 03cd A2       		.byte	0xa2
 861 03ce 05       		.byte	0x5
 862 03cf 03       		.byte	0x3
 863 03d0 00000000 		.4byte	SystemCoreClock
 864 03d4 0A       		.uleb128 0xa
 865 03d5 A6000000 		.4byte	0xa6
 866 03d9 E4030000 		.4byte	0x3e4
 867 03dd 0B       		.uleb128 0xb
 868 03de 8A000000 		.4byte	0x8a
 869 03e2 0F       		.byte	0xf
 870 03e3 00       		.byte	0
 871 03e4 06       		.uleb128 0x6
 872 03e5 D4030000 		.4byte	0x3d4
 873 03e9 05       		.uleb128 0x5
 874 03ea E4030000 		.4byte	0x3e4
 875 03ee 16       		.uleb128 0x16
 876 03ef B0020000 		.4byte	.LASF45
 877 03f3 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 36


 878 03f4 A7       		.byte	0xa7
 879 03f5 E9030000 		.4byte	0x3e9
 880 03f9 01       		.byte	0x1
 881 03fa 05       		.byte	0x5
 882 03fb 03       		.byte	0x3
 883 03fc 00000000 		.4byte	AHBPrescTable
 884 0400 17       		.uleb128 0x17
 885 0401 11010000 		.4byte	.LASF53
 886 0405 01       		.byte	0x1
 887 0406 DB03     		.2byte	0x3db
 888 0408 01       		.byte	0x1
 889 0409 01       		.byte	0x1
 890 040a 27040000 		.4byte	0x427
 891 040e 18       		.uleb128 0x18
 892 040f F6010000 		.4byte	.LASF46
 893 0413 01       		.byte	0x1
 894 0414 DD03     		.2byte	0x3dd
 895 0416 C1000000 		.4byte	0xc1
 896 041a 18       		.uleb128 0x18
 897 041b 30000000 		.4byte	.LASF47
 898 041f 01       		.byte	0x1
 899 0420 DD03     		.2byte	0x3dd
 900 0422 C1000000 		.4byte	0xc1
 901 0426 00       		.byte	0
 902 0427 19       		.uleb128 0x19
 903 0428 BE020000 		.4byte	.LASF54
 904 042c 01       		.byte	0x1
 905 042d A301     		.2byte	0x1a3
 906 042f 01       		.byte	0x1
 907 0430 01       		.byte	0x1
 908 0431 1A       		.uleb128 0x1a
 909 0432 01       		.byte	0x1
 910 0433 76020000 		.4byte	.LASF55
 911 0437 01       		.byte	0x1
 912 0438 3201     		.2byte	0x132
 913 043a 01       		.byte	0x1
 914 043b 04010000 		.4byte	.LFB30
 915 043f 5C010000 		.4byte	.LFE30
 916 0443 02       		.byte	0x2
 917 0444 7D       		.byte	0x7d
 918 0445 00       		.sleb128 0
 919 0446 01       		.byte	0x1
 920 0447 7C040000 		.4byte	0x47c
 921 044b 1B       		.uleb128 0x1b
 922 044c 746D7000 		.ascii	"tmp\000"
 923 0450 01       		.byte	0x1
 924 0451 3401     		.2byte	0x134
 925 0453 B6000000 		.4byte	0xb6
 926 0457 00000000 		.4byte	.LLST1
 927 045b 1C       		.uleb128 0x1c
 928 045c E5000000 		.4byte	.LASF48
 929 0460 01       		.byte	0x1
 930 0461 3401     		.2byte	0x134
 931 0463 B6000000 		.4byte	0xb6
 932 0467 44000000 		.4byte	.LLST2
 933 046b 1C       		.uleb128 0x1c
 934 046c 21010000 		.4byte	.LASF49
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 37


 935 0470 01       		.byte	0x1
 936 0471 3401     		.2byte	0x134
 937 0473 B6000000 		.4byte	0xb6
 938 0477 8B000000 		.4byte	.LLST3
 939 047b 00       		.byte	0
 940 047c 1D       		.uleb128 0x1d
 941 047d 01       		.byte	0x1
 942 047e 53020000 		.4byte	.LASF56
 943 0482 01       		.byte	0x1
 944 0483 D4       		.byte	0xd4
 945 0484 01       		.byte	0x1
 946 0485 00000000 		.4byte	.LFB29
 947 0489 04010000 		.4byte	.LFE29
 948 048d BC000000 		.4byte	.LLST0
 949 0491 01       		.byte	0x1
 950 0492 1E       		.uleb128 0x1e
 951 0493 27040000 		.4byte	0x427
 952 0497 02000000 		.4byte	.LBB8
 953 049b 00000000 		.4byte	.Ldebug_ranges0+0
 954 049f 01       		.byte	0x1
 955 04a0 0601     		.2byte	0x106
 956 04a2 1E       		.uleb128 0x1e
 957 04a3 00040000 		.4byte	0x400
 958 04a7 02000000 		.4byte	.LBB9
 959 04ab 00000000 		.4byte	.Ldebug_ranges0+0
 960 04af 01       		.byte	0x1
 961 04b0 B001     		.2byte	0x1b0
 962 04b2 1F       		.uleb128 0x1f
 963 04b3 00000000 		.4byte	.Ldebug_ranges0+0
 964 04b7 20       		.uleb128 0x20
 965 04b8 0E040000 		.4byte	0x40e
 966 04bc 02       		.byte	0x2
 967 04bd 91       		.byte	0x91
 968 04be 70       		.sleb128 -16
 969 04bf 20       		.uleb128 0x20
 970 04c0 1A040000 		.4byte	0x41a
 971 04c4 02       		.byte	0x2
 972 04c5 91       		.byte	0x91
 973 04c6 74       		.sleb128 -12
 974 04c7 00       		.byte	0
 975 04c8 00       		.byte	0
 976 04c9 00       		.byte	0
 977 04ca 00       		.byte	0
 978 04cb 00       		.byte	0
 979              		.section	.debug_abbrev,"",%progbits
 980              	.Ldebug_abbrev0:
 981 0000 01       		.uleb128 0x1
 982 0001 11       		.uleb128 0x11
 983 0002 01       		.byte	0x1
 984 0003 25       		.uleb128 0x25
 985 0004 0E       		.uleb128 0xe
 986 0005 13       		.uleb128 0x13
 987 0006 0B       		.uleb128 0xb
 988 0007 03       		.uleb128 0x3
 989 0008 0E       		.uleb128 0xe
 990 0009 1B       		.uleb128 0x1b
 991 000a 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 38


 992 000b 11       		.uleb128 0x11
 993 000c 01       		.uleb128 0x1
 994 000d 12       		.uleb128 0x12
 995 000e 01       		.uleb128 0x1
 996 000f 10       		.uleb128 0x10
 997 0010 06       		.uleb128 0x6
 998 0011 00       		.byte	0
 999 0012 00       		.byte	0
 1000 0013 02       		.uleb128 0x2
 1001 0014 24       		.uleb128 0x24
 1002 0015 00       		.byte	0
 1003 0016 0B       		.uleb128 0xb
 1004 0017 0B       		.uleb128 0xb
 1005 0018 3E       		.uleb128 0x3e
 1006 0019 0B       		.uleb128 0xb
 1007 001a 03       		.uleb128 0x3
 1008 001b 0E       		.uleb128 0xe
 1009 001c 00       		.byte	0
 1010 001d 00       		.byte	0
 1011 001e 03       		.uleb128 0x3
 1012 001f 16       		.uleb128 0x16
 1013 0020 00       		.byte	0
 1014 0021 03       		.uleb128 0x3
 1015 0022 0E       		.uleb128 0xe
 1016 0023 3A       		.uleb128 0x3a
 1017 0024 0B       		.uleb128 0xb
 1018 0025 3B       		.uleb128 0x3b
 1019 0026 0B       		.uleb128 0xb
 1020 0027 49       		.uleb128 0x49
 1021 0028 13       		.uleb128 0x13
 1022 0029 00       		.byte	0
 1023 002a 00       		.byte	0
 1024 002b 04       		.uleb128 0x4
 1025 002c 24       		.uleb128 0x24
 1026 002d 00       		.byte	0
 1027 002e 0B       		.uleb128 0xb
 1028 002f 0B       		.uleb128 0xb
 1029 0030 3E       		.uleb128 0x3e
 1030 0031 0B       		.uleb128 0xb
 1031 0032 03       		.uleb128 0x3
 1032 0033 08       		.uleb128 0x8
 1033 0034 00       		.byte	0
 1034 0035 00       		.byte	0
 1035 0036 05       		.uleb128 0x5
 1036 0037 35       		.uleb128 0x35
 1037 0038 00       		.byte	0
 1038 0039 49       		.uleb128 0x49
 1039 003a 13       		.uleb128 0x13
 1040 003b 00       		.byte	0
 1041 003c 00       		.byte	0
 1042 003d 06       		.uleb128 0x6
 1043 003e 26       		.uleb128 0x26
 1044 003f 00       		.byte	0
 1045 0040 49       		.uleb128 0x49
 1046 0041 13       		.uleb128 0x13
 1047 0042 00       		.byte	0
 1048 0043 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 39


 1049 0044 07       		.uleb128 0x7
 1050 0045 13       		.uleb128 0x13
 1051 0046 01       		.byte	0x1
 1052 0047 0B       		.uleb128 0xb
 1053 0048 0B       		.uleb128 0xb
 1054 0049 3A       		.uleb128 0x3a
 1055 004a 0B       		.uleb128 0xb
 1056 004b 3B       		.uleb128 0x3b
 1057 004c 0B       		.uleb128 0xb
 1058 004d 01       		.uleb128 0x1
 1059 004e 13       		.uleb128 0x13
 1060 004f 00       		.byte	0
 1061 0050 00       		.byte	0
 1062 0051 08       		.uleb128 0x8
 1063 0052 0D       		.uleb128 0xd
 1064 0053 00       		.byte	0
 1065 0054 03       		.uleb128 0x3
 1066 0055 0E       		.uleb128 0xe
 1067 0056 3A       		.uleb128 0x3a
 1068 0057 0B       		.uleb128 0xb
 1069 0058 3B       		.uleb128 0x3b
 1070 0059 0B       		.uleb128 0xb
 1071 005a 49       		.uleb128 0x49
 1072 005b 13       		.uleb128 0x13
 1073 005c 38       		.uleb128 0x38
 1074 005d 0A       		.uleb128 0xa
 1075 005e 00       		.byte	0
 1076 005f 00       		.byte	0
 1077 0060 09       		.uleb128 0x9
 1078 0061 0D       		.uleb128 0xd
 1079 0062 00       		.byte	0
 1080 0063 03       		.uleb128 0x3
 1081 0064 08       		.uleb128 0x8
 1082 0065 3A       		.uleb128 0x3a
 1083 0066 0B       		.uleb128 0xb
 1084 0067 3B       		.uleb128 0x3b
 1085 0068 0B       		.uleb128 0xb
 1086 0069 49       		.uleb128 0x49
 1087 006a 13       		.uleb128 0x13
 1088 006b 38       		.uleb128 0x38
 1089 006c 0A       		.uleb128 0xa
 1090 006d 00       		.byte	0
 1091 006e 00       		.byte	0
 1092 006f 0A       		.uleb128 0xa
 1093 0070 01       		.uleb128 0x1
 1094 0071 01       		.byte	0x1
 1095 0072 49       		.uleb128 0x49
 1096 0073 13       		.uleb128 0x13
 1097 0074 01       		.uleb128 0x1
 1098 0075 13       		.uleb128 0x13
 1099 0076 00       		.byte	0
 1100 0077 00       		.byte	0
 1101 0078 0B       		.uleb128 0xb
 1102 0079 21       		.uleb128 0x21
 1103 007a 00       		.byte	0
 1104 007b 49       		.uleb128 0x49
 1105 007c 13       		.uleb128 0x13
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 40


 1106 007d 2F       		.uleb128 0x2f
 1107 007e 0B       		.uleb128 0xb
 1108 007f 00       		.byte	0
 1109 0080 00       		.byte	0
 1110 0081 0C       		.uleb128 0xc
 1111 0082 34       		.uleb128 0x34
 1112 0083 00       		.byte	0
 1113 0084 03       		.uleb128 0x3
 1114 0085 0E       		.uleb128 0xe
 1115 0086 3A       		.uleb128 0x3a
 1116 0087 0B       		.uleb128 0xb
 1117 0088 3B       		.uleb128 0x3b
 1118 0089 05       		.uleb128 0x5
 1119 008a 49       		.uleb128 0x49
 1120 008b 13       		.uleb128 0x13
 1121 008c 3F       		.uleb128 0x3f
 1122 008d 0C       		.uleb128 0xc
 1123 008e 3C       		.uleb128 0x3c
 1124 008f 0C       		.uleb128 0xc
 1125 0090 00       		.byte	0
 1126 0091 00       		.byte	0
 1127 0092 0D       		.uleb128 0xd
 1128 0093 34       		.uleb128 0x34
 1129 0094 00       		.byte	0
 1130 0095 03       		.uleb128 0x3
 1131 0096 0E       		.uleb128 0xe
 1132 0097 3A       		.uleb128 0x3a
 1133 0098 0B       		.uleb128 0xb
 1134 0099 3B       		.uleb128 0x3b
 1135 009a 0B       		.uleb128 0xb
 1136 009b 49       		.uleb128 0x49
 1137 009c 13       		.uleb128 0x13
 1138 009d 3F       		.uleb128 0x3f
 1139 009e 0C       		.uleb128 0xc
 1140 009f 3C       		.uleb128 0x3c
 1141 00a0 0C       		.uleb128 0xc
 1142 00a1 00       		.byte	0
 1143 00a2 00       		.byte	0
 1144 00a3 0E       		.uleb128 0xe
 1145 00a4 04       		.uleb128 0x4
 1146 00a5 01       		.byte	0x1
 1147 00a6 3E       		.uleb128 0x3e
 1148 00a7 0B       		.uleb128 0xb
 1149 00a8 0B       		.uleb128 0xb
 1150 00a9 0B       		.uleb128 0xb
 1151 00aa 49       		.uleb128 0x49
 1152 00ab 13       		.uleb128 0x13
 1153 00ac 3A       		.uleb128 0x3a
 1154 00ad 0B       		.uleb128 0xb
 1155 00ae 3B       		.uleb128 0x3b
 1156 00af 05       		.uleb128 0x5
 1157 00b0 01       		.uleb128 0x1
 1158 00b1 13       		.uleb128 0x13
 1159 00b2 00       		.byte	0
 1160 00b3 00       		.byte	0
 1161 00b4 0F       		.uleb128 0xf
 1162 00b5 28       		.uleb128 0x28
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 41


 1163 00b6 00       		.byte	0
 1164 00b7 03       		.uleb128 0x3
 1165 00b8 0E       		.uleb128 0xe
 1166 00b9 1C       		.uleb128 0x1c
 1167 00ba 0B       		.uleb128 0xb
 1168 00bb 00       		.byte	0
 1169 00bc 00       		.byte	0
 1170 00bd 10       		.uleb128 0x10
 1171 00be 28       		.uleb128 0x28
 1172 00bf 00       		.byte	0
 1173 00c0 03       		.uleb128 0x3
 1174 00c1 08       		.uleb128 0x8
 1175 00c2 1C       		.uleb128 0x1c
 1176 00c3 0B       		.uleb128 0xb
 1177 00c4 00       		.byte	0
 1178 00c5 00       		.byte	0
 1179 00c6 11       		.uleb128 0x11
 1180 00c7 13       		.uleb128 0x13
 1181 00c8 01       		.byte	0x1
 1182 00c9 0B       		.uleb128 0xb
 1183 00ca 0B       		.uleb128 0xb
 1184 00cb 3A       		.uleb128 0x3a
 1185 00cc 0B       		.uleb128 0xb
 1186 00cd 3B       		.uleb128 0x3b
 1187 00ce 05       		.uleb128 0x5
 1188 00cf 01       		.uleb128 0x1
 1189 00d0 13       		.uleb128 0x13
 1190 00d1 00       		.byte	0
 1191 00d2 00       		.byte	0
 1192 00d3 12       		.uleb128 0x12
 1193 00d4 0D       		.uleb128 0xd
 1194 00d5 00       		.byte	0
 1195 00d6 03       		.uleb128 0x3
 1196 00d7 08       		.uleb128 0x8
 1197 00d8 3A       		.uleb128 0x3a
 1198 00d9 0B       		.uleb128 0xb
 1199 00da 3B       		.uleb128 0x3b
 1200 00db 05       		.uleb128 0x5
 1201 00dc 49       		.uleb128 0x49
 1202 00dd 13       		.uleb128 0x13
 1203 00de 38       		.uleb128 0x38
 1204 00df 0A       		.uleb128 0xa
 1205 00e0 00       		.byte	0
 1206 00e1 00       		.byte	0
 1207 00e2 13       		.uleb128 0x13
 1208 00e3 0D       		.uleb128 0xd
 1209 00e4 00       		.byte	0
 1210 00e5 03       		.uleb128 0x3
 1211 00e6 0E       		.uleb128 0xe
 1212 00e7 3A       		.uleb128 0x3a
 1213 00e8 0B       		.uleb128 0xb
 1214 00e9 3B       		.uleb128 0x3b
 1215 00ea 05       		.uleb128 0x5
 1216 00eb 49       		.uleb128 0x49
 1217 00ec 13       		.uleb128 0x13
 1218 00ed 38       		.uleb128 0x38
 1219 00ee 0A       		.uleb128 0xa
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 42


 1220 00ef 00       		.byte	0
 1221 00f0 00       		.byte	0
 1222 00f1 14       		.uleb128 0x14
 1223 00f2 16       		.uleb128 0x16
 1224 00f3 00       		.byte	0
 1225 00f4 03       		.uleb128 0x3
 1226 00f5 0E       		.uleb128 0xe
 1227 00f6 3A       		.uleb128 0x3a
 1228 00f7 0B       		.uleb128 0xb
 1229 00f8 3B       		.uleb128 0x3b
 1230 00f9 05       		.uleb128 0x5
 1231 00fa 49       		.uleb128 0x49
 1232 00fb 13       		.uleb128 0x13
 1233 00fc 00       		.byte	0
 1234 00fd 00       		.byte	0
 1235 00fe 15       		.uleb128 0x15
 1236 00ff 34       		.uleb128 0x34
 1237 0100 00       		.byte	0
 1238 0101 47       		.uleb128 0x47
 1239 0102 13       		.uleb128 0x13
 1240 0103 3A       		.uleb128 0x3a
 1241 0104 0B       		.uleb128 0xb
 1242 0105 3B       		.uleb128 0x3b
 1243 0106 0B       		.uleb128 0xb
 1244 0107 02       		.uleb128 0x2
 1245 0108 0A       		.uleb128 0xa
 1246 0109 00       		.byte	0
 1247 010a 00       		.byte	0
 1248 010b 16       		.uleb128 0x16
 1249 010c 34       		.uleb128 0x34
 1250 010d 00       		.byte	0
 1251 010e 03       		.uleb128 0x3
 1252 010f 0E       		.uleb128 0xe
 1253 0110 3A       		.uleb128 0x3a
 1254 0111 0B       		.uleb128 0xb
 1255 0112 3B       		.uleb128 0x3b
 1256 0113 0B       		.uleb128 0xb
 1257 0114 49       		.uleb128 0x49
 1258 0115 13       		.uleb128 0x13
 1259 0116 3F       		.uleb128 0x3f
 1260 0117 0C       		.uleb128 0xc
 1261 0118 02       		.uleb128 0x2
 1262 0119 0A       		.uleb128 0xa
 1263 011a 00       		.byte	0
 1264 011b 00       		.byte	0
 1265 011c 17       		.uleb128 0x17
 1266 011d 2E       		.uleb128 0x2e
 1267 011e 01       		.byte	0x1
 1268 011f 03       		.uleb128 0x3
 1269 0120 0E       		.uleb128 0xe
 1270 0121 3A       		.uleb128 0x3a
 1271 0122 0B       		.uleb128 0xb
 1272 0123 3B       		.uleb128 0x3b
 1273 0124 05       		.uleb128 0x5
 1274 0125 27       		.uleb128 0x27
 1275 0126 0C       		.uleb128 0xc
 1276 0127 20       		.uleb128 0x20
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 43


 1277 0128 0B       		.uleb128 0xb
 1278 0129 01       		.uleb128 0x1
 1279 012a 13       		.uleb128 0x13
 1280 012b 00       		.byte	0
 1281 012c 00       		.byte	0
 1282 012d 18       		.uleb128 0x18
 1283 012e 34       		.uleb128 0x34
 1284 012f 00       		.byte	0
 1285 0130 03       		.uleb128 0x3
 1286 0131 0E       		.uleb128 0xe
 1287 0132 3A       		.uleb128 0x3a
 1288 0133 0B       		.uleb128 0xb
 1289 0134 3B       		.uleb128 0x3b
 1290 0135 05       		.uleb128 0x5
 1291 0136 49       		.uleb128 0x49
 1292 0137 13       		.uleb128 0x13
 1293 0138 00       		.byte	0
 1294 0139 00       		.byte	0
 1295 013a 19       		.uleb128 0x19
 1296 013b 2E       		.uleb128 0x2e
 1297 013c 00       		.byte	0
 1298 013d 03       		.uleb128 0x3
 1299 013e 0E       		.uleb128 0xe
 1300 013f 3A       		.uleb128 0x3a
 1301 0140 0B       		.uleb128 0xb
 1302 0141 3B       		.uleb128 0x3b
 1303 0142 05       		.uleb128 0x5
 1304 0143 27       		.uleb128 0x27
 1305 0144 0C       		.uleb128 0xc
 1306 0145 20       		.uleb128 0x20
 1307 0146 0B       		.uleb128 0xb
 1308 0147 00       		.byte	0
 1309 0148 00       		.byte	0
 1310 0149 1A       		.uleb128 0x1a
 1311 014a 2E       		.uleb128 0x2e
 1312 014b 01       		.byte	0x1
 1313 014c 3F       		.uleb128 0x3f
 1314 014d 0C       		.uleb128 0xc
 1315 014e 03       		.uleb128 0x3
 1316 014f 0E       		.uleb128 0xe
 1317 0150 3A       		.uleb128 0x3a
 1318 0151 0B       		.uleb128 0xb
 1319 0152 3B       		.uleb128 0x3b
 1320 0153 05       		.uleb128 0x5
 1321 0154 27       		.uleb128 0x27
 1322 0155 0C       		.uleb128 0xc
 1323 0156 11       		.uleb128 0x11
 1324 0157 01       		.uleb128 0x1
 1325 0158 12       		.uleb128 0x12
 1326 0159 01       		.uleb128 0x1
 1327 015a 40       		.uleb128 0x40
 1328 015b 0A       		.uleb128 0xa
 1329 015c 9742     		.uleb128 0x2117
 1330 015e 0C       		.uleb128 0xc
 1331 015f 01       		.uleb128 0x1
 1332 0160 13       		.uleb128 0x13
 1333 0161 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 44


 1334 0162 00       		.byte	0
 1335 0163 1B       		.uleb128 0x1b
 1336 0164 34       		.uleb128 0x34
 1337 0165 00       		.byte	0
 1338 0166 03       		.uleb128 0x3
 1339 0167 08       		.uleb128 0x8
 1340 0168 3A       		.uleb128 0x3a
 1341 0169 0B       		.uleb128 0xb
 1342 016a 3B       		.uleb128 0x3b
 1343 016b 05       		.uleb128 0x5
 1344 016c 49       		.uleb128 0x49
 1345 016d 13       		.uleb128 0x13
 1346 016e 02       		.uleb128 0x2
 1347 016f 06       		.uleb128 0x6
 1348 0170 00       		.byte	0
 1349 0171 00       		.byte	0
 1350 0172 1C       		.uleb128 0x1c
 1351 0173 34       		.uleb128 0x34
 1352 0174 00       		.byte	0
 1353 0175 03       		.uleb128 0x3
 1354 0176 0E       		.uleb128 0xe
 1355 0177 3A       		.uleb128 0x3a
 1356 0178 0B       		.uleb128 0xb
 1357 0179 3B       		.uleb128 0x3b
 1358 017a 05       		.uleb128 0x5
 1359 017b 49       		.uleb128 0x49
 1360 017c 13       		.uleb128 0x13
 1361 017d 02       		.uleb128 0x2
 1362 017e 06       		.uleb128 0x6
 1363 017f 00       		.byte	0
 1364 0180 00       		.byte	0
 1365 0181 1D       		.uleb128 0x1d
 1366 0182 2E       		.uleb128 0x2e
 1367 0183 01       		.byte	0x1
 1368 0184 3F       		.uleb128 0x3f
 1369 0185 0C       		.uleb128 0xc
 1370 0186 03       		.uleb128 0x3
 1371 0187 0E       		.uleb128 0xe
 1372 0188 3A       		.uleb128 0x3a
 1373 0189 0B       		.uleb128 0xb
 1374 018a 3B       		.uleb128 0x3b
 1375 018b 0B       		.uleb128 0xb
 1376 018c 27       		.uleb128 0x27
 1377 018d 0C       		.uleb128 0xc
 1378 018e 11       		.uleb128 0x11
 1379 018f 01       		.uleb128 0x1
 1380 0190 12       		.uleb128 0x12
 1381 0191 01       		.uleb128 0x1
 1382 0192 40       		.uleb128 0x40
 1383 0193 06       		.uleb128 0x6
 1384 0194 9742     		.uleb128 0x2117
 1385 0196 0C       		.uleb128 0xc
 1386 0197 00       		.byte	0
 1387 0198 00       		.byte	0
 1388 0199 1E       		.uleb128 0x1e
 1389 019a 1D       		.uleb128 0x1d
 1390 019b 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 45


 1391 019c 31       		.uleb128 0x31
 1392 019d 13       		.uleb128 0x13
 1393 019e 52       		.uleb128 0x52
 1394 019f 01       		.uleb128 0x1
 1395 01a0 55       		.uleb128 0x55
 1396 01a1 06       		.uleb128 0x6
 1397 01a2 58       		.uleb128 0x58
 1398 01a3 0B       		.uleb128 0xb
 1399 01a4 59       		.uleb128 0x59
 1400 01a5 05       		.uleb128 0x5
 1401 01a6 00       		.byte	0
 1402 01a7 00       		.byte	0
 1403 01a8 1F       		.uleb128 0x1f
 1404 01a9 0B       		.uleb128 0xb
 1405 01aa 01       		.byte	0x1
 1406 01ab 55       		.uleb128 0x55
 1407 01ac 06       		.uleb128 0x6
 1408 01ad 00       		.byte	0
 1409 01ae 00       		.byte	0
 1410 01af 20       		.uleb128 0x20
 1411 01b0 34       		.uleb128 0x34
 1412 01b1 00       		.byte	0
 1413 01b2 31       		.uleb128 0x31
 1414 01b3 13       		.uleb128 0x13
 1415 01b4 02       		.uleb128 0x2
 1416 01b5 0A       		.uleb128 0xa
 1417 01b6 00       		.byte	0
 1418 01b7 00       		.byte	0
 1419 01b8 00       		.byte	0
 1420              		.section	.debug_loc,"",%progbits
 1421              	.Ldebug_loc0:
 1422              	.LLST1:
 1423 0000 04010000 		.4byte	.LVL0-.Ltext0
 1424 0004 08010000 		.4byte	.LVL1-.Ltext0
 1425 0008 0200     		.2byte	0x2
 1426 000a 30       		.byte	0x30
 1427 000b 9F       		.byte	0x9f
 1428 000c 08010000 		.4byte	.LVL1-.Ltext0
 1429 0010 0C010000 		.4byte	.LVL2-.Ltext0
 1430 0014 0500     		.2byte	0x5
 1431 0016 73       		.byte	0x73
 1432 0017 00       		.sleb128 0
 1433 0018 3C       		.byte	0x3c
 1434 0019 1A       		.byte	0x1a
 1435 001a 9F       		.byte	0x9f
 1436 001b 0C010000 		.4byte	.LVL2-.Ltext0
 1437 001f 12010000 		.4byte	.LVL3-.Ltext0
 1438 0023 0100     		.2byte	0x1
 1439 0025 53       		.byte	0x53
 1440 0026 2E010000 		.4byte	.LVL9-.Ltext0
 1441 002a 30010000 		.4byte	.LVL10-.Ltext0
 1442 002e 0100     		.2byte	0x1
 1443 0030 53       		.byte	0x53
 1444 0031 3C010000 		.4byte	.LVL11-.Ltext0
 1445 0035 42010000 		.4byte	.LVL12-.Ltext0
 1446 0039 0100     		.2byte	0x1
 1447 003b 52       		.byte	0x52
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 46


 1448 003c 00000000 		.4byte	0
 1449 0040 00000000 		.4byte	0
 1450              	.LLST2:
 1451 0044 04010000 		.4byte	.LVL0-.Ltext0
 1452 0048 12010000 		.4byte	.LVL3-.Ltext0
 1453 004c 0200     		.2byte	0x2
 1454 004e 30       		.byte	0x30
 1455 004f 9F       		.byte	0x9f
 1456 0050 12010000 		.4byte	.LVL3-.Ltext0
 1457 0054 18010000 		.4byte	.LVL5-.Ltext0
 1458 0058 0700     		.2byte	0x7
 1459 005a 73       		.byte	0x73
 1460 005b 00       		.sleb128 0
 1461 005c 4E       		.byte	0x4e
 1462 005d 41       		.byte	0x41
 1463 005e 24       		.byte	0x24
 1464 005f 1A       		.byte	0x1a
 1465 0060 9F       		.byte	0x9f
 1466 0061 1E010000 		.4byte	.LVL7-.Ltext0
 1467 0065 2C010000 		.4byte	.LVL8-.Ltext0
 1468 0069 0100     		.2byte	0x1
 1469 006b 53       		.byte	0x53
 1470 006c 2E010000 		.4byte	.LVL9-.Ltext0
 1471 0070 30010000 		.4byte	.LVL10-.Ltext0
 1472 0074 0200     		.2byte	0x2
 1473 0076 30       		.byte	0x30
 1474 0077 9F       		.byte	0x9f
 1475 0078 42010000 		.4byte	.LVL12-.Ltext0
 1476 007c 48010000 		.4byte	.LVL13-.Ltext0
 1477 0080 0100     		.2byte	0x1
 1478 0082 53       		.byte	0x53
 1479 0083 00000000 		.4byte	0
 1480 0087 00000000 		.4byte	0
 1481              	.LLST3:
 1482 008b 04010000 		.4byte	.LVL0-.Ltext0
 1483 008f 14010000 		.4byte	.LVL4-.Ltext0
 1484 0093 0200     		.2byte	0x2
 1485 0095 30       		.byte	0x30
 1486 0096 9F       		.byte	0x9f
 1487 0097 14010000 		.4byte	.LVL4-.Ltext0
 1488 009b 1A010000 		.4byte	.LVL6-.Ltext0
 1489 009f 0700     		.2byte	0x7
 1490 00a1 71       		.byte	0x71
 1491 00a2 00       		.sleb128 0
 1492 00a3 40       		.byte	0x40
 1493 00a4 3C       		.byte	0x3c
 1494 00a5 24       		.byte	0x24
 1495 00a6 1A       		.byte	0x1a
 1496 00a7 9F       		.byte	0x9f
 1497 00a8 2E010000 		.4byte	.LVL9-.Ltext0
 1498 00ac 30010000 		.4byte	.LVL10-.Ltext0
 1499 00b0 0200     		.2byte	0x2
 1500 00b2 30       		.byte	0x30
 1501 00b3 9F       		.byte	0x9f
 1502 00b4 00000000 		.4byte	0
 1503 00b8 00000000 		.4byte	0
 1504              	.LLST0:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 47


 1505 00bc 00000000 		.4byte	.LFB29-.Ltext0
 1506 00c0 02000000 		.4byte	.LCFI0-.Ltext0
 1507 00c4 0200     		.2byte	0x2
 1508 00c6 7D       		.byte	0x7d
 1509 00c7 00       		.sleb128 0
 1510 00c8 02000000 		.4byte	.LCFI0-.Ltext0
 1511 00cc 10000000 		.4byte	.LCFI1-.Ltext0
 1512 00d0 0200     		.2byte	0x2
 1513 00d2 7D       		.byte	0x7d
 1514 00d3 08       		.sleb128 8
 1515 00d4 10000000 		.4byte	.LCFI1-.Ltext0
 1516 00d8 84000000 		.4byte	.LCFI2-.Ltext0
 1517 00dc 0200     		.2byte	0x2
 1518 00de 7D       		.byte	0x7d
 1519 00df 10       		.sleb128 16
 1520 00e0 84000000 		.4byte	.LCFI2-.Ltext0
 1521 00e4 86000000 		.4byte	.LCFI3-.Ltext0
 1522 00e8 0200     		.2byte	0x2
 1523 00ea 7D       		.byte	0x7d
 1524 00eb 08       		.sleb128 8
 1525 00ec 86000000 		.4byte	.LCFI3-.Ltext0
 1526 00f0 88000000 		.4byte	.LCFI4-.Ltext0
 1527 00f4 0200     		.2byte	0x2
 1528 00f6 7D       		.byte	0x7d
 1529 00f7 00       		.sleb128 0
 1530 00f8 88000000 		.4byte	.LCFI4-.Ltext0
 1531 00fc 04010000 		.4byte	.LFE29-.Ltext0
 1532 0100 0200     		.2byte	0x2
 1533 0102 7D       		.byte	0x7d
 1534 0103 10       		.sleb128 16
 1535 0104 00000000 		.4byte	0
 1536 0108 00000000 		.4byte	0
 1537              		.section	.debug_aranges,"",%progbits
 1538 0000 1C000000 		.4byte	0x1c
 1539 0004 0200     		.2byte	0x2
 1540 0006 00000000 		.4byte	.Ldebug_info0
 1541 000a 04       		.byte	0x4
 1542 000b 00       		.byte	0
 1543 000c 0000     		.2byte	0
 1544 000e 0000     		.2byte	0
 1545 0010 00000000 		.4byte	.Ltext0
 1546 0014 5C010000 		.4byte	.Letext0-.Ltext0
 1547 0018 00000000 		.4byte	0
 1548 001c 00000000 		.4byte	0
 1549              		.section	.debug_ranges,"",%progbits
 1550              	.Ldebug_ranges0:
 1551 0000 02000000 		.4byte	.LBB8-.Ltext0
 1552 0004 04000000 		.4byte	.LBE8-.Ltext0
 1553 0008 18000000 		.4byte	.LBB17-.Ltext0
 1554 000c 1A000000 		.4byte	.LBE17-.Ltext0
 1555 0010 3C000000 		.4byte	.LBB18-.Ltext0
 1556 0014 7A000000 		.4byte	.LBE18-.Ltext0
 1557 0018 88000000 		.4byte	.LBB19-.Ltext0
 1558 001c 04010000 		.4byte	.LBE19-.Ltext0
 1559 0020 00000000 		.4byte	0
 1560 0024 00000000 		.4byte	0
 1561              		.section	.debug_line,"",%progbits
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 48


 1562              	.Ldebug_line0:
 1563 0000 83010000 		.section	.debug_str,"MS",%progbits,1
 1563      0200FF00 
 1563      00000201 
 1563      FB0E0D00 
 1563      01010101 
 1564              	.LASF44:
 1565 0000 5243435F 		.ascii	"RCC_TypeDef\000"
 1565      54797065 
 1565      44656600 
 1566              	.LASF39:
 1567 000c 41504231 		.ascii	"APB1RSTR\000"
 1567      52535452 
 1567      00
 1568              	.LASF43:
 1569 0015 42444352 		.ascii	"BDCR\000"
 1569      00
 1570              	.LASF7:
 1571 001a 5F5F7569 		.ascii	"__uint32_t\000"
 1571      6E743332 
 1571      5F7400
 1572              	.LASF4:
 1573 0025 5F5F7569 		.ascii	"__uint16_t\000"
 1573      6E743136 
 1573      5F7400
 1574              	.LASF47:
 1575 0030 48534553 		.ascii	"HSEStatus\000"
 1575      74617475 
 1575      7300
 1576              	.LASF51:
 1577 003a 2E2E2F2E 		.ascii	"../../source/src/CMSIS/system_stm32f10x.c\000"
 1577      2E2F736F 
 1577      75726365 
 1577      2F737263 
 1577      2F434D53 
 1578              	.LASF15:
 1579 0064 43505549 		.ascii	"CPUID\000"
 1579      4400
 1580              	.LASF32:
 1581 006a 4B455952 		.ascii	"KEYR\000"
 1581      00
 1582              	.LASF37:
 1583 006f 43464752 		.ascii	"CFGR\000"
 1583      00
 1584              	.LASF12:
 1585 0074 75696E74 		.ascii	"uint8_t\000"
 1585      385F7400 
 1586              	.LASF42:
 1587 007c 41504231 		.ascii	"APB1ENR\000"
 1587      454E5200 
 1588              	.LASF2:
 1589 0084 73686F72 		.ascii	"short int\000"
 1589      7420696E 
 1589      7400
 1590              	.LASF16:
 1591 008e 49435352 		.ascii	"ICSR\000"
 1591      00
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 49


 1592              	.LASF33:
 1593 0093 4F50544B 		.ascii	"OPTKEYR\000"
 1593      45595200 
 1594              	.LASF52:
 1595 009b 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 1595      616B615C 
 1595      4B414B41 
 1595      4F535C43 
 1595      5C77696E 
 1596 00c3 757635A3 		.ascii	"uv5\243\251\000"
 1596      A900
 1597              	.LASF9:
 1598 00c9 6C6F6E67 		.ascii	"long long int\000"
 1598      206C6F6E 
 1598      6720696E 
 1598      7400
 1599              	.LASF24:
 1600 00d7 42464152 		.ascii	"BFAR\000"
 1600      00
 1601              	.LASF6:
 1602 00dc 6C6F6E67 		.ascii	"long int\000"
 1602      20696E74 
 1602      00
 1603              	.LASF48:
 1604 00e5 706C6C6D 		.ascii	"pllmull\000"
 1604      756C6C00 
 1605              	.LASF40:
 1606 00ed 41484245 		.ascii	"AHBENR\000"
 1606      4E5200
 1607              	.LASF38:
 1608 00f4 41504232 		.ascii	"APB2RSTR\000"
 1608      52535452 
 1608      00
 1609              	.LASF3:
 1610 00fd 5F5F7569 		.ascii	"__uint8_t\000"
 1610      6E74385F 
 1610      7400
 1611              	.LASF35:
 1612 0107 57525052 		.ascii	"WRPR\000"
 1612      00
 1613              	.LASF20:
 1614 010c 43465352 		.ascii	"CFSR\000"
 1614      00
 1615              	.LASF53:
 1616 0111 53657453 		.ascii	"SetSysClockTo72\000"
 1616      7973436C 
 1616      6F636B54 
 1616      6F373200 
 1617              	.LASF49:
 1618 0121 706C6C73 		.ascii	"pllsource\000"
 1618      6F757263 
 1618      6500
 1619              	.LASF1:
 1620 012b 756E7369 		.ascii	"unsigned char\000"
 1620      676E6564 
 1620      20636861 
 1620      7200
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 50


 1621              	.LASF18:
 1622 0139 41495243 		.ascii	"AIRCR\000"
 1622      5200
 1623              	.LASF28:
 1624 013f 5343425F 		.ascii	"SCB_Type\000"
 1624      54797065 
 1624      00
 1625              	.LASF41:
 1626 0148 41504232 		.ascii	"APB2ENR\000"
 1626      454E5200 
 1627              	.LASF50:
 1628 0150 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 1628      43313120 
 1628      372E332E 
 1628      31203230 
 1628      31383036 
 1629 0183 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 1629      20726576 
 1629      6973696F 
 1629      6E203236 
 1629      31393037 
 1630 01b6 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 1630      616D6520 
 1630      2D6D7468 
 1630      756D622D 
 1630      696E7465 
 1631 01e9 67647761 		.ascii	"gdwarf-2 -O2\000"
 1631      72662D32 
 1631      202D4F32 
 1631      00
 1632              	.LASF46:
 1633 01f6 53746172 		.ascii	"StartUpCounter\000"
 1633      74557043 
 1633      6F756E74 
 1633      657200
 1634              	.LASF0:
 1635 0205 7369676E 		.ascii	"signed char\000"
 1635      65642063 
 1635      68617200 
 1636              	.LASF10:
 1637 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 1637      206C6F6E 
 1637      6720756E 
 1637      7369676E 
 1637      65642069 
 1638              	.LASF14:
 1639 0228 75696E74 		.ascii	"uint32_t\000"
 1639      33325F74 
 1639      00
 1640              	.LASF11:
 1641 0231 756E7369 		.ascii	"unsigned int\000"
 1641      676E6564 
 1641      20696E74 
 1641      00
 1642              	.LASF13:
 1643 023e 75696E74 		.ascii	"uint16_t\000"
 1643      31365F74 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 51


 1643      00
 1644              	.LASF19:
 1645 0247 53484353 		.ascii	"SHCSR\000"
 1645      5200
 1646              	.LASF23:
 1647 024d 4D4D4641 		.ascii	"MMFAR\000"
 1647      5200
 1648              	.LASF56:
 1649 0253 53797374 		.ascii	"SystemInit\000"
 1649      656D496E 
 1649      697400
 1650              	.LASF5:
 1651 025e 73686F72 		.ascii	"short unsigned int\000"
 1651      7420756E 
 1651      7369676E 
 1651      65642069 
 1651      6E7400
 1652              	.LASF17:
 1653 0271 56544F52 		.ascii	"VTOR\000"
 1653      00
 1654              	.LASF55:
 1655 0276 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1655      656D436F 
 1655      7265436C 
 1655      6F636B55 
 1655      70646174 
 1656              	.LASF27:
 1657 028c 49534152 		.ascii	"ISAR\000"
 1657      00
 1658              	.LASF22:
 1659 0291 44465352 		.ascii	"DFSR\000"
 1659      00
 1660              	.LASF30:
 1661 0296 53797374 		.ascii	"SystemCoreClock\000"
 1661      656D436F 
 1661      7265436C 
 1661      6F636B00 
 1662              	.LASF21:
 1663 02a6 48465352 		.ascii	"HFSR\000"
 1663      00
 1664              	.LASF26:
 1665 02ab 4D4D4652 		.ascii	"MMFR\000"
 1665      00
 1666              	.LASF45:
 1667 02b0 41484250 		.ascii	"AHBPrescTable\000"
 1667      72657363 
 1667      5461626C 
 1667      6500
 1668              	.LASF54:
 1669 02be 53657453 		.ascii	"SetSysClock\000"
 1669      7973436C 
 1669      6F636B00 
 1670              	.LASF8:
 1671 02ca 6C6F6E67 		.ascii	"long unsigned int\000"
 1671      20756E73 
 1671      69676E65 
 1671      6420696E 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 52


 1671      7400
 1672              	.LASF31:
 1673 02dc 52455345 		.ascii	"RESET\000"
 1673      5400
 1674              	.LASF25:
 1675 02e2 41465352 		.ascii	"AFSR\000"
 1675      00
 1676              	.LASF34:
 1677 02e7 52455345 		.ascii	"RESERVED\000"
 1677      52564544 
 1677      00
 1678              	.LASF36:
 1679 02f0 464C4153 		.ascii	"FLASH_TypeDef\000"
 1679      485F5479 
 1679      70654465 
 1679      6600
 1680              	.LASF29:
 1681 02fe 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1681      52784275 
 1681      66666572 
 1681      00
 1682              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:15     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:23     .text:00000000 SystemInit
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:223    .text:000000f4 $d
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:233    .text:00000104 $t
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:241    .text:00000104 SystemCoreClockUpdate
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:312    .text:0000014c $d
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:326    .data:00000000 AHBPrescTable
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:345    .data:00000010 SystemCoreClock
G:\Users\Jaxb\AppData\Local\Temp\ccrDzxtS.s:322    .data:00000000 $d

NO UNDEFINED SYMBOLS
