ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f10x.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	SystemCoreClock
  16              		.data
  17              		.align	2
  18              		.type	SystemCoreClock, %object
  19              		.size	SystemCoreClock, 4
  20              	SystemCoreClock:
  21 0000 00A24A04 		.word	72000000
  22              		.global	AHBPrescTable
  23              		.align	2
  24              		.type	AHBPrescTable, %object
  25              		.size	AHBPrescTable, 16
  26              	AHBPrescTable:
  27 0004 00       		.byte	0
  28 0005 00       		.byte	0
  29 0006 00       		.byte	0
  30 0007 00       		.byte	0
  31 0008 00       		.byte	0
  32 0009 00       		.byte	0
  33 000a 00       		.byte	0
  34 000b 00       		.byte	0
  35 000c 01       		.byte	1
  36 000d 02       		.byte	2
  37 000e 03       		.byte	3
  38 000f 04       		.byte	4
  39 0010 06       		.byte	6
  40 0011 07       		.byte	7
  41 0012 08       		.byte	8
  42 0013 09       		.byte	9
  43              		.text
  44              		.align	1
  45              		.global	SystemInit
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  50              		.type	SystemInit, %function
  51              	SystemInit:
  52              	.LFB29:
  53              		.file 1 "../../source/src/CMSIS/system_stm32f10x.c"
   1:../../source/src/CMSIS/system_stm32f10x.c **** /**
   2:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
   3:../../source/src/CMSIS/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../../source/src/CMSIS/system_stm32f10x.c ****   * @author  MCD Application Team
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 2


   5:../../source/src/CMSIS/system_stm32f10x.c ****   * @version V3.5.0
   6:../../source/src/CMSIS/system_stm32f10x.c ****   * @date    11-March-2011
   7:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../../source/src/CMSIS/system_stm32f10x.c ****   * 
   9:../../source/src/CMSIS/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../../source/src/CMSIS/system_stm32f10x.c ****   *     user application:
  11:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../../source/src/CMSIS/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../../source/src/CMSIS/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../../source/src/CMSIS/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../../source/src/CMSIS/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../../source/src/CMSIS/system_stm32f10x.c ****   *
  17:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../../source/src/CMSIS/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../../source/src/CMSIS/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../../source/src/CMSIS/system_stm32f10x.c ****   *                                     
  21:../../source/src/CMSIS/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../../source/src/CMSIS/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../../source/src/CMSIS/system_stm32f10x.c ****   *                                 during program execution.
  24:../../source/src/CMSIS/system_stm32f10x.c ****   *
  25:../../source/src/CMSIS/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../../source/src/CMSIS/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../../source/src/CMSIS/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../../source/src/CMSIS/system_stm32f10x.c ****   *
  29:../../source/src/CMSIS/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../../source/src/CMSIS/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../../source/src/CMSIS/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../../source/src/CMSIS/system_stm32f10x.c ****   *
  33:../../source/src/CMSIS/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../../source/src/CMSIS/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../../source/src/CMSIS/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../../source/src/CMSIS/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../../source/src/CMSIS/system_stm32f10x.c ****   *    configuration.
  38:../../source/src/CMSIS/system_stm32f10x.c ****   *        
  39:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
  40:../../source/src/CMSIS/system_stm32f10x.c ****   * @attention
  41:../../source/src/CMSIS/system_stm32f10x.c ****   *
  42:../../source/src/CMSIS/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../../source/src/CMSIS/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../../source/src/CMSIS/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../../source/src/CMSIS/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../../source/src/CMSIS/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../../source/src/CMSIS/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../../source/src/CMSIS/system_stm32f10x.c ****   *
  49:../../source/src/CMSIS/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../../source/src/CMSIS/system_stm32f10x.c ****   ******************************************************************************
  51:../../source/src/CMSIS/system_stm32f10x.c ****   */
  52:../../source/src/CMSIS/system_stm32f10x.c **** 
  53:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  55:../../source/src/CMSIS/system_stm32f10x.c ****   */
  56:../../source/src/CMSIS/system_stm32f10x.c **** 
  57:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  59:../../source/src/CMSIS/system_stm32f10x.c ****   */  
  60:../../source/src/CMSIS/system_stm32f10x.c ****   
  61:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 3


  62:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  63:../../source/src/CMSIS/system_stm32f10x.c ****   */
  64:../../source/src/CMSIS/system_stm32f10x.c **** 
  65:../../source/src/CMSIS/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../../source/src/CMSIS/system_stm32f10x.c **** 
  67:../../source/src/CMSIS/system_stm32f10x.c **** /**
  68:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
  69:../../source/src/CMSIS/system_stm32f10x.c ****   */
  70:../../source/src/CMSIS/system_stm32f10x.c **** 
  71:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  73:../../source/src/CMSIS/system_stm32f10x.c ****   */
  74:../../source/src/CMSIS/system_stm32f10x.c **** 
  75:../../source/src/CMSIS/system_stm32f10x.c **** /**
  76:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
  77:../../source/src/CMSIS/system_stm32f10x.c ****   */
  78:../../source/src/CMSIS/system_stm32f10x.c **** 
  79:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
  81:../../source/src/CMSIS/system_stm32f10x.c ****   */
  82:../../source/src/CMSIS/system_stm32f10x.c **** 
  83:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../../source/src/CMSIS/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../../source/src/CMSIS/system_stm32f10x.c ****    
  86:../../source/src/CMSIS/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../../source/src/CMSIS/system_stm32f10x.c ****    ============== 
  88:../../source/src/CMSIS/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../../source/src/CMSIS/system_stm32f10x.c **** 
  90:../../source/src/CMSIS/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../../source/src/CMSIS/system_stm32f10x.c ****       maximum frequency.
  92:../../source/src/CMSIS/system_stm32f10x.c ****       
  93:../../source/src/CMSIS/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../../source/src/CMSIS/system_stm32f10x.c ****     source.
  95:../../source/src/CMSIS/system_stm32f10x.c **** 
  96:../../source/src/CMSIS/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../../source/src/CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../../source/src/CMSIS/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../../source/src/CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../../source/src/CMSIS/system_stm32f10x.c ****           used to drive the System clock.
 101:../../source/src/CMSIS/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../../source/src/CMSIS/system_stm32f10x.c ****           the System clock.
 103:../../source/src/CMSIS/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../../source/src/CMSIS/system_stm32f10x.c ****     */
 105:../../source/src/CMSIS/system_stm32f10x.c ****     
 106:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../../source/src/CMSIS/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../../source/src/CMSIS/system_stm32f10x.c **** #else
 110:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../../source/src/CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../../source/src/CMSIS/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 117:../../source/src/CMSIS/system_stm32f10x.c **** 
 118:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 4


 119:../../source/src/CMSIS/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../../source/src/CMSIS/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../../source/src/CMSIS/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 124:../../source/src/CMSIS/system_stm32f10x.c **** 
 125:../../source/src/CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../../source/src/CMSIS/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../../source/src/CMSIS/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../../source/src/CMSIS/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../../source/src/CMSIS/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../../source/src/CMSIS/system_stm32f10x.c **** 
 131:../../source/src/CMSIS/system_stm32f10x.c **** 
 132:../../source/src/CMSIS/system_stm32f10x.c **** /**
 133:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 134:../../source/src/CMSIS/system_stm32f10x.c ****   */
 135:../../source/src/CMSIS/system_stm32f10x.c **** 
 136:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 138:../../source/src/CMSIS/system_stm32f10x.c ****   */
 139:../../source/src/CMSIS/system_stm32f10x.c **** 
 140:../../source/src/CMSIS/system_stm32f10x.c **** /**
 141:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 142:../../source/src/CMSIS/system_stm32f10x.c ****   */
 143:../../source/src/CMSIS/system_stm32f10x.c **** 
 144:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 146:../../source/src/CMSIS/system_stm32f10x.c ****   */
 147:../../source/src/CMSIS/system_stm32f10x.c **** 
 148:../../source/src/CMSIS/system_stm32f10x.c **** /*******************************************************************************
 149:../../source/src/CMSIS/system_stm32f10x.c **** *  Clock Definitions
 150:../../source/src/CMSIS/system_stm32f10x.c **** *******************************************************************************/
 151:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../../source/src/CMSIS/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 166:../../source/src/CMSIS/system_stm32f10x.c **** 
 167:../../source/src/CMSIS/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../../source/src/CMSIS/system_stm32f10x.c **** /**
 169:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 170:../../source/src/CMSIS/system_stm32f10x.c ****   */
 171:../../source/src/CMSIS/system_stm32f10x.c **** 
 172:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 174:../../source/src/CMSIS/system_stm32f10x.c ****   */
 175:../../source/src/CMSIS/system_stm32f10x.c **** 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 5


 176:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClock(void);
 177:../../source/src/CMSIS/system_stm32f10x.c **** 
 178:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../../source/src/CMSIS/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 191:../../source/src/CMSIS/system_stm32f10x.c **** 
 192:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../../source/src/CMSIS/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../../source/src/CMSIS/system_stm32f10x.c **** 
 196:../../source/src/CMSIS/system_stm32f10x.c **** /**
 197:../../source/src/CMSIS/system_stm32f10x.c ****   * @}
 198:../../source/src/CMSIS/system_stm32f10x.c ****   */
 199:../../source/src/CMSIS/system_stm32f10x.c **** 
 200:../../source/src/CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../../source/src/CMSIS/system_stm32f10x.c ****   * @{
 202:../../source/src/CMSIS/system_stm32f10x.c ****   */
 203:../../source/src/CMSIS/system_stm32f10x.c **** 
 204:../../source/src/CMSIS/system_stm32f10x.c **** /**
 205:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../../source/src/CMSIS/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../../source/src/CMSIS/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 210:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 211:../../source/src/CMSIS/system_stm32f10x.c ****   */
 212:../../source/src/CMSIS/system_stm32f10x.c **** void SystemInit (void)
 213:../../source/src/CMSIS/system_stm32f10x.c **** {
  54              		.loc 1 213 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              	.LCFI1:
  65              		.cfi_def_cfa_register 7
 214:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../../source/src/CMSIS/system_stm32f10x.c ****   /* Set HSION bit */
 216:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
  66              		.loc 1 216 0
  67 0004 154B     		ldr	r3, .L2
  68 0006 1B68     		ldr	r3, [r3]
  69 0008 144A     		ldr	r2, .L2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 6


  70 000a 43F00103 		orr	r3, r3, #1
  71 000e 1360     		str	r3, [r2]
 217:../../source/src/CMSIS/system_stm32f10x.c **** 
 218:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  72              		.loc 1 220 0
  73 0010 124B     		ldr	r3, .L2
  74 0012 5A68     		ldr	r2, [r3, #4]
  75 0014 1149     		ldr	r1, .L2
  76 0016 124B     		ldr	r3, .L2+4
  77 0018 1340     		ands	r3, r3, r2
  78 001a 4B60     		str	r3, [r1, #4]
 221:../../source/src/CMSIS/system_stm32f10x.c **** #else
 222:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../../source/src/CMSIS/system_stm32f10x.c ****   
 225:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  79              		.loc 1 226 0
  80 001c 0F4B     		ldr	r3, .L2
  81 001e 1B68     		ldr	r3, [r3]
  82 0020 0E4A     		ldr	r2, .L2
  83 0022 23F08473 		bic	r3, r3, #17301504
  84 0026 23F48033 		bic	r3, r3, #65536
  85 002a 1360     		str	r3, [r2]
 227:../../source/src/CMSIS/system_stm32f10x.c **** 
 228:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  86              		.loc 1 229 0
  87 002c 0B4B     		ldr	r3, .L2
  88 002e 1B68     		ldr	r3, [r3]
  89 0030 0A4A     		ldr	r2, .L2
  90 0032 23F48023 		bic	r3, r3, #262144
  91 0036 1360     		str	r3, [r2]
 230:../../source/src/CMSIS/system_stm32f10x.c **** 
 231:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  92              		.loc 1 232 0
  93 0038 084B     		ldr	r3, .L2
  94 003a 5B68     		ldr	r3, [r3, #4]
  95 003c 074A     		ldr	r2, .L2
  96 003e 23F4FE03 		bic	r3, r3, #8323072
  97 0042 5360     		str	r3, [r2, #4]
 233:../../source/src/CMSIS/system_stm32f10x.c **** 
 234:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../../source/src/CMSIS/system_stm32f10x.c **** 
 238:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../../source/src/CMSIS/system_stm32f10x.c **** 
 241:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 7


 246:../../source/src/CMSIS/system_stm32f10x.c **** 
 247:../../source/src/CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:../../source/src/CMSIS/system_stm32f10x.c **** #else
 250:../../source/src/CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
  98              		.loc 1 251 0
  99 0044 054B     		ldr	r3, .L2
 100 0046 4FF41F02 		mov	r2, #10420224
 101 004a 9A60     		str	r2, [r3, #8]
 252:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../../source/src/CMSIS/system_stm32f10x.c ****     
 254:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../../source/src/CMSIS/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../../source/src/CMSIS/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../../source/src/CMSIS/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../../source/src/CMSIS/system_stm32f10x.c **** #endif 
 259:../../source/src/CMSIS/system_stm32f10x.c **** 
 260:../../source/src/CMSIS/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../../source/src/CMSIS/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClock();
 102              		.loc 1 262 0
 103 004c 00F078F8 		bl	SetSysClock
 263:../../source/src/CMSIS/system_stm32f10x.c **** 
 264:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../../source/src/CMSIS/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../../source/src/CMSIS/system_stm32f10x.c **** #else
 267:../../source/src/CMSIS/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 104              		.loc 1 267 0
 105 0050 044B     		ldr	r3, .L2+8
 106 0052 4FF00062 		mov	r2, #134217728
 107 0056 9A60     		str	r2, [r3, #8]
 268:../../source/src/CMSIS/system_stm32f10x.c **** #endif 
 269:../../source/src/CMSIS/system_stm32f10x.c **** }
 108              		.loc 1 269 0
 109 0058 00BF     		nop
 110 005a 80BD     		pop	{r7, pc}
 111              	.L3:
 112              		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 0000FFF8 		.word	-117506048
 116 0064 00ED00E0 		.word	-536810240
 117              		.cfi_endproc
 118              	.LFE29:
 119              		.size	SystemInit, .-SystemInit
 120              		.align	1
 121              		.global	SystemCoreClockUpdate
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 126              		.type	SystemCoreClockUpdate, %function
 127              	SystemCoreClockUpdate:
 128              	.LFB30:
 270:../../source/src/CMSIS/system_stm32f10x.c **** 
 271:../../source/src/CMSIS/system_stm32f10x.c **** /**
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 8


 272:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../../source/src/CMSIS/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../../source/src/CMSIS/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../../source/src/CMSIS/system_stm32f10x.c ****   *         other parameters.
 276:../../source/src/CMSIS/system_stm32f10x.c ****   *           
 277:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../../source/src/CMSIS/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../../source/src/CMSIS/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../../source/src/CMSIS/system_stm32f10x.c ****   *     
 281:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../../source/src/CMSIS/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../../source/src/CMSIS/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../../source/src/CMSIS/system_stm32f10x.c ****   *             
 285:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../../source/src/CMSIS/system_stm32f10x.c ****   *                                              
 287:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../../source/src/CMSIS/system_stm32f10x.c ****   *                          
 289:../../source/src/CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../../source/src/CMSIS/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../../source/src/CMSIS/system_stm32f10x.c ****   *         
 292:../../source/src/CMSIS/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../../source/src/CMSIS/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../../source/src/CMSIS/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../../source/src/CMSIS/system_stm32f10x.c ****   *    
 296:../../source/src/CMSIS/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../../source/src/CMSIS/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../../source/src/CMSIS/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../../source/src/CMSIS/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../../source/src/CMSIS/system_stm32f10x.c ****   *                
 301:../../source/src/CMSIS/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../../source/src/CMSIS/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 304:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 305:../../source/src/CMSIS/system_stm32f10x.c ****   */
 306:../../source/src/CMSIS/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../../source/src/CMSIS/system_stm32f10x.c **** {
 129              		.loc 1 307 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 16
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0068 80B4     		push	{r7}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 006a 85B0     		sub	sp, sp, #20
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 24
 141 006c 00AF     		add	r7, sp, #0
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 7
 308:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 144              		.loc 1 308 0
 145 006e 0023     		movs	r3, #0
 146 0070 FB60     		str	r3, [r7, #12]
 147 0072 0023     		movs	r3, #0
 148 0074 BB60     		str	r3, [r7, #8]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 9


 149 0076 0023     		movs	r3, #0
 150 0078 7B60     		str	r3, [r7, #4]
 309:../../source/src/CMSIS/system_stm32f10x.c **** 
 310:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../../source/src/CMSIS/system_stm32f10x.c **** 
 314:../../source/src/CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../../source/src/CMSIS/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../../source/src/CMSIS/system_stm32f10x.c ****     
 318:../../source/src/CMSIS/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../../source/src/CMSIS/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 151              		.loc 1 319 0
 152 007a 2C4B     		ldr	r3, .L14
 153 007c 5B68     		ldr	r3, [r3, #4]
 154 007e 03F00C03 		and	r3, r3, #12
 155 0082 FB60     		str	r3, [r7, #12]
 320:../../source/src/CMSIS/system_stm32f10x.c ****   
 321:../../source/src/CMSIS/system_stm32f10x.c ****   switch (tmp)
 156              		.loc 1 321 0
 157 0084 FB68     		ldr	r3, [r7, #12]
 158 0086 042B     		cmp	r3, #4
 159 0088 07D0     		beq	.L6
 160 008a 082B     		cmp	r3, #8
 161 008c 09D0     		beq	.L7
 162 008e 002B     		cmp	r3, #0
 163 0090 33D1     		bne	.L13
 322:../../source/src/CMSIS/system_stm32f10x.c ****   {
 323:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 164              		.loc 1 324 0
 165 0092 274B     		ldr	r3, .L14+4
 166 0094 274A     		ldr	r2, .L14+8
 167 0096 1A60     		str	r2, [r3]
 325:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 168              		.loc 1 325 0
 169 0098 33E0     		b	.L9
 170              	.L6:
 326:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 171              		.loc 1 327 0
 172 009a 254B     		ldr	r3, .L14+4
 173 009c 254A     		ldr	r2, .L14+8
 174 009e 1A60     		str	r2, [r3]
 328:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 175              		.loc 1 328 0
 176 00a0 2FE0     		b	.L9
 177              	.L7:
 329:../../source/src/CMSIS/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../../source/src/CMSIS/system_stm32f10x.c **** 
 331:../../source/src/CMSIS/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 178              		.loc 1 332 0
 179 00a2 224B     		ldr	r3, .L14
 180 00a4 5B68     		ldr	r3, [r3, #4]
 181 00a6 03F47013 		and	r3, r3, #3932160
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 10


 182 00aa BB60     		str	r3, [r7, #8]
 333:../../source/src/CMSIS/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 183              		.loc 1 333 0
 184 00ac 1F4B     		ldr	r3, .L14
 185 00ae 5B68     		ldr	r3, [r3, #4]
 186 00b0 03F48033 		and	r3, r3, #65536
 187 00b4 7B60     		str	r3, [r7, #4]
 334:../../source/src/CMSIS/system_stm32f10x.c ****       
 335:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 188              		.loc 1 336 0
 189 00b6 BB68     		ldr	r3, [r7, #8]
 190 00b8 9B0C     		lsrs	r3, r3, #18
 191 00ba 0233     		adds	r3, r3, #2
 192 00bc BB60     		str	r3, [r7, #8]
 337:../../source/src/CMSIS/system_stm32f10x.c ****       
 338:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 193              		.loc 1 338 0
 194 00be 7B68     		ldr	r3, [r7, #4]
 195 00c0 002B     		cmp	r3, #0
 196 00c2 06D1     		bne	.L10
 339:../../source/src/CMSIS/system_stm32f10x.c ****       {
 340:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../../source/src/CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 197              		.loc 1 341 0
 198 00c4 BB68     		ldr	r3, [r7, #8]
 199 00c6 1C4A     		ldr	r2, .L14+12
 200 00c8 02FB03F3 		mul	r3, r2, r3
 201 00cc 184A     		ldr	r2, .L14+4
 202 00ce 1360     		str	r3, [r2]
 342:../../source/src/CMSIS/system_stm32f10x.c ****       }
 343:../../source/src/CMSIS/system_stm32f10x.c ****       else
 344:../../source/src/CMSIS/system_stm32f10x.c ****       {
 345:../../source/src/CMSIS/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../../source/src/CMSIS/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../../source/src/CMSIS/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../../source/src/CMSIS/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../../source/src/CMSIS/system_stm32f10x.c ****  #else
 350:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../../source/src/CMSIS/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../../source/src/CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../../source/src/CMSIS/system_stm32f10x.c ****         }
 355:../../source/src/CMSIS/system_stm32f10x.c ****         else
 356:../../source/src/CMSIS/system_stm32f10x.c ****         {
 357:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../../source/src/CMSIS/system_stm32f10x.c ****         }
 359:../../source/src/CMSIS/system_stm32f10x.c ****  #endif
 360:../../source/src/CMSIS/system_stm32f10x.c ****       }
 361:../../source/src/CMSIS/system_stm32f10x.c **** #else
 362:../../source/src/CMSIS/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../../source/src/CMSIS/system_stm32f10x.c ****       
 364:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../../source/src/CMSIS/system_stm32f10x.c ****       {
 366:../../source/src/CMSIS/system_stm32f10x.c ****          pllmull += 2;
 367:../../source/src/CMSIS/system_stm32f10x.c ****       }
 368:../../source/src/CMSIS/system_stm32f10x.c ****       else
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 11


 369:../../source/src/CMSIS/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../../source/src/CMSIS/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../../source/src/CMSIS/system_stm32f10x.c ****       }
 372:../../source/src/CMSIS/system_stm32f10x.c ****             
 373:../../source/src/CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../../source/src/CMSIS/system_stm32f10x.c ****       {
 375:../../source/src/CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../../source/src/CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../../source/src/CMSIS/system_stm32f10x.c ****       }
 378:../../source/src/CMSIS/system_stm32f10x.c ****       else
 379:../../source/src/CMSIS/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../../source/src/CMSIS/system_stm32f10x.c ****         
 381:../../source/src/CMSIS/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../../source/src/CMSIS/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../../source/src/CMSIS/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../../source/src/CMSIS/system_stm32f10x.c ****         
 385:../../source/src/CMSIS/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../../source/src/CMSIS/system_stm32f10x.c ****         { 
 387:../../source/src/CMSIS/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../../source/src/CMSIS/system_stm32f10x.c ****         }
 390:../../source/src/CMSIS/system_stm32f10x.c ****         else
 391:../../source/src/CMSIS/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../../source/src/CMSIS/system_stm32f10x.c ****           
 393:../../source/src/CMSIS/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../../source/src/CMSIS/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../../source/src/CMSIS/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../../source/src/CMSIS/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../../source/src/CMSIS/system_stm32f10x.c ****         }
 398:../../source/src/CMSIS/system_stm32f10x.c ****       }
 399:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 203              		.loc 1 400 0
 204 00d0 17E0     		b	.L9
 205              	.L10:
 351:../../source/src/CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 206              		.loc 1 351 0
 207 00d2 164B     		ldr	r3, .L14
 208 00d4 5B68     		ldr	r3, [r3, #4]
 209 00d6 03F40033 		and	r3, r3, #131072
 210 00da 002B     		cmp	r3, #0
 211 00dc 06D0     		beq	.L12
 353:../../source/src/CMSIS/system_stm32f10x.c ****         }
 212              		.loc 1 353 0
 213 00de BB68     		ldr	r3, [r7, #8]
 214 00e0 154A     		ldr	r2, .L14+12
 215 00e2 02FB03F3 		mul	r3, r2, r3
 216 00e6 124A     		ldr	r2, .L14+4
 217 00e8 1360     		str	r3, [r2]
 218              		.loc 1 400 0
 219 00ea 0AE0     		b	.L9
 220              	.L12:
 357:../../source/src/CMSIS/system_stm32f10x.c ****         }
 221              		.loc 1 357 0
 222 00ec BB68     		ldr	r3, [r7, #8]
 223 00ee 114A     		ldr	r2, .L14+8
 224 00f0 02FB03F3 		mul	r3, r2, r3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 12


 225 00f4 0E4A     		ldr	r2, .L14+4
 226 00f6 1360     		str	r3, [r2]
 227              		.loc 1 400 0
 228 00f8 03E0     		b	.L9
 229              	.L13:
 401:../../source/src/CMSIS/system_stm32f10x.c **** 
 402:../../source/src/CMSIS/system_stm32f10x.c ****     default:
 403:../../source/src/CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 230              		.loc 1 403 0
 231 00fa 0D4B     		ldr	r3, .L14+4
 232 00fc 0D4A     		ldr	r2, .L14+8
 233 00fe 1A60     		str	r2, [r3]
 404:../../source/src/CMSIS/system_stm32f10x.c ****       break;
 234              		.loc 1 404 0
 235 0100 00BF     		nop
 236              	.L9:
 405:../../source/src/CMSIS/system_stm32f10x.c ****   }
 406:../../source/src/CMSIS/system_stm32f10x.c ****   
 407:../../source/src/CMSIS/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../../source/src/CMSIS/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../../source/src/CMSIS/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 237              		.loc 1 409 0
 238 0102 0A4B     		ldr	r3, .L14
 239 0104 5B68     		ldr	r3, [r3, #4]
 240 0106 1B09     		lsrs	r3, r3, #4
 241 0108 03F00F03 		and	r3, r3, #15
 242 010c 0B4A     		ldr	r2, .L14+16
 243 010e D35C     		ldrb	r3, [r2, r3]
 244 0110 DBB2     		uxtb	r3, r3
 245 0112 FB60     		str	r3, [r7, #12]
 410:../../source/src/CMSIS/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../../source/src/CMSIS/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 246              		.loc 1 411 0
 247 0114 064B     		ldr	r3, .L14+4
 248 0116 1A68     		ldr	r2, [r3]
 249 0118 FB68     		ldr	r3, [r7, #12]
 250 011a 22FA03F3 		lsr	r3, r2, r3
 251 011e 044A     		ldr	r2, .L14+4
 252 0120 1360     		str	r3, [r2]
 412:../../source/src/CMSIS/system_stm32f10x.c **** }
 253              		.loc 1 412 0
 254 0122 00BF     		nop
 255 0124 1437     		adds	r7, r7, #20
 256              	.LCFI5:
 257              		.cfi_def_cfa_offset 4
 258 0126 BD46     		mov	sp, r7
 259              	.LCFI6:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0128 80BC     		pop	{r7}
 263              	.LCFI7:
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 012a 7047     		bx	lr
 267              	.L15:
 268              		.align	2
 269              	.L14:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 13


 270 012c 00100240 		.word	1073876992
 271 0130 00000000 		.word	SystemCoreClock
 272 0134 00127A00 		.word	8000000
 273 0138 00093D00 		.word	4000000
 274 013c 00000000 		.word	AHBPrescTable
 275              		.cfi_endproc
 276              	.LFE30:
 277              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 278              		.align	1
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu softvfp
 283              		.type	SetSysClock, %function
 284              	SetSysClock:
 285              	.LFB31:
 413:../../source/src/CMSIS/system_stm32f10x.c **** 
 414:../../source/src/CMSIS/system_stm32f10x.c **** /**
 415:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 417:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 418:../../source/src/CMSIS/system_stm32f10x.c ****   */
 419:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClock(void)
 420:../../source/src/CMSIS/system_stm32f10x.c **** {
 286              		.loc 1 420 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290 0140 80B5     		push	{r7, lr}
 291              	.LCFI8:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0142 00AF     		add	r7, sp, #0
 296              	.LCFI9:
 297              		.cfi_def_cfa_register 7
 421:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo24();
 425:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo36();
 427:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo48();
 429:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../../source/src/CMSIS/system_stm32f10x.c ****   SetSysClockTo72();
 298              		.loc 1 432 0
 299 0144 00F002F8 		bl	SetSysClockTo72
 433:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 434:../../source/src/CMSIS/system_stm32f10x.c ****  
 435:../../source/src/CMSIS/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../../source/src/CMSIS/system_stm32f10x.c ****     source (default after reset) */ 
 437:../../source/src/CMSIS/system_stm32f10x.c **** }
 300              		.loc 1 437 0
 301 0148 00BF     		nop
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 14


 302 014a 80BD     		pop	{r7, pc}
 303              		.cfi_endproc
 304              	.LFE31:
 305              		.size	SetSysClock, .-SetSysClock
 306              		.align	1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 311              		.type	SetSysClockTo72, %function
 312              	SetSysClockTo72:
 313              	.LFB32:
 438:../../source/src/CMSIS/system_stm32f10x.c **** 
 439:../../source/src/CMSIS/system_stm32f10x.c **** /**
 440:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../../source/src/CMSIS/system_stm32f10x.c ****   *          before jump to __main
 442:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 443:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 444:../../source/src/CMSIS/system_stm32f10x.c ****   */ 
 445:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../../source/src/CMSIS/system_stm32f10x.c **** /**
 447:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../../source/src/CMSIS/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../../source/src/CMSIS/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../../source/src/CMSIS/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../../source/src/CMSIS/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 453:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 454:../../source/src/CMSIS/system_stm32f10x.c ****   */ 
 455:../../source/src/CMSIS/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../../source/src/CMSIS/system_stm32f10x.c **** {
 457:../../source/src/CMSIS/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../../source/src/CMSIS/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../../source/src/CMSIS/system_stm32f10x.c **** 
 460:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../../source/src/CMSIS/system_stm32f10x.c ****   
 463:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../../source/src/CMSIS/system_stm32f10x.c ****   
 466:../../source/src/CMSIS/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../../source/src/CMSIS/system_stm32f10x.c ****   
 472:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../../source/src/CMSIS/system_stm32f10x.c **** 
 475:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../../source/src/CMSIS/system_stm32f10x.c **** 
 478:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../../source/src/CMSIS/system_stm32f10x.c **** 
 481:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../../source/src/CMSIS/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 15


 483:../../source/src/CMSIS/system_stm32f10x.c ****    
 484:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../../source/src/CMSIS/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../../source/src/CMSIS/system_stm32f10x.c ****   
 487:../../source/src/CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../../source/src/CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../../source/src/CMSIS/system_stm32f10x.c **** }
 490:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../../source/src/CMSIS/system_stm32f10x.c **** 
 492:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../../source/src/CMSIS/system_stm32f10x.c **** /**
 494:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 498:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 499:../../source/src/CMSIS/system_stm32f10x.c ****   */
 500:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../../source/src/CMSIS/system_stm32f10x.c **** {
 502:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../../source/src/CMSIS/system_stm32f10x.c ****   
 504:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 506:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../../source/src/CMSIS/system_stm32f10x.c ****  
 508:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../../source/src/CMSIS/system_stm32f10x.c ****   do
 510:../../source/src/CMSIS/system_stm32f10x.c ****   {
 511:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 513:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../../source/src/CMSIS/system_stm32f10x.c **** 
 515:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../../source/src/CMSIS/system_stm32f10x.c ****   {
 517:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../../source/src/CMSIS/system_stm32f10x.c ****   }
 519:../../source/src/CMSIS/system_stm32f10x.c ****   else
 520:../../source/src/CMSIS/system_stm32f10x.c ****   {
 521:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 523:../../source/src/CMSIS/system_stm32f10x.c **** 
 524:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../../source/src/CMSIS/system_stm32f10x.c ****   {
 526:../../source/src/CMSIS/system_stm32f10x.c **** 
 527:../../source/src/CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../../source/src/CMSIS/system_stm32f10x.c **** 
 531:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:../../source/src/CMSIS/system_stm32f10x.c **** 
 534:../../source/src/CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../../source/src/CMSIS/system_stm32f10x.c **** #else
 537:../../source/src/CMSIS/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../../source/src/CMSIS/system_stm32f10x.c **** 	{
 539:../../source/src/CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 16


 540:../../source/src/CMSIS/system_stm32f10x.c **** 	}
 541:../../source/src/CMSIS/system_stm32f10x.c **** 	else
 542:../../source/src/CMSIS/system_stm32f10x.c **** 	{
 543:../../source/src/CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../../source/src/CMSIS/system_stm32f10x.c **** 	}
 545:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 547:../../source/src/CMSIS/system_stm32f10x.c ****  
 548:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../../source/src/CMSIS/system_stm32f10x.c ****       
 551:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../../source/src/CMSIS/system_stm32f10x.c ****     
 554:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../../source/src/CMSIS/system_stm32f10x.c ****     
 557:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../../source/src/CMSIS/system_stm32f10x.c **** 
 561:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../../source/src/CMSIS/system_stm32f10x.c ****     {
 564:../../source/src/CMSIS/system_stm32f10x.c ****     }
 565:../../source/src/CMSIS/system_stm32f10x.c ****   }
 566:../../source/src/CMSIS/system_stm32f10x.c ****   else
 567:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 570:../../source/src/CMSIS/system_stm32f10x.c **** }
 571:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../../source/src/CMSIS/system_stm32f10x.c **** /**
 573:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 577:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 578:../../source/src/CMSIS/system_stm32f10x.c ****   */
 579:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../../source/src/CMSIS/system_stm32f10x.c **** {
 581:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:../../source/src/CMSIS/system_stm32f10x.c ****   
 583:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 585:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:../../source/src/CMSIS/system_stm32f10x.c ****  
 587:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../../source/src/CMSIS/system_stm32f10x.c ****   do
 589:../../source/src/CMSIS/system_stm32f10x.c ****   {
 590:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 592:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:../../source/src/CMSIS/system_stm32f10x.c **** 
 594:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:../../source/src/CMSIS/system_stm32f10x.c ****   {
 596:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 17


 597:../../source/src/CMSIS/system_stm32f10x.c ****   }
 598:../../source/src/CMSIS/system_stm32f10x.c ****   else
 599:../../source/src/CMSIS/system_stm32f10x.c ****   {
 600:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 602:../../source/src/CMSIS/system_stm32f10x.c **** 
 603:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:../../source/src/CMSIS/system_stm32f10x.c ****   {
 605:../../source/src/CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../../source/src/CMSIS/system_stm32f10x.c **** 
 609:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../../source/src/CMSIS/system_stm32f10x.c **** #endif
 613:../../source/src/CMSIS/system_stm32f10x.c ****  
 614:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:../../source/src/CMSIS/system_stm32f10x.c ****       
 617:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:../../source/src/CMSIS/system_stm32f10x.c ****     
 620:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:../../source/src/CMSIS/system_stm32f10x.c ****     
 623:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../../source/src/CMSIS/system_stm32f10x.c **** 
 630:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../../source/src/CMSIS/system_stm32f10x.c ****   
 637:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../../source/src/CMSIS/system_stm32f10x.c ****     {
 642:../../source/src/CMSIS/system_stm32f10x.c ****     }   
 643:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 648:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../../source/src/CMSIS/system_stm32f10x.c **** 
 653:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 18


 654:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:../../source/src/CMSIS/system_stm32f10x.c **** 
 656:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:../../source/src/CMSIS/system_stm32f10x.c ****     {
 659:../../source/src/CMSIS/system_stm32f10x.c ****     }
 660:../../source/src/CMSIS/system_stm32f10x.c **** 
 661:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:../../source/src/CMSIS/system_stm32f10x.c **** 
 665:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:../../source/src/CMSIS/system_stm32f10x.c ****     {
 668:../../source/src/CMSIS/system_stm32f10x.c ****     }
 669:../../source/src/CMSIS/system_stm32f10x.c ****   }
 670:../../source/src/CMSIS/system_stm32f10x.c ****   else
 671:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 674:../../source/src/CMSIS/system_stm32f10x.c **** }
 675:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:../../source/src/CMSIS/system_stm32f10x.c **** /**
 677:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 681:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 682:../../source/src/CMSIS/system_stm32f10x.c ****   */
 683:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:../../source/src/CMSIS/system_stm32f10x.c **** {
 685:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:../../source/src/CMSIS/system_stm32f10x.c ****   
 687:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 689:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:../../source/src/CMSIS/system_stm32f10x.c ****  
 691:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:../../source/src/CMSIS/system_stm32f10x.c ****   do
 693:../../source/src/CMSIS/system_stm32f10x.c ****   {
 694:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 696:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:../../source/src/CMSIS/system_stm32f10x.c **** 
 698:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:../../source/src/CMSIS/system_stm32f10x.c ****   {
 700:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:../../source/src/CMSIS/system_stm32f10x.c ****   }
 702:../../source/src/CMSIS/system_stm32f10x.c ****   else
 703:../../source/src/CMSIS/system_stm32f10x.c ****   {
 704:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 706:../../source/src/CMSIS/system_stm32f10x.c **** 
 707:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:../../source/src/CMSIS/system_stm32f10x.c ****   {
 709:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 19


 711:../../source/src/CMSIS/system_stm32f10x.c **** 
 712:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:../../source/src/CMSIS/system_stm32f10x.c ****  
 716:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:../../source/src/CMSIS/system_stm32f10x.c ****       
 719:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:../../source/src/CMSIS/system_stm32f10x.c ****     
 722:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:../../source/src/CMSIS/system_stm32f10x.c ****     
 725:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:../../source/src/CMSIS/system_stm32f10x.c ****     
 728:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:../../source/src/CMSIS/system_stm32f10x.c **** 
 733:../../source/src/CMSIS/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:../../source/src/CMSIS/system_stm32f10x.c ****         
 736:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:../../source/src/CMSIS/system_stm32f10x.c ****   
 741:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 742:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:../../source/src/CMSIS/system_stm32f10x.c ****     {
 746:../../source/src/CMSIS/system_stm32f10x.c ****     }
 747:../../source/src/CMSIS/system_stm32f10x.c ****     
 748:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 749:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:../../source/src/CMSIS/system_stm32f10x.c **** 
 754:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 755:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:../../source/src/CMSIS/system_stm32f10x.c **** 
 757:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:../../source/src/CMSIS/system_stm32f10x.c ****     {
 760:../../source/src/CMSIS/system_stm32f10x.c ****     }
 761:../../source/src/CMSIS/system_stm32f10x.c **** 
 762:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:../../source/src/CMSIS/system_stm32f10x.c **** 
 766:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 20


 768:../../source/src/CMSIS/system_stm32f10x.c ****     {
 769:../../source/src/CMSIS/system_stm32f10x.c ****     }
 770:../../source/src/CMSIS/system_stm32f10x.c ****   }
 771:../../source/src/CMSIS/system_stm32f10x.c ****   else
 772:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 775:../../source/src/CMSIS/system_stm32f10x.c **** }
 776:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:../../source/src/CMSIS/system_stm32f10x.c **** /**
 778:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 782:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 783:../../source/src/CMSIS/system_stm32f10x.c ****   */
 784:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:../../source/src/CMSIS/system_stm32f10x.c **** {
 786:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:../../source/src/CMSIS/system_stm32f10x.c ****   
 788:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 790:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:../../source/src/CMSIS/system_stm32f10x.c ****  
 792:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:../../source/src/CMSIS/system_stm32f10x.c ****   do
 794:../../source/src/CMSIS/system_stm32f10x.c ****   {
 795:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 797:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:../../source/src/CMSIS/system_stm32f10x.c **** 
 799:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:../../source/src/CMSIS/system_stm32f10x.c ****   {
 801:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:../../source/src/CMSIS/system_stm32f10x.c ****   }
 803:../../source/src/CMSIS/system_stm32f10x.c ****   else
 804:../../source/src/CMSIS/system_stm32f10x.c ****   {
 805:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 807:../../source/src/CMSIS/system_stm32f10x.c **** 
 808:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:../../source/src/CMSIS/system_stm32f10x.c ****   {
 810:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:../../source/src/CMSIS/system_stm32f10x.c **** 
 813:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:../../source/src/CMSIS/system_stm32f10x.c ****  
 817:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:../../source/src/CMSIS/system_stm32f10x.c ****       
 820:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:../../source/src/CMSIS/system_stm32f10x.c ****     
 823:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 21


 825:../../source/src/CMSIS/system_stm32f10x.c ****     
 826:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:../../source/src/CMSIS/system_stm32f10x.c ****         
 831:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:../../source/src/CMSIS/system_stm32f10x.c ****   
 836:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 837:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:../../source/src/CMSIS/system_stm32f10x.c ****     {
 841:../../source/src/CMSIS/system_stm32f10x.c ****     }
 842:../../source/src/CMSIS/system_stm32f10x.c ****     
 843:../../source/src/CMSIS/system_stm32f10x.c ****    
 844:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:../../source/src/CMSIS/system_stm32f10x.c **** #else    
 849:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:../../source/src/CMSIS/system_stm32f10x.c **** 
 854:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 855:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:../../source/src/CMSIS/system_stm32f10x.c **** 
 857:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:../../source/src/CMSIS/system_stm32f10x.c ****     {
 860:../../source/src/CMSIS/system_stm32f10x.c ****     }
 861:../../source/src/CMSIS/system_stm32f10x.c **** 
 862:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:../../source/src/CMSIS/system_stm32f10x.c **** 
 866:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:../../source/src/CMSIS/system_stm32f10x.c ****     {
 869:../../source/src/CMSIS/system_stm32f10x.c ****     }
 870:../../source/src/CMSIS/system_stm32f10x.c ****   }
 871:../../source/src/CMSIS/system_stm32f10x.c ****   else
 872:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 875:../../source/src/CMSIS/system_stm32f10x.c **** }
 876:../../source/src/CMSIS/system_stm32f10x.c **** 
 877:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:../../source/src/CMSIS/system_stm32f10x.c **** /**
 879:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 22


 882:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 883:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 884:../../source/src/CMSIS/system_stm32f10x.c ****   */
 885:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:../../source/src/CMSIS/system_stm32f10x.c **** {
 887:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:../../source/src/CMSIS/system_stm32f10x.c ****   
 889:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 891:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:../../source/src/CMSIS/system_stm32f10x.c ****  
 893:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:../../source/src/CMSIS/system_stm32f10x.c ****   do
 895:../../source/src/CMSIS/system_stm32f10x.c ****   {
 896:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 898:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:../../source/src/CMSIS/system_stm32f10x.c **** 
 900:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:../../source/src/CMSIS/system_stm32f10x.c ****   {
 902:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:../../source/src/CMSIS/system_stm32f10x.c ****   }
 904:../../source/src/CMSIS/system_stm32f10x.c ****   else
 905:../../source/src/CMSIS/system_stm32f10x.c ****   {
 906:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:../../source/src/CMSIS/system_stm32f10x.c ****   }  
 908:../../source/src/CMSIS/system_stm32f10x.c **** 
 909:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:../../source/src/CMSIS/system_stm32f10x.c ****   {
 911:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:../../source/src/CMSIS/system_stm32f10x.c **** 
 914:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:../../source/src/CMSIS/system_stm32f10x.c ****  
 918:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:../../source/src/CMSIS/system_stm32f10x.c ****       
 921:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:../../source/src/CMSIS/system_stm32f10x.c ****     
 924:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:../../source/src/CMSIS/system_stm32f10x.c **** 
 927:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:../../source/src/CMSIS/system_stm32f10x.c ****         
 932:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:../../source/src/CMSIS/system_stm32f10x.c ****   
 937:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 938:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 23


 939:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:../../source/src/CMSIS/system_stm32f10x.c ****     {
 942:../../source/src/CMSIS/system_stm32f10x.c ****     }
 943:../../source/src/CMSIS/system_stm32f10x.c ****     
 944:../../source/src/CMSIS/system_stm32f10x.c ****    
 945:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:../../source/src/CMSIS/system_stm32f10x.c **** #else     
 950:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:../../source/src/CMSIS/system_stm32f10x.c **** 
 954:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:../../source/src/CMSIS/system_stm32f10x.c **** 
 956:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 957:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:../../source/src/CMSIS/system_stm32f10x.c **** 
 959:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:../../source/src/CMSIS/system_stm32f10x.c ****     {
 962:../../source/src/CMSIS/system_stm32f10x.c ****     }
 963:../../source/src/CMSIS/system_stm32f10x.c **** 
 964:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:../../source/src/CMSIS/system_stm32f10x.c **** 
 968:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:../../source/src/CMSIS/system_stm32f10x.c ****     {
 971:../../source/src/CMSIS/system_stm32f10x.c ****     }
 972:../../source/src/CMSIS/system_stm32f10x.c ****   }
 973:../../source/src/CMSIS/system_stm32f10x.c ****   else
 974:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:../../source/src/CMSIS/system_stm32f10x.c ****   } 
 977:../../source/src/CMSIS/system_stm32f10x.c **** }
 978:../../source/src/CMSIS/system_stm32f10x.c **** 
 979:../../source/src/CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:../../source/src/CMSIS/system_stm32f10x.c **** /**
 981:../../source/src/CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:../../source/src/CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:../../source/src/CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:../../source/src/CMSIS/system_stm32f10x.c ****   * @param  None
 985:../../source/src/CMSIS/system_stm32f10x.c ****   * @retval None
 986:../../source/src/CMSIS/system_stm32f10x.c ****   */
 987:../../source/src/CMSIS/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:../../source/src/CMSIS/system_stm32f10x.c **** {
 314              		.loc 1 988 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 014c 80B4     		push	{r7}
 320              	.LCFI10:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 24


 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 014e 83B0     		sub	sp, sp, #12
 324              	.LCFI11:
 325              		.cfi_def_cfa_offset 16
 326 0150 00AF     		add	r7, sp, #0
 327              	.LCFI12:
 328              		.cfi_def_cfa_register 7
 989:../../source/src/CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 329              		.loc 1 989 0
 330 0152 0023     		movs	r3, #0
 331 0154 7B60     		str	r3, [r7, #4]
 332 0156 0023     		movs	r3, #0
 333 0158 3B60     		str	r3, [r7]
 990:../../source/src/CMSIS/system_stm32f10x.c ****   
 991:../../source/src/CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:../../source/src/CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 993:../../source/src/CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 334              		.loc 1 993 0
 335 015a 3A4B     		ldr	r3, .L26
 336 015c 1B68     		ldr	r3, [r3]
 337 015e 394A     		ldr	r2, .L26
 338 0160 43F48033 		orr	r3, r3, #65536
 339 0164 1360     		str	r3, [r2]
 340              	.L19:
 994:../../source/src/CMSIS/system_stm32f10x.c ****  
 995:../../source/src/CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:../../source/src/CMSIS/system_stm32f10x.c ****   do
 997:../../source/src/CMSIS/system_stm32f10x.c ****   {
 998:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 341              		.loc 1 998 0 discriminator 2
 342 0166 374B     		ldr	r3, .L26
 343 0168 1B68     		ldr	r3, [r3]
 344 016a 03F40033 		and	r3, r3, #131072
 345 016e 3B60     		str	r3, [r7]
 999:../../source/src/CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 346              		.loc 1 999 0 discriminator 2
 347 0170 7B68     		ldr	r3, [r7, #4]
 348 0172 0133     		adds	r3, r3, #1
 349 0174 7B60     		str	r3, [r7, #4]
1000:../../source/src/CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 350              		.loc 1 1000 0 discriminator 2
 351 0176 3B68     		ldr	r3, [r7]
 352 0178 002B     		cmp	r3, #0
 353 017a 03D1     		bne	.L18
 354              		.loc 1 1000 0 is_stmt 0 discriminator 1
 355 017c 7B68     		ldr	r3, [r7, #4]
 356 017e B3F5A06F 		cmp	r3, #1280
 357 0182 F0D1     		bne	.L19
 358              	.L18:
1001:../../source/src/CMSIS/system_stm32f10x.c **** 
1002:../../source/src/CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 359              		.loc 1 1002 0 is_stmt 1
 360 0184 2F4B     		ldr	r3, .L26
 361 0186 1B68     		ldr	r3, [r3]
 362 0188 03F40033 		and	r3, r3, #131072
 363 018c 002B     		cmp	r3, #0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 25


 364 018e 02D0     		beq	.L20
1003:../../source/src/CMSIS/system_stm32f10x.c ****   {
1004:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 365              		.loc 1 1004 0
 366 0190 0123     		movs	r3, #1
 367 0192 3B60     		str	r3, [r7]
 368 0194 01E0     		b	.L21
 369              	.L20:
1005:../../source/src/CMSIS/system_stm32f10x.c ****   }
1006:../../source/src/CMSIS/system_stm32f10x.c ****   else
1007:../../source/src/CMSIS/system_stm32f10x.c ****   {
1008:../../source/src/CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 370              		.loc 1 1008 0
 371 0196 0023     		movs	r3, #0
 372 0198 3B60     		str	r3, [r7]
 373              	.L21:
1009:../../source/src/CMSIS/system_stm32f10x.c ****   }  
1010:../../source/src/CMSIS/system_stm32f10x.c **** 
1011:../../source/src/CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 374              		.loc 1 1011 0
 375 019a 3B68     		ldr	r3, [r7]
 376 019c 012B     		cmp	r3, #1
 377 019e 4BD1     		bne	.L25
1012:../../source/src/CMSIS/system_stm32f10x.c ****   {
1013:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 378              		.loc 1 1014 0
 379 01a0 294B     		ldr	r3, .L26+4
 380 01a2 1B68     		ldr	r3, [r3]
 381 01a4 284A     		ldr	r2, .L26+4
 382 01a6 43F01003 		orr	r3, r3, #16
 383 01aa 1360     		str	r3, [r2]
1015:../../source/src/CMSIS/system_stm32f10x.c **** 
1016:../../source/src/CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 384              		.loc 1 1017 0
 385 01ac 264B     		ldr	r3, .L26+4
 386 01ae 1B68     		ldr	r3, [r3]
 387 01b0 254A     		ldr	r2, .L26+4
 388 01b2 23F00303 		bic	r3, r3, #3
 389 01b6 1360     		str	r3, [r2]
1018:../../source/src/CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 390              		.loc 1 1018 0
 391 01b8 234B     		ldr	r3, .L26+4
 392 01ba 1B68     		ldr	r3, [r3]
 393 01bc 224A     		ldr	r2, .L26+4
 394 01be 43F00203 		orr	r3, r3, #2
 395 01c2 1360     		str	r3, [r2]
1019:../../source/src/CMSIS/system_stm32f10x.c **** 
1020:../../source/src/CMSIS/system_stm32f10x.c ****  
1021:../../source/src/CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 396              		.loc 1 1022 0
 397 01c4 1F4B     		ldr	r3, .L26
 398 01c6 1F4A     		ldr	r2, .L26
 399 01c8 5B68     		ldr	r3, [r3, #4]
 400 01ca 5360     		str	r3, [r2, #4]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 26


1023:../../source/src/CMSIS/system_stm32f10x.c ****       
1024:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 401              		.loc 1 1025 0
 402 01cc 1D4B     		ldr	r3, .L26
 403 01ce 1D4A     		ldr	r2, .L26
 404 01d0 5B68     		ldr	r3, [r3, #4]
 405 01d2 5360     		str	r3, [r2, #4]
1026:../../source/src/CMSIS/system_stm32f10x.c ****     
1027:../../source/src/CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK/2 */
1028:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 406              		.loc 1 1028 0
 407 01d4 1B4B     		ldr	r3, .L26
 408 01d6 5B68     		ldr	r3, [r3, #4]
 409 01d8 1A4A     		ldr	r2, .L26
 410 01da 43F48063 		orr	r3, r3, #1024
 411 01de 5360     		str	r3, [r2, #4]
1029:../../source/src/CMSIS/system_stm32f10x.c **** 
1030:../../source/src/CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:../../source/src/CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:../../source/src/CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:../../source/src/CMSIS/system_stm32f10x.c ****         
1035:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:../../source/src/CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:../../source/src/CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:../../source/src/CMSIS/system_stm32f10x.c ****   
1040:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
1041:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:../../source/src/CMSIS/system_stm32f10x.c ****     {
1045:../../source/src/CMSIS/system_stm32f10x.c ****     }
1046:../../source/src/CMSIS/system_stm32f10x.c ****     
1047:../../source/src/CMSIS/system_stm32f10x.c ****    
1048:../../source/src/CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:../../source/src/CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:../../source/src/CMSIS/system_stm32f10x.c **** #else    
1053:../../source/src/CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 412              		.loc 1 1054 0
 413 01e0 184B     		ldr	r3, .L26
 414 01e2 5B68     		ldr	r3, [r3, #4]
 415 01e4 174A     		ldr	r2, .L26
 416 01e6 23F47C13 		bic	r3, r3, #4128768
 417 01ea 5360     		str	r3, [r2, #4]
1055:../../source/src/CMSIS/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 418              		.loc 1 1056 0
 419 01ec 154B     		ldr	r3, .L26
 420 01ee 5B68     		ldr	r3, [r3, #4]
 421 01f0 144A     		ldr	r2, .L26
 422 01f2 43F4E813 		orr	r3, r3, #1900544
 423 01f6 5360     		str	r3, [r2, #4]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 27


1057:../../source/src/CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:../../source/src/CMSIS/system_stm32f10x.c **** 
1059:../../source/src/CMSIS/system_stm32f10x.c ****     /* Enable PLL */
1060:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 424              		.loc 1 1060 0
 425 01f8 124B     		ldr	r3, .L26
 426 01fa 1B68     		ldr	r3, [r3]
 427 01fc 114A     		ldr	r2, .L26
 428 01fe 43F08073 		orr	r3, r3, #16777216
 429 0202 1360     		str	r3, [r2]
1061:../../source/src/CMSIS/system_stm32f10x.c **** 
1062:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:../../source/src/CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 430              		.loc 1 1063 0
 431 0204 00BF     		nop
 432              	.L23:
 433              		.loc 1 1063 0 is_stmt 0 discriminator 1
 434 0206 0F4B     		ldr	r3, .L26
 435 0208 1B68     		ldr	r3, [r3]
 436 020a 03F00073 		and	r3, r3, #33554432
 437 020e 002B     		cmp	r3, #0
 438 0210 F9D0     		beq	.L23
1064:../../source/src/CMSIS/system_stm32f10x.c ****     {
1065:../../source/src/CMSIS/system_stm32f10x.c ****     }
1066:../../source/src/CMSIS/system_stm32f10x.c ****     
1067:../../source/src/CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 439              		.loc 1 1068 0 is_stmt 1
 440 0212 0C4B     		ldr	r3, .L26
 441 0214 5B68     		ldr	r3, [r3, #4]
 442 0216 0B4A     		ldr	r2, .L26
 443 0218 23F00303 		bic	r3, r3, #3
 444 021c 5360     		str	r3, [r2, #4]
1069:../../source/src/CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 445              		.loc 1 1069 0
 446 021e 094B     		ldr	r3, .L26
 447 0220 5B68     		ldr	r3, [r3, #4]
 448 0222 084A     		ldr	r2, .L26
 449 0224 43F00203 		orr	r3, r3, #2
 450 0228 5360     		str	r3, [r2, #4]
1070:../../source/src/CMSIS/system_stm32f10x.c **** 
1071:../../source/src/CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:../../source/src/CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 451              		.loc 1 1072 0
 452 022a 00BF     		nop
 453              	.L24:
 454              		.loc 1 1072 0 is_stmt 0 discriminator 1
 455 022c 054B     		ldr	r3, .L26
 456 022e 5B68     		ldr	r3, [r3, #4]
 457 0230 03F00C03 		and	r3, r3, #12
 458 0234 082B     		cmp	r3, #8
 459 0236 F9D1     		bne	.L24
 460              	.L25:
1073:../../source/src/CMSIS/system_stm32f10x.c ****     {
1074:../../source/src/CMSIS/system_stm32f10x.c ****     }
1075:../../source/src/CMSIS/system_stm32f10x.c ****   }
1076:../../source/src/CMSIS/system_stm32f10x.c ****   else
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 28


1077:../../source/src/CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:../../source/src/CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:../../source/src/CMSIS/system_stm32f10x.c ****   }
1080:../../source/src/CMSIS/system_stm32f10x.c **** }
 461              		.loc 1 1080 0 is_stmt 1
 462 0238 00BF     		nop
 463 023a 0C37     		adds	r7, r7, #12
 464              	.LCFI13:
 465              		.cfi_def_cfa_offset 4
 466 023c BD46     		mov	sp, r7
 467              	.LCFI14:
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 023e 80BC     		pop	{r7}
 471              	.LCFI15:
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0240 7047     		bx	lr
 475              	.L27:
 476 0242 00BF     		.align	2
 477              	.L26:
 478 0244 00100240 		.word	1073876992
 479 0248 00200240 		.word	1073881088
 480              		.cfi_endproc
 481              	.LFE32:
 482              		.size	SetSysClockTo72, .-SetSysClockTo72
 483              	.Letext0:
 484              		.file 2 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\machine\\_default_types.h"
 485              		.file 3 "f:\\arm\\gcc2018\\arm-none-eabi\\include\\sys\\_stdint.h"
 486              		.file 4 "../../source/include/os_cpu/core_cm3.h"
 487              		.file 5 "../../source/include/os_cpu/system_stm32f10x.h"
 488              		.file 6 "../../source/include/os_cpu/stm32f10x.h"
 489              		.section	.debug_info,"",%progbits
 490              	.Ldebug_info0:
 491 0000 AB040000 		.4byte	0x4ab
 492 0004 0200     		.2byte	0x2
 493 0006 00000000 		.4byte	.Ldebug_abbrev0
 494 000a 04       		.byte	0x4
 495 000b 01       		.uleb128 0x1
 496 000c 48010000 		.4byte	.LASF50
 497 0010 0C       		.byte	0xc
 498 0011 3A000000 		.4byte	.LASF51
 499 0015 9B000000 		.4byte	.LASF52
 500 0019 00000000 		.4byte	.Ltext0
 501 001d 4C020000 		.4byte	.Letext0
 502 0021 00000000 		.4byte	.Ldebug_line0
 503 0025 02       		.uleb128 0x2
 504 0026 01       		.byte	0x1
 505 0027 06       		.byte	0x6
 506 0028 05020000 		.4byte	.LASF0
 507 002c 03       		.uleb128 0x3
 508 002d FD000000 		.4byte	.LASF3
 509 0031 02       		.byte	0x2
 510 0032 2B       		.byte	0x2b
 511 0033 37000000 		.4byte	0x37
 512 0037 02       		.uleb128 0x2
 513 0038 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 29


 514 0039 08       		.byte	0x8
 515 003a 2B010000 		.4byte	.LASF1
 516 003e 02       		.uleb128 0x2
 517 003f 02       		.byte	0x2
 518 0040 05       		.byte	0x5
 519 0041 84000000 		.4byte	.LASF2
 520 0045 03       		.uleb128 0x3
 521 0046 25000000 		.4byte	.LASF4
 522 004a 02       		.byte	0x2
 523 004b 39       		.byte	0x39
 524 004c 50000000 		.4byte	0x50
 525 0050 02       		.uleb128 0x2
 526 0051 02       		.byte	0x2
 527 0052 07       		.byte	0x7
 528 0053 5E020000 		.4byte	.LASF5
 529 0057 02       		.uleb128 0x2
 530 0058 04       		.byte	0x4
 531 0059 05       		.byte	0x5
 532 005a DC000000 		.4byte	.LASF6
 533 005e 03       		.uleb128 0x3
 534 005f 1A000000 		.4byte	.LASF7
 535 0063 02       		.byte	0x2
 536 0064 4F       		.byte	0x4f
 537 0065 69000000 		.4byte	0x69
 538 0069 02       		.uleb128 0x2
 539 006a 04       		.byte	0x4
 540 006b 07       		.byte	0x7
 541 006c CA020000 		.4byte	.LASF8
 542 0070 02       		.uleb128 0x2
 543 0071 08       		.byte	0x8
 544 0072 05       		.byte	0x5
 545 0073 C9000000 		.4byte	.LASF9
 546 0077 02       		.uleb128 0x2
 547 0078 08       		.byte	0x8
 548 0079 07       		.byte	0x7
 549 007a 11020000 		.4byte	.LASF10
 550 007e 04       		.uleb128 0x4
 551 007f 04       		.byte	0x4
 552 0080 05       		.byte	0x5
 553 0081 696E7400 		.ascii	"int\000"
 554 0085 05       		.uleb128 0x5
 555 0086 7E000000 		.4byte	0x7e
 556 008a 02       		.uleb128 0x2
 557 008b 04       		.byte	0x4
 558 008c 07       		.byte	0x7
 559 008d 31020000 		.4byte	.LASF11
 560 0091 03       		.uleb128 0x3
 561 0092 74000000 		.4byte	.LASF12
 562 0096 03       		.byte	0x3
 563 0097 18       		.byte	0x18
 564 0098 2C000000 		.4byte	0x2c
 565 009c 05       		.uleb128 0x5
 566 009d 91000000 		.4byte	0x91
 567 00a1 06       		.uleb128 0x6
 568 00a2 91000000 		.4byte	0x91
 569 00a6 05       		.uleb128 0x5
 570 00a7 A1000000 		.4byte	0xa1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 30


 571 00ab 03       		.uleb128 0x3
 572 00ac 3E020000 		.4byte	.LASF13
 573 00b0 03       		.byte	0x3
 574 00b1 24       		.byte	0x24
 575 00b2 45000000 		.4byte	0x45
 576 00b6 03       		.uleb128 0x3
 577 00b7 28020000 		.4byte	.LASF14
 578 00bb 03       		.byte	0x3
 579 00bc 30       		.byte	0x30
 580 00bd 5E000000 		.4byte	0x5e
 581 00c1 05       		.uleb128 0x5
 582 00c2 B6000000 		.4byte	0xb6
 583 00c6 06       		.uleb128 0x6
 584 00c7 C1000000 		.4byte	0xc1
 585 00cb 07       		.uleb128 0x7
 586 00cc 74       		.byte	0x74
 587 00cd 04       		.byte	0x4
 588 00ce 9B       		.byte	0x9b
 589 00cf DE010000 		.4byte	0x1de
 590 00d3 08       		.uleb128 0x8
 591 00d4 64000000 		.4byte	.LASF15
 592 00d8 04       		.byte	0x4
 593 00d9 9D       		.byte	0x9d
 594 00da C6000000 		.4byte	0xc6
 595 00de 02       		.byte	0x2
 596 00df 23       		.byte	0x23
 597 00e0 00       		.uleb128 0
 598 00e1 08       		.uleb128 0x8
 599 00e2 8E000000 		.4byte	.LASF16
 600 00e6 04       		.byte	0x4
 601 00e7 9E       		.byte	0x9e
 602 00e8 C1000000 		.4byte	0xc1
 603 00ec 02       		.byte	0x2
 604 00ed 23       		.byte	0x23
 605 00ee 04       		.uleb128 0x4
 606 00ef 08       		.uleb128 0x8
 607 00f0 71020000 		.4byte	.LASF17
 608 00f4 04       		.byte	0x4
 609 00f5 9F       		.byte	0x9f
 610 00f6 C1000000 		.4byte	0xc1
 611 00fa 02       		.byte	0x2
 612 00fb 23       		.byte	0x23
 613 00fc 08       		.uleb128 0x8
 614 00fd 08       		.uleb128 0x8
 615 00fe 39010000 		.4byte	.LASF18
 616 0102 04       		.byte	0x4
 617 0103 A0       		.byte	0xa0
 618 0104 C1000000 		.4byte	0xc1
 619 0108 02       		.byte	0x2
 620 0109 23       		.byte	0x23
 621 010a 0C       		.uleb128 0xc
 622 010b 09       		.uleb128 0x9
 623 010c 53435200 		.ascii	"SCR\000"
 624 0110 04       		.byte	0x4
 625 0111 A1       		.byte	0xa1
 626 0112 C1000000 		.4byte	0xc1
 627 0116 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 31


 628 0117 23       		.byte	0x23
 629 0118 10       		.uleb128 0x10
 630 0119 09       		.uleb128 0x9
 631 011a 43435200 		.ascii	"CCR\000"
 632 011e 04       		.byte	0x4
 633 011f A2       		.byte	0xa2
 634 0120 C1000000 		.4byte	0xc1
 635 0124 02       		.byte	0x2
 636 0125 23       		.byte	0x23
 637 0126 14       		.uleb128 0x14
 638 0127 09       		.uleb128 0x9
 639 0128 53485000 		.ascii	"SHP\000"
 640 012c 04       		.byte	0x4
 641 012d A3       		.byte	0xa3
 642 012e EE010000 		.4byte	0x1ee
 643 0132 02       		.byte	0x2
 644 0133 23       		.byte	0x23
 645 0134 18       		.uleb128 0x18
 646 0135 08       		.uleb128 0x8
 647 0136 47020000 		.4byte	.LASF19
 648 013a 04       		.byte	0x4
 649 013b A4       		.byte	0xa4
 650 013c C1000000 		.4byte	0xc1
 651 0140 02       		.byte	0x2
 652 0141 23       		.byte	0x23
 653 0142 24       		.uleb128 0x24
 654 0143 08       		.uleb128 0x8
 655 0144 0C010000 		.4byte	.LASF20
 656 0148 04       		.byte	0x4
 657 0149 A5       		.byte	0xa5
 658 014a C1000000 		.4byte	0xc1
 659 014e 02       		.byte	0x2
 660 014f 23       		.byte	0x23
 661 0150 28       		.uleb128 0x28
 662 0151 08       		.uleb128 0x8
 663 0152 A6020000 		.4byte	.LASF21
 664 0156 04       		.byte	0x4
 665 0157 A6       		.byte	0xa6
 666 0158 C1000000 		.4byte	0xc1
 667 015c 02       		.byte	0x2
 668 015d 23       		.byte	0x23
 669 015e 2C       		.uleb128 0x2c
 670 015f 08       		.uleb128 0x8
 671 0160 91020000 		.4byte	.LASF22
 672 0164 04       		.byte	0x4
 673 0165 A7       		.byte	0xa7
 674 0166 C1000000 		.4byte	0xc1
 675 016a 02       		.byte	0x2
 676 016b 23       		.byte	0x23
 677 016c 30       		.uleb128 0x30
 678 016d 08       		.uleb128 0x8
 679 016e 4D020000 		.4byte	.LASF23
 680 0172 04       		.byte	0x4
 681 0173 A8       		.byte	0xa8
 682 0174 C1000000 		.4byte	0xc1
 683 0178 02       		.byte	0x2
 684 0179 23       		.byte	0x23
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 32


 685 017a 34       		.uleb128 0x34
 686 017b 08       		.uleb128 0x8
 687 017c D7000000 		.4byte	.LASF24
 688 0180 04       		.byte	0x4
 689 0181 A9       		.byte	0xa9
 690 0182 C1000000 		.4byte	0xc1
 691 0186 02       		.byte	0x2
 692 0187 23       		.byte	0x23
 693 0188 38       		.uleb128 0x38
 694 0189 08       		.uleb128 0x8
 695 018a E2020000 		.4byte	.LASF25
 696 018e 04       		.byte	0x4
 697 018f AA       		.byte	0xaa
 698 0190 C1000000 		.4byte	0xc1
 699 0194 02       		.byte	0x2
 700 0195 23       		.byte	0x23
 701 0196 3C       		.uleb128 0x3c
 702 0197 09       		.uleb128 0x9
 703 0198 50465200 		.ascii	"PFR\000"
 704 019c 04       		.byte	0x4
 705 019d AB       		.byte	0xab
 706 019e 08020000 		.4byte	0x208
 707 01a2 02       		.byte	0x2
 708 01a3 23       		.byte	0x23
 709 01a4 40       		.uleb128 0x40
 710 01a5 09       		.uleb128 0x9
 711 01a6 44465200 		.ascii	"DFR\000"
 712 01aa 04       		.byte	0x4
 713 01ab AC       		.byte	0xac
 714 01ac C6000000 		.4byte	0xc6
 715 01b0 02       		.byte	0x2
 716 01b1 23       		.byte	0x23
 717 01b2 48       		.uleb128 0x48
 718 01b3 09       		.uleb128 0x9
 719 01b4 41445200 		.ascii	"ADR\000"
 720 01b8 04       		.byte	0x4
 721 01b9 AD       		.byte	0xad
 722 01ba C6000000 		.4byte	0xc6
 723 01be 02       		.byte	0x2
 724 01bf 23       		.byte	0x23
 725 01c0 4C       		.uleb128 0x4c
 726 01c1 08       		.uleb128 0x8
 727 01c2 AB020000 		.4byte	.LASF26
 728 01c6 04       		.byte	0x4
 729 01c7 AE       		.byte	0xae
 730 01c8 22020000 		.4byte	0x222
 731 01cc 02       		.byte	0x2
 732 01cd 23       		.byte	0x23
 733 01ce 50       		.uleb128 0x50
 734 01cf 08       		.uleb128 0x8
 735 01d0 8C020000 		.4byte	.LASF27
 736 01d4 04       		.byte	0x4
 737 01d5 AF       		.byte	0xaf
 738 01d6 3C020000 		.4byte	0x23c
 739 01da 02       		.byte	0x2
 740 01db 23       		.byte	0x23
 741 01dc 60       		.uleb128 0x60
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 33


 742 01dd 00       		.byte	0
 743 01de 0A       		.uleb128 0xa
 744 01df 9C000000 		.4byte	0x9c
 745 01e3 EE010000 		.4byte	0x1ee
 746 01e7 0B       		.uleb128 0xb
 747 01e8 8A000000 		.4byte	0x8a
 748 01ec 0B       		.byte	0xb
 749 01ed 00       		.byte	0
 750 01ee 05       		.uleb128 0x5
 751 01ef DE010000 		.4byte	0x1de
 752 01f3 0A       		.uleb128 0xa
 753 01f4 C6000000 		.4byte	0xc6
 754 01f8 03020000 		.4byte	0x203
 755 01fc 0B       		.uleb128 0xb
 756 01fd 8A000000 		.4byte	0x8a
 757 0201 01       		.byte	0x1
 758 0202 00       		.byte	0
 759 0203 06       		.uleb128 0x6
 760 0204 F3010000 		.4byte	0x1f3
 761 0208 05       		.uleb128 0x5
 762 0209 03020000 		.4byte	0x203
 763 020d 0A       		.uleb128 0xa
 764 020e C6000000 		.4byte	0xc6
 765 0212 1D020000 		.4byte	0x21d
 766 0216 0B       		.uleb128 0xb
 767 0217 8A000000 		.4byte	0x8a
 768 021b 03       		.byte	0x3
 769 021c 00       		.byte	0
 770 021d 06       		.uleb128 0x6
 771 021e 0D020000 		.4byte	0x20d
 772 0222 05       		.uleb128 0x5
 773 0223 1D020000 		.4byte	0x21d
 774 0227 0A       		.uleb128 0xa
 775 0228 C6000000 		.4byte	0xc6
 776 022c 37020000 		.4byte	0x237
 777 0230 0B       		.uleb128 0xb
 778 0231 8A000000 		.4byte	0x8a
 779 0235 04       		.byte	0x4
 780 0236 00       		.byte	0
 781 0237 06       		.uleb128 0x6
 782 0238 27020000 		.4byte	0x227
 783 023c 05       		.uleb128 0x5
 784 023d 37020000 		.4byte	0x237
 785 0241 03       		.uleb128 0x3
 786 0242 3F010000 		.4byte	.LASF28
 787 0246 04       		.byte	0x4
 788 0247 B0       		.byte	0xb0
 789 0248 CB000000 		.4byte	0xcb
 790 024c 0C       		.uleb128 0xc
 791 024d FE020000 		.4byte	.LASF29
 792 0251 04       		.byte	0x4
 793 0252 CE06     		.2byte	0x6ce
 794 0254 85000000 		.4byte	0x85
 795 0258 01       		.byte	0x1
 796 0259 01       		.byte	0x1
 797 025a 0D       		.uleb128 0xd
 798 025b 96020000 		.4byte	.LASF30
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 34


 799 025f 05       		.byte	0x5
 800 0260 35       		.byte	0x35
 801 0261 B6000000 		.4byte	0xb6
 802 0265 01       		.byte	0x1
 803 0266 01       		.byte	0x1
 804 0267 0E       		.uleb128 0xe
 805 0268 07       		.byte	0x7
 806 0269 01       		.byte	0x1
 807 026a 37000000 		.4byte	0x37
 808 026e 06       		.byte	0x6
 809 026f 0702     		.2byte	0x207
 810 0271 82020000 		.4byte	0x282
 811 0275 0F       		.uleb128 0xf
 812 0276 DC020000 		.4byte	.LASF31
 813 027a 00       		.byte	0
 814 027b 10       		.uleb128 0x10
 815 027c 53455400 		.ascii	"SET\000"
 816 0280 01       		.byte	0x1
 817 0281 00       		.byte	0
 818 0282 11       		.uleb128 0x11
 819 0283 24       		.byte	0x24
 820 0284 06       		.byte	0x6
 821 0285 8503     		.2byte	0x385
 822 0287 10030000 		.4byte	0x310
 823 028b 12       		.uleb128 0x12
 824 028c 41435200 		.ascii	"ACR\000"
 825 0290 06       		.byte	0x6
 826 0291 8703     		.2byte	0x387
 827 0293 C1000000 		.4byte	0xc1
 828 0297 02       		.byte	0x2
 829 0298 23       		.byte	0x23
 830 0299 00       		.uleb128 0
 831 029a 13       		.uleb128 0x13
 832 029b 6A000000 		.4byte	.LASF32
 833 029f 06       		.byte	0x6
 834 02a0 8803     		.2byte	0x388
 835 02a2 C1000000 		.4byte	0xc1
 836 02a6 02       		.byte	0x2
 837 02a7 23       		.byte	0x23
 838 02a8 04       		.uleb128 0x4
 839 02a9 13       		.uleb128 0x13
 840 02aa 93000000 		.4byte	.LASF33
 841 02ae 06       		.byte	0x6
 842 02af 8903     		.2byte	0x389
 843 02b1 C1000000 		.4byte	0xc1
 844 02b5 02       		.byte	0x2
 845 02b6 23       		.byte	0x23
 846 02b7 08       		.uleb128 0x8
 847 02b8 12       		.uleb128 0x12
 848 02b9 535200   		.ascii	"SR\000"
 849 02bc 06       		.byte	0x6
 850 02bd 8A03     		.2byte	0x38a
 851 02bf C1000000 		.4byte	0xc1
 852 02c3 02       		.byte	0x2
 853 02c4 23       		.byte	0x23
 854 02c5 0C       		.uleb128 0xc
 855 02c6 12       		.uleb128 0x12
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 35


 856 02c7 435200   		.ascii	"CR\000"
 857 02ca 06       		.byte	0x6
 858 02cb 8B03     		.2byte	0x38b
 859 02cd C1000000 		.4byte	0xc1
 860 02d1 02       		.byte	0x2
 861 02d2 23       		.byte	0x23
 862 02d3 10       		.uleb128 0x10
 863 02d4 12       		.uleb128 0x12
 864 02d5 415200   		.ascii	"AR\000"
 865 02d8 06       		.byte	0x6
 866 02d9 8C03     		.2byte	0x38c
 867 02db C1000000 		.4byte	0xc1
 868 02df 02       		.byte	0x2
 869 02e0 23       		.byte	0x23
 870 02e1 14       		.uleb128 0x14
 871 02e2 13       		.uleb128 0x13
 872 02e3 E7020000 		.4byte	.LASF34
 873 02e7 06       		.byte	0x6
 874 02e8 8D03     		.2byte	0x38d
 875 02ea C1000000 		.4byte	0xc1
 876 02ee 02       		.byte	0x2
 877 02ef 23       		.byte	0x23
 878 02f0 18       		.uleb128 0x18
 879 02f1 12       		.uleb128 0x12
 880 02f2 4F425200 		.ascii	"OBR\000"
 881 02f6 06       		.byte	0x6
 882 02f7 8E03     		.2byte	0x38e
 883 02f9 C1000000 		.4byte	0xc1
 884 02fd 02       		.byte	0x2
 885 02fe 23       		.byte	0x23
 886 02ff 1C       		.uleb128 0x1c
 887 0300 13       		.uleb128 0x13
 888 0301 07010000 		.4byte	.LASF35
 889 0305 06       		.byte	0x6
 890 0306 8F03     		.2byte	0x38f
 891 0308 C1000000 		.4byte	0xc1
 892 030c 02       		.byte	0x2
 893 030d 23       		.byte	0x23
 894 030e 20       		.uleb128 0x20
 895 030f 00       		.byte	0
 896 0310 14       		.uleb128 0x14
 897 0311 F0020000 		.4byte	.LASF36
 898 0315 06       		.byte	0x6
 899 0316 9803     		.2byte	0x398
 900 0318 82020000 		.4byte	0x282
 901 031c 11       		.uleb128 0x11
 902 031d 28       		.byte	0x28
 903 031e 06       		.byte	0x6
 904 031f 3404     		.2byte	0x434
 905 0321 BB030000 		.4byte	0x3bb
 906 0325 12       		.uleb128 0x12
 907 0326 435200   		.ascii	"CR\000"
 908 0329 06       		.byte	0x6
 909 032a 3604     		.2byte	0x436
 910 032c C1000000 		.4byte	0xc1
 911 0330 02       		.byte	0x2
 912 0331 23       		.byte	0x23
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 36


 913 0332 00       		.uleb128 0
 914 0333 13       		.uleb128 0x13
 915 0334 6F000000 		.4byte	.LASF37
 916 0338 06       		.byte	0x6
 917 0339 3704     		.2byte	0x437
 918 033b C1000000 		.4byte	0xc1
 919 033f 02       		.byte	0x2
 920 0340 23       		.byte	0x23
 921 0341 04       		.uleb128 0x4
 922 0342 12       		.uleb128 0x12
 923 0343 43495200 		.ascii	"CIR\000"
 924 0347 06       		.byte	0x6
 925 0348 3804     		.2byte	0x438
 926 034a C1000000 		.4byte	0xc1
 927 034e 02       		.byte	0x2
 928 034f 23       		.byte	0x23
 929 0350 08       		.uleb128 0x8
 930 0351 13       		.uleb128 0x13
 931 0352 F4000000 		.4byte	.LASF38
 932 0356 06       		.byte	0x6
 933 0357 3904     		.2byte	0x439
 934 0359 C1000000 		.4byte	0xc1
 935 035d 02       		.byte	0x2
 936 035e 23       		.byte	0x23
 937 035f 0C       		.uleb128 0xc
 938 0360 13       		.uleb128 0x13
 939 0361 0C000000 		.4byte	.LASF39
 940 0365 06       		.byte	0x6
 941 0366 3A04     		.2byte	0x43a
 942 0368 C1000000 		.4byte	0xc1
 943 036c 02       		.byte	0x2
 944 036d 23       		.byte	0x23
 945 036e 10       		.uleb128 0x10
 946 036f 13       		.uleb128 0x13
 947 0370 ED000000 		.4byte	.LASF40
 948 0374 06       		.byte	0x6
 949 0375 3B04     		.2byte	0x43b
 950 0377 C1000000 		.4byte	0xc1
 951 037b 02       		.byte	0x2
 952 037c 23       		.byte	0x23
 953 037d 14       		.uleb128 0x14
 954 037e 13       		.uleb128 0x13
 955 037f EE010000 		.4byte	.LASF41
 956 0383 06       		.byte	0x6
 957 0384 3C04     		.2byte	0x43c
 958 0386 C1000000 		.4byte	0xc1
 959 038a 02       		.byte	0x2
 960 038b 23       		.byte	0x23
 961 038c 18       		.uleb128 0x18
 962 038d 13       		.uleb128 0x13
 963 038e 7C000000 		.4byte	.LASF42
 964 0392 06       		.byte	0x6
 965 0393 3D04     		.2byte	0x43d
 966 0395 C1000000 		.4byte	0xc1
 967 0399 02       		.byte	0x2
 968 039a 23       		.byte	0x23
 969 039b 1C       		.uleb128 0x1c
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 37


 970 039c 13       		.uleb128 0x13
 971 039d 15000000 		.4byte	.LASF43
 972 03a1 06       		.byte	0x6
 973 03a2 3E04     		.2byte	0x43e
 974 03a4 C1000000 		.4byte	0xc1
 975 03a8 02       		.byte	0x2
 976 03a9 23       		.byte	0x23
 977 03aa 20       		.uleb128 0x20
 978 03ab 12       		.uleb128 0x12
 979 03ac 43535200 		.ascii	"CSR\000"
 980 03b0 06       		.byte	0x6
 981 03b1 3F04     		.2byte	0x43f
 982 03b3 C1000000 		.4byte	0xc1
 983 03b7 02       		.byte	0x2
 984 03b8 23       		.byte	0x23
 985 03b9 24       		.uleb128 0x24
 986 03ba 00       		.byte	0
 987 03bb 14       		.uleb128 0x14
 988 03bc 00000000 		.4byte	.LASF44
 989 03c0 06       		.byte	0x6
 990 03c1 4A04     		.2byte	0x44a
 991 03c3 1C030000 		.4byte	0x31c
 992 03c7 15       		.uleb128 0x15
 993 03c8 5A020000 		.4byte	0x25a
 994 03cc 01       		.byte	0x1
 995 03cd A2       		.byte	0xa2
 996 03ce 05       		.byte	0x5
 997 03cf 03       		.byte	0x3
 998 03d0 00000000 		.4byte	SystemCoreClock
 999 03d4 0A       		.uleb128 0xa
 1000 03d5 A6000000 		.4byte	0xa6
 1001 03d9 E4030000 		.4byte	0x3e4
 1002 03dd 0B       		.uleb128 0xb
 1003 03de 8A000000 		.4byte	0x8a
 1004 03e2 0F       		.byte	0xf
 1005 03e3 00       		.byte	0
 1006 03e4 06       		.uleb128 0x6
 1007 03e5 D4030000 		.4byte	0x3d4
 1008 03e9 05       		.uleb128 0x5
 1009 03ea E4030000 		.4byte	0x3e4
 1010 03ee 16       		.uleb128 0x16
 1011 03ef B0020000 		.4byte	.LASF45
 1012 03f3 01       		.byte	0x1
 1013 03f4 A7       		.byte	0xa7
 1014 03f5 E9030000 		.4byte	0x3e9
 1015 03f9 01       		.byte	0x1
 1016 03fa 05       		.byte	0x5
 1017 03fb 03       		.byte	0x3
 1018 03fc 00000000 		.4byte	AHBPrescTable
 1019 0400 17       		.uleb128 0x17
 1020 0401 11010000 		.4byte	.LASF53
 1021 0405 01       		.byte	0x1
 1022 0406 DB03     		.2byte	0x3db
 1023 0408 01       		.byte	0x1
 1024 0409 4C010000 		.4byte	.LFB32
 1025 040d 4C020000 		.4byte	.LFE32
 1026 0411 00000000 		.4byte	.LLST3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 38


 1027 0415 01       		.byte	0x1
 1028 0416 39040000 		.4byte	0x439
 1029 041a 18       		.uleb128 0x18
 1030 041b F6010000 		.4byte	.LASF46
 1031 041f 01       		.byte	0x1
 1032 0420 DD03     		.2byte	0x3dd
 1033 0422 C1000000 		.4byte	0xc1
 1034 0426 02       		.byte	0x2
 1035 0427 91       		.byte	0x91
 1036 0428 74       		.sleb128 -12
 1037 0429 18       		.uleb128 0x18
 1038 042a 30000000 		.4byte	.LASF47
 1039 042e 01       		.byte	0x1
 1040 042f DD03     		.2byte	0x3dd
 1041 0431 C1000000 		.4byte	0xc1
 1042 0435 02       		.byte	0x2
 1043 0436 91       		.byte	0x91
 1044 0437 70       		.sleb128 -16
 1045 0438 00       		.byte	0
 1046 0439 19       		.uleb128 0x19
 1047 043a BE020000 		.4byte	.LASF54
 1048 043e 01       		.byte	0x1
 1049 043f A301     		.2byte	0x1a3
 1050 0441 01       		.byte	0x1
 1051 0442 40010000 		.4byte	.LFB31
 1052 0446 4C010000 		.4byte	.LFE31
 1053 044a 5C000000 		.4byte	.LLST2
 1054 044e 01       		.byte	0x1
 1055 044f 1A       		.uleb128 0x1a
 1056 0450 01       		.byte	0x1
 1057 0451 76020000 		.4byte	.LASF55
 1058 0455 01       		.byte	0x1
 1059 0456 3201     		.2byte	0x132
 1060 0458 01       		.byte	0x1
 1061 0459 68000000 		.4byte	.LFB30
 1062 045d 40010000 		.4byte	.LFE30
 1063 0461 88000000 		.4byte	.LLST1
 1064 0465 01       		.byte	0x1
 1065 0466 98040000 		.4byte	0x498
 1066 046a 1B       		.uleb128 0x1b
 1067 046b 746D7000 		.ascii	"tmp\000"
 1068 046f 01       		.byte	0x1
 1069 0470 3401     		.2byte	0x134
 1070 0472 B6000000 		.4byte	0xb6
 1071 0476 02       		.byte	0x2
 1072 0477 91       		.byte	0x91
 1073 0478 74       		.sleb128 -12
 1074 0479 18       		.uleb128 0x18
 1075 047a E5000000 		.4byte	.LASF48
 1076 047e 01       		.byte	0x1
 1077 047f 3401     		.2byte	0x134
 1078 0481 B6000000 		.4byte	0xb6
 1079 0485 02       		.byte	0x2
 1080 0486 91       		.byte	0x91
 1081 0487 70       		.sleb128 -16
 1082 0488 18       		.uleb128 0x18
 1083 0489 21010000 		.4byte	.LASF49
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 39


 1084 048d 01       		.byte	0x1
 1085 048e 3401     		.2byte	0x134
 1086 0490 B6000000 		.4byte	0xb6
 1087 0494 02       		.byte	0x2
 1088 0495 91       		.byte	0x91
 1089 0496 6C       		.sleb128 -20
 1090 0497 00       		.byte	0
 1091 0498 1C       		.uleb128 0x1c
 1092 0499 01       		.byte	0x1
 1093 049a 53020000 		.4byte	.LASF56
 1094 049e 01       		.byte	0x1
 1095 049f D4       		.byte	0xd4
 1096 04a0 01       		.byte	0x1
 1097 04a1 00000000 		.4byte	.LFB29
 1098 04a5 68000000 		.4byte	.LFE29
 1099 04a9 E4000000 		.4byte	.LLST0
 1100 04ad 01       		.byte	0x1
 1101 04ae 00       		.byte	0
 1102              		.section	.debug_abbrev,"",%progbits
 1103              	.Ldebug_abbrev0:
 1104 0000 01       		.uleb128 0x1
 1105 0001 11       		.uleb128 0x11
 1106 0002 01       		.byte	0x1
 1107 0003 25       		.uleb128 0x25
 1108 0004 0E       		.uleb128 0xe
 1109 0005 13       		.uleb128 0x13
 1110 0006 0B       		.uleb128 0xb
 1111 0007 03       		.uleb128 0x3
 1112 0008 0E       		.uleb128 0xe
 1113 0009 1B       		.uleb128 0x1b
 1114 000a 0E       		.uleb128 0xe
 1115 000b 11       		.uleb128 0x11
 1116 000c 01       		.uleb128 0x1
 1117 000d 12       		.uleb128 0x12
 1118 000e 01       		.uleb128 0x1
 1119 000f 10       		.uleb128 0x10
 1120 0010 06       		.uleb128 0x6
 1121 0011 00       		.byte	0
 1122 0012 00       		.byte	0
 1123 0013 02       		.uleb128 0x2
 1124 0014 24       		.uleb128 0x24
 1125 0015 00       		.byte	0
 1126 0016 0B       		.uleb128 0xb
 1127 0017 0B       		.uleb128 0xb
 1128 0018 3E       		.uleb128 0x3e
 1129 0019 0B       		.uleb128 0xb
 1130 001a 03       		.uleb128 0x3
 1131 001b 0E       		.uleb128 0xe
 1132 001c 00       		.byte	0
 1133 001d 00       		.byte	0
 1134 001e 03       		.uleb128 0x3
 1135 001f 16       		.uleb128 0x16
 1136 0020 00       		.byte	0
 1137 0021 03       		.uleb128 0x3
 1138 0022 0E       		.uleb128 0xe
 1139 0023 3A       		.uleb128 0x3a
 1140 0024 0B       		.uleb128 0xb
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 40


 1141 0025 3B       		.uleb128 0x3b
 1142 0026 0B       		.uleb128 0xb
 1143 0027 49       		.uleb128 0x49
 1144 0028 13       		.uleb128 0x13
 1145 0029 00       		.byte	0
 1146 002a 00       		.byte	0
 1147 002b 04       		.uleb128 0x4
 1148 002c 24       		.uleb128 0x24
 1149 002d 00       		.byte	0
 1150 002e 0B       		.uleb128 0xb
 1151 002f 0B       		.uleb128 0xb
 1152 0030 3E       		.uleb128 0x3e
 1153 0031 0B       		.uleb128 0xb
 1154 0032 03       		.uleb128 0x3
 1155 0033 08       		.uleb128 0x8
 1156 0034 00       		.byte	0
 1157 0035 00       		.byte	0
 1158 0036 05       		.uleb128 0x5
 1159 0037 35       		.uleb128 0x35
 1160 0038 00       		.byte	0
 1161 0039 49       		.uleb128 0x49
 1162 003a 13       		.uleb128 0x13
 1163 003b 00       		.byte	0
 1164 003c 00       		.byte	0
 1165 003d 06       		.uleb128 0x6
 1166 003e 26       		.uleb128 0x26
 1167 003f 00       		.byte	0
 1168 0040 49       		.uleb128 0x49
 1169 0041 13       		.uleb128 0x13
 1170 0042 00       		.byte	0
 1171 0043 00       		.byte	0
 1172 0044 07       		.uleb128 0x7
 1173 0045 13       		.uleb128 0x13
 1174 0046 01       		.byte	0x1
 1175 0047 0B       		.uleb128 0xb
 1176 0048 0B       		.uleb128 0xb
 1177 0049 3A       		.uleb128 0x3a
 1178 004a 0B       		.uleb128 0xb
 1179 004b 3B       		.uleb128 0x3b
 1180 004c 0B       		.uleb128 0xb
 1181 004d 01       		.uleb128 0x1
 1182 004e 13       		.uleb128 0x13
 1183 004f 00       		.byte	0
 1184 0050 00       		.byte	0
 1185 0051 08       		.uleb128 0x8
 1186 0052 0D       		.uleb128 0xd
 1187 0053 00       		.byte	0
 1188 0054 03       		.uleb128 0x3
 1189 0055 0E       		.uleb128 0xe
 1190 0056 3A       		.uleb128 0x3a
 1191 0057 0B       		.uleb128 0xb
 1192 0058 3B       		.uleb128 0x3b
 1193 0059 0B       		.uleb128 0xb
 1194 005a 49       		.uleb128 0x49
 1195 005b 13       		.uleb128 0x13
 1196 005c 38       		.uleb128 0x38
 1197 005d 0A       		.uleb128 0xa
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 41


 1198 005e 00       		.byte	0
 1199 005f 00       		.byte	0
 1200 0060 09       		.uleb128 0x9
 1201 0061 0D       		.uleb128 0xd
 1202 0062 00       		.byte	0
 1203 0063 03       		.uleb128 0x3
 1204 0064 08       		.uleb128 0x8
 1205 0065 3A       		.uleb128 0x3a
 1206 0066 0B       		.uleb128 0xb
 1207 0067 3B       		.uleb128 0x3b
 1208 0068 0B       		.uleb128 0xb
 1209 0069 49       		.uleb128 0x49
 1210 006a 13       		.uleb128 0x13
 1211 006b 38       		.uleb128 0x38
 1212 006c 0A       		.uleb128 0xa
 1213 006d 00       		.byte	0
 1214 006e 00       		.byte	0
 1215 006f 0A       		.uleb128 0xa
 1216 0070 01       		.uleb128 0x1
 1217 0071 01       		.byte	0x1
 1218 0072 49       		.uleb128 0x49
 1219 0073 13       		.uleb128 0x13
 1220 0074 01       		.uleb128 0x1
 1221 0075 13       		.uleb128 0x13
 1222 0076 00       		.byte	0
 1223 0077 00       		.byte	0
 1224 0078 0B       		.uleb128 0xb
 1225 0079 21       		.uleb128 0x21
 1226 007a 00       		.byte	0
 1227 007b 49       		.uleb128 0x49
 1228 007c 13       		.uleb128 0x13
 1229 007d 2F       		.uleb128 0x2f
 1230 007e 0B       		.uleb128 0xb
 1231 007f 00       		.byte	0
 1232 0080 00       		.byte	0
 1233 0081 0C       		.uleb128 0xc
 1234 0082 34       		.uleb128 0x34
 1235 0083 00       		.byte	0
 1236 0084 03       		.uleb128 0x3
 1237 0085 0E       		.uleb128 0xe
 1238 0086 3A       		.uleb128 0x3a
 1239 0087 0B       		.uleb128 0xb
 1240 0088 3B       		.uleb128 0x3b
 1241 0089 05       		.uleb128 0x5
 1242 008a 49       		.uleb128 0x49
 1243 008b 13       		.uleb128 0x13
 1244 008c 3F       		.uleb128 0x3f
 1245 008d 0C       		.uleb128 0xc
 1246 008e 3C       		.uleb128 0x3c
 1247 008f 0C       		.uleb128 0xc
 1248 0090 00       		.byte	0
 1249 0091 00       		.byte	0
 1250 0092 0D       		.uleb128 0xd
 1251 0093 34       		.uleb128 0x34
 1252 0094 00       		.byte	0
 1253 0095 03       		.uleb128 0x3
 1254 0096 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 42


 1255 0097 3A       		.uleb128 0x3a
 1256 0098 0B       		.uleb128 0xb
 1257 0099 3B       		.uleb128 0x3b
 1258 009a 0B       		.uleb128 0xb
 1259 009b 49       		.uleb128 0x49
 1260 009c 13       		.uleb128 0x13
 1261 009d 3F       		.uleb128 0x3f
 1262 009e 0C       		.uleb128 0xc
 1263 009f 3C       		.uleb128 0x3c
 1264 00a0 0C       		.uleb128 0xc
 1265 00a1 00       		.byte	0
 1266 00a2 00       		.byte	0
 1267 00a3 0E       		.uleb128 0xe
 1268 00a4 04       		.uleb128 0x4
 1269 00a5 01       		.byte	0x1
 1270 00a6 3E       		.uleb128 0x3e
 1271 00a7 0B       		.uleb128 0xb
 1272 00a8 0B       		.uleb128 0xb
 1273 00a9 0B       		.uleb128 0xb
 1274 00aa 49       		.uleb128 0x49
 1275 00ab 13       		.uleb128 0x13
 1276 00ac 3A       		.uleb128 0x3a
 1277 00ad 0B       		.uleb128 0xb
 1278 00ae 3B       		.uleb128 0x3b
 1279 00af 05       		.uleb128 0x5
 1280 00b0 01       		.uleb128 0x1
 1281 00b1 13       		.uleb128 0x13
 1282 00b2 00       		.byte	0
 1283 00b3 00       		.byte	0
 1284 00b4 0F       		.uleb128 0xf
 1285 00b5 28       		.uleb128 0x28
 1286 00b6 00       		.byte	0
 1287 00b7 03       		.uleb128 0x3
 1288 00b8 0E       		.uleb128 0xe
 1289 00b9 1C       		.uleb128 0x1c
 1290 00ba 0B       		.uleb128 0xb
 1291 00bb 00       		.byte	0
 1292 00bc 00       		.byte	0
 1293 00bd 10       		.uleb128 0x10
 1294 00be 28       		.uleb128 0x28
 1295 00bf 00       		.byte	0
 1296 00c0 03       		.uleb128 0x3
 1297 00c1 08       		.uleb128 0x8
 1298 00c2 1C       		.uleb128 0x1c
 1299 00c3 0B       		.uleb128 0xb
 1300 00c4 00       		.byte	0
 1301 00c5 00       		.byte	0
 1302 00c6 11       		.uleb128 0x11
 1303 00c7 13       		.uleb128 0x13
 1304 00c8 01       		.byte	0x1
 1305 00c9 0B       		.uleb128 0xb
 1306 00ca 0B       		.uleb128 0xb
 1307 00cb 3A       		.uleb128 0x3a
 1308 00cc 0B       		.uleb128 0xb
 1309 00cd 3B       		.uleb128 0x3b
 1310 00ce 05       		.uleb128 0x5
 1311 00cf 01       		.uleb128 0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 43


 1312 00d0 13       		.uleb128 0x13
 1313 00d1 00       		.byte	0
 1314 00d2 00       		.byte	0
 1315 00d3 12       		.uleb128 0x12
 1316 00d4 0D       		.uleb128 0xd
 1317 00d5 00       		.byte	0
 1318 00d6 03       		.uleb128 0x3
 1319 00d7 08       		.uleb128 0x8
 1320 00d8 3A       		.uleb128 0x3a
 1321 00d9 0B       		.uleb128 0xb
 1322 00da 3B       		.uleb128 0x3b
 1323 00db 05       		.uleb128 0x5
 1324 00dc 49       		.uleb128 0x49
 1325 00dd 13       		.uleb128 0x13
 1326 00de 38       		.uleb128 0x38
 1327 00df 0A       		.uleb128 0xa
 1328 00e0 00       		.byte	0
 1329 00e1 00       		.byte	0
 1330 00e2 13       		.uleb128 0x13
 1331 00e3 0D       		.uleb128 0xd
 1332 00e4 00       		.byte	0
 1333 00e5 03       		.uleb128 0x3
 1334 00e6 0E       		.uleb128 0xe
 1335 00e7 3A       		.uleb128 0x3a
 1336 00e8 0B       		.uleb128 0xb
 1337 00e9 3B       		.uleb128 0x3b
 1338 00ea 05       		.uleb128 0x5
 1339 00eb 49       		.uleb128 0x49
 1340 00ec 13       		.uleb128 0x13
 1341 00ed 38       		.uleb128 0x38
 1342 00ee 0A       		.uleb128 0xa
 1343 00ef 00       		.byte	0
 1344 00f0 00       		.byte	0
 1345 00f1 14       		.uleb128 0x14
 1346 00f2 16       		.uleb128 0x16
 1347 00f3 00       		.byte	0
 1348 00f4 03       		.uleb128 0x3
 1349 00f5 0E       		.uleb128 0xe
 1350 00f6 3A       		.uleb128 0x3a
 1351 00f7 0B       		.uleb128 0xb
 1352 00f8 3B       		.uleb128 0x3b
 1353 00f9 05       		.uleb128 0x5
 1354 00fa 49       		.uleb128 0x49
 1355 00fb 13       		.uleb128 0x13
 1356 00fc 00       		.byte	0
 1357 00fd 00       		.byte	0
 1358 00fe 15       		.uleb128 0x15
 1359 00ff 34       		.uleb128 0x34
 1360 0100 00       		.byte	0
 1361 0101 47       		.uleb128 0x47
 1362 0102 13       		.uleb128 0x13
 1363 0103 3A       		.uleb128 0x3a
 1364 0104 0B       		.uleb128 0xb
 1365 0105 3B       		.uleb128 0x3b
 1366 0106 0B       		.uleb128 0xb
 1367 0107 02       		.uleb128 0x2
 1368 0108 0A       		.uleb128 0xa
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 44


 1369 0109 00       		.byte	0
 1370 010a 00       		.byte	0
 1371 010b 16       		.uleb128 0x16
 1372 010c 34       		.uleb128 0x34
 1373 010d 00       		.byte	0
 1374 010e 03       		.uleb128 0x3
 1375 010f 0E       		.uleb128 0xe
 1376 0110 3A       		.uleb128 0x3a
 1377 0111 0B       		.uleb128 0xb
 1378 0112 3B       		.uleb128 0x3b
 1379 0113 0B       		.uleb128 0xb
 1380 0114 49       		.uleb128 0x49
 1381 0115 13       		.uleb128 0x13
 1382 0116 3F       		.uleb128 0x3f
 1383 0117 0C       		.uleb128 0xc
 1384 0118 02       		.uleb128 0x2
 1385 0119 0A       		.uleb128 0xa
 1386 011a 00       		.byte	0
 1387 011b 00       		.byte	0
 1388 011c 17       		.uleb128 0x17
 1389 011d 2E       		.uleb128 0x2e
 1390 011e 01       		.byte	0x1
 1391 011f 03       		.uleb128 0x3
 1392 0120 0E       		.uleb128 0xe
 1393 0121 3A       		.uleb128 0x3a
 1394 0122 0B       		.uleb128 0xb
 1395 0123 3B       		.uleb128 0x3b
 1396 0124 05       		.uleb128 0x5
 1397 0125 27       		.uleb128 0x27
 1398 0126 0C       		.uleb128 0xc
 1399 0127 11       		.uleb128 0x11
 1400 0128 01       		.uleb128 0x1
 1401 0129 12       		.uleb128 0x12
 1402 012a 01       		.uleb128 0x1
 1403 012b 40       		.uleb128 0x40
 1404 012c 06       		.uleb128 0x6
 1405 012d 9742     		.uleb128 0x2117
 1406 012f 0C       		.uleb128 0xc
 1407 0130 01       		.uleb128 0x1
 1408 0131 13       		.uleb128 0x13
 1409 0132 00       		.byte	0
 1410 0133 00       		.byte	0
 1411 0134 18       		.uleb128 0x18
 1412 0135 34       		.uleb128 0x34
 1413 0136 00       		.byte	0
 1414 0137 03       		.uleb128 0x3
 1415 0138 0E       		.uleb128 0xe
 1416 0139 3A       		.uleb128 0x3a
 1417 013a 0B       		.uleb128 0xb
 1418 013b 3B       		.uleb128 0x3b
 1419 013c 05       		.uleb128 0x5
 1420 013d 49       		.uleb128 0x49
 1421 013e 13       		.uleb128 0x13
 1422 013f 02       		.uleb128 0x2
 1423 0140 0A       		.uleb128 0xa
 1424 0141 00       		.byte	0
 1425 0142 00       		.byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 45


 1426 0143 19       		.uleb128 0x19
 1427 0144 2E       		.uleb128 0x2e
 1428 0145 00       		.byte	0
 1429 0146 03       		.uleb128 0x3
 1430 0147 0E       		.uleb128 0xe
 1431 0148 3A       		.uleb128 0x3a
 1432 0149 0B       		.uleb128 0xb
 1433 014a 3B       		.uleb128 0x3b
 1434 014b 05       		.uleb128 0x5
 1435 014c 27       		.uleb128 0x27
 1436 014d 0C       		.uleb128 0xc
 1437 014e 11       		.uleb128 0x11
 1438 014f 01       		.uleb128 0x1
 1439 0150 12       		.uleb128 0x12
 1440 0151 01       		.uleb128 0x1
 1441 0152 40       		.uleb128 0x40
 1442 0153 06       		.uleb128 0x6
 1443 0154 9642     		.uleb128 0x2116
 1444 0156 0C       		.uleb128 0xc
 1445 0157 00       		.byte	0
 1446 0158 00       		.byte	0
 1447 0159 1A       		.uleb128 0x1a
 1448 015a 2E       		.uleb128 0x2e
 1449 015b 01       		.byte	0x1
 1450 015c 3F       		.uleb128 0x3f
 1451 015d 0C       		.uleb128 0xc
 1452 015e 03       		.uleb128 0x3
 1453 015f 0E       		.uleb128 0xe
 1454 0160 3A       		.uleb128 0x3a
 1455 0161 0B       		.uleb128 0xb
 1456 0162 3B       		.uleb128 0x3b
 1457 0163 05       		.uleb128 0x5
 1458 0164 27       		.uleb128 0x27
 1459 0165 0C       		.uleb128 0xc
 1460 0166 11       		.uleb128 0x11
 1461 0167 01       		.uleb128 0x1
 1462 0168 12       		.uleb128 0x12
 1463 0169 01       		.uleb128 0x1
 1464 016a 40       		.uleb128 0x40
 1465 016b 06       		.uleb128 0x6
 1466 016c 9742     		.uleb128 0x2117
 1467 016e 0C       		.uleb128 0xc
 1468 016f 01       		.uleb128 0x1
 1469 0170 13       		.uleb128 0x13
 1470 0171 00       		.byte	0
 1471 0172 00       		.byte	0
 1472 0173 1B       		.uleb128 0x1b
 1473 0174 34       		.uleb128 0x34
 1474 0175 00       		.byte	0
 1475 0176 03       		.uleb128 0x3
 1476 0177 08       		.uleb128 0x8
 1477 0178 3A       		.uleb128 0x3a
 1478 0179 0B       		.uleb128 0xb
 1479 017a 3B       		.uleb128 0x3b
 1480 017b 05       		.uleb128 0x5
 1481 017c 49       		.uleb128 0x49
 1482 017d 13       		.uleb128 0x13
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 46


 1483 017e 02       		.uleb128 0x2
 1484 017f 0A       		.uleb128 0xa
 1485 0180 00       		.byte	0
 1486 0181 00       		.byte	0
 1487 0182 1C       		.uleb128 0x1c
 1488 0183 2E       		.uleb128 0x2e
 1489 0184 00       		.byte	0
 1490 0185 3F       		.uleb128 0x3f
 1491 0186 0C       		.uleb128 0xc
 1492 0187 03       		.uleb128 0x3
 1493 0188 0E       		.uleb128 0xe
 1494 0189 3A       		.uleb128 0x3a
 1495 018a 0B       		.uleb128 0xb
 1496 018b 3B       		.uleb128 0x3b
 1497 018c 0B       		.uleb128 0xb
 1498 018d 27       		.uleb128 0x27
 1499 018e 0C       		.uleb128 0xc
 1500 018f 11       		.uleb128 0x11
 1501 0190 01       		.uleb128 0x1
 1502 0191 12       		.uleb128 0x12
 1503 0192 01       		.uleb128 0x1
 1504 0193 40       		.uleb128 0x40
 1505 0194 06       		.uleb128 0x6
 1506 0195 9642     		.uleb128 0x2116
 1507 0197 0C       		.uleb128 0xc
 1508 0198 00       		.byte	0
 1509 0199 00       		.byte	0
 1510 019a 00       		.byte	0
 1511              		.section	.debug_loc,"",%progbits
 1512              	.Ldebug_loc0:
 1513              	.LLST3:
 1514 0000 4C010000 		.4byte	.LFB32-.Ltext0
 1515 0004 4E010000 		.4byte	.LCFI10-.Ltext0
 1516 0008 0200     		.2byte	0x2
 1517 000a 7D       		.byte	0x7d
 1518 000b 00       		.sleb128 0
 1519 000c 4E010000 		.4byte	.LCFI10-.Ltext0
 1520 0010 50010000 		.4byte	.LCFI11-.Ltext0
 1521 0014 0200     		.2byte	0x2
 1522 0016 7D       		.byte	0x7d
 1523 0017 04       		.sleb128 4
 1524 0018 50010000 		.4byte	.LCFI11-.Ltext0
 1525 001c 52010000 		.4byte	.LCFI12-.Ltext0
 1526 0020 0200     		.2byte	0x2
 1527 0022 7D       		.byte	0x7d
 1528 0023 10       		.sleb128 16
 1529 0024 52010000 		.4byte	.LCFI12-.Ltext0
 1530 0028 3C020000 		.4byte	.LCFI13-.Ltext0
 1531 002c 0200     		.2byte	0x2
 1532 002e 77       		.byte	0x77
 1533 002f 10       		.sleb128 16
 1534 0030 3C020000 		.4byte	.LCFI13-.Ltext0
 1535 0034 3E020000 		.4byte	.LCFI14-.Ltext0
 1536 0038 0200     		.2byte	0x2
 1537 003a 77       		.byte	0x77
 1538 003b 04       		.sleb128 4
 1539 003c 3E020000 		.4byte	.LCFI14-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 47


 1540 0040 40020000 		.4byte	.LCFI15-.Ltext0
 1541 0044 0200     		.2byte	0x2
 1542 0046 7D       		.byte	0x7d
 1543 0047 04       		.sleb128 4
 1544 0048 40020000 		.4byte	.LCFI15-.Ltext0
 1545 004c 4C020000 		.4byte	.LFE32-.Ltext0
 1546 0050 0200     		.2byte	0x2
 1547 0052 7D       		.byte	0x7d
 1548 0053 00       		.sleb128 0
 1549 0054 00000000 		.4byte	0
 1550 0058 00000000 		.4byte	0
 1551              	.LLST2:
 1552 005c 40010000 		.4byte	.LFB31-.Ltext0
 1553 0060 42010000 		.4byte	.LCFI8-.Ltext0
 1554 0064 0200     		.2byte	0x2
 1555 0066 7D       		.byte	0x7d
 1556 0067 00       		.sleb128 0
 1557 0068 42010000 		.4byte	.LCFI8-.Ltext0
 1558 006c 44010000 		.4byte	.LCFI9-.Ltext0
 1559 0070 0200     		.2byte	0x2
 1560 0072 7D       		.byte	0x7d
 1561 0073 08       		.sleb128 8
 1562 0074 44010000 		.4byte	.LCFI9-.Ltext0
 1563 0078 4C010000 		.4byte	.LFE31-.Ltext0
 1564 007c 0200     		.2byte	0x2
 1565 007e 77       		.byte	0x77
 1566 007f 08       		.sleb128 8
 1567 0080 00000000 		.4byte	0
 1568 0084 00000000 		.4byte	0
 1569              	.LLST1:
 1570 0088 68000000 		.4byte	.LFB30-.Ltext0
 1571 008c 6A000000 		.4byte	.LCFI2-.Ltext0
 1572 0090 0200     		.2byte	0x2
 1573 0092 7D       		.byte	0x7d
 1574 0093 00       		.sleb128 0
 1575 0094 6A000000 		.4byte	.LCFI2-.Ltext0
 1576 0098 6C000000 		.4byte	.LCFI3-.Ltext0
 1577 009c 0200     		.2byte	0x2
 1578 009e 7D       		.byte	0x7d
 1579 009f 04       		.sleb128 4
 1580 00a0 6C000000 		.4byte	.LCFI3-.Ltext0
 1581 00a4 6E000000 		.4byte	.LCFI4-.Ltext0
 1582 00a8 0200     		.2byte	0x2
 1583 00aa 7D       		.byte	0x7d
 1584 00ab 18       		.sleb128 24
 1585 00ac 6E000000 		.4byte	.LCFI4-.Ltext0
 1586 00b0 26010000 		.4byte	.LCFI5-.Ltext0
 1587 00b4 0200     		.2byte	0x2
 1588 00b6 77       		.byte	0x77
 1589 00b7 18       		.sleb128 24
 1590 00b8 26010000 		.4byte	.LCFI5-.Ltext0
 1591 00bc 28010000 		.4byte	.LCFI6-.Ltext0
 1592 00c0 0200     		.2byte	0x2
 1593 00c2 77       		.byte	0x77
 1594 00c3 04       		.sleb128 4
 1595 00c4 28010000 		.4byte	.LCFI6-.Ltext0
 1596 00c8 2A010000 		.4byte	.LCFI7-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 48


 1597 00cc 0200     		.2byte	0x2
 1598 00ce 7D       		.byte	0x7d
 1599 00cf 04       		.sleb128 4
 1600 00d0 2A010000 		.4byte	.LCFI7-.Ltext0
 1601 00d4 40010000 		.4byte	.LFE30-.Ltext0
 1602 00d8 0200     		.2byte	0x2
 1603 00da 7D       		.byte	0x7d
 1604 00db 00       		.sleb128 0
 1605 00dc 00000000 		.4byte	0
 1606 00e0 00000000 		.4byte	0
 1607              	.LLST0:
 1608 00e4 00000000 		.4byte	.LFB29-.Ltext0
 1609 00e8 02000000 		.4byte	.LCFI0-.Ltext0
 1610 00ec 0200     		.2byte	0x2
 1611 00ee 7D       		.byte	0x7d
 1612 00ef 00       		.sleb128 0
 1613 00f0 02000000 		.4byte	.LCFI0-.Ltext0
 1614 00f4 04000000 		.4byte	.LCFI1-.Ltext0
 1615 00f8 0200     		.2byte	0x2
 1616 00fa 7D       		.byte	0x7d
 1617 00fb 08       		.sleb128 8
 1618 00fc 04000000 		.4byte	.LCFI1-.Ltext0
 1619 0100 68000000 		.4byte	.LFE29-.Ltext0
 1620 0104 0200     		.2byte	0x2
 1621 0106 77       		.byte	0x77
 1622 0107 08       		.sleb128 8
 1623 0108 00000000 		.4byte	0
 1624 010c 00000000 		.4byte	0
 1625              		.section	.debug_aranges,"",%progbits
 1626 0000 1C000000 		.4byte	0x1c
 1627 0004 0200     		.2byte	0x2
 1628 0006 00000000 		.4byte	.Ldebug_info0
 1629 000a 04       		.byte	0x4
 1630 000b 00       		.byte	0
 1631 000c 0000     		.2byte	0
 1632 000e 0000     		.2byte	0
 1633 0010 00000000 		.4byte	.Ltext0
 1634 0014 4C020000 		.4byte	.Letext0-.Ltext0
 1635 0018 00000000 		.4byte	0
 1636 001c 00000000 		.4byte	0
 1637              		.section	.debug_line,"",%progbits
 1638              	.Ldebug_line0:
 1639 0000 92010000 		.section	.debug_str,"MS",%progbits,1
 1639      02000601 
 1639      00000201 
 1639      FB0E0D00 
 1639      01010101 
 1640              	.LASF44:
 1641 0000 5243435F 		.ascii	"RCC_TypeDef\000"
 1641      54797065 
 1641      44656600 
 1642              	.LASF39:
 1643 000c 41504231 		.ascii	"APB1RSTR\000"
 1643      52535452 
 1643      00
 1644              	.LASF43:
 1645 0015 42444352 		.ascii	"BDCR\000"
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 49


 1645      00
 1646              	.LASF7:
 1647 001a 5F5F7569 		.ascii	"__uint32_t\000"
 1647      6E743332 
 1647      5F7400
 1648              	.LASF4:
 1649 0025 5F5F7569 		.ascii	"__uint16_t\000"
 1649      6E743136 
 1649      5F7400
 1650              	.LASF47:
 1651 0030 48534553 		.ascii	"HSEStatus\000"
 1651      74617475 
 1651      7300
 1652              	.LASF51:
 1653 003a 2E2E2F2E 		.ascii	"../../source/src/CMSIS/system_stm32f10x.c\000"
 1653      2E2F736F 
 1653      75726365 
 1653      2F737263 
 1653      2F434D53 
 1654              	.LASF15:
 1655 0064 43505549 		.ascii	"CPUID\000"
 1655      4400
 1656              	.LASF32:
 1657 006a 4B455952 		.ascii	"KEYR\000"
 1657      00
 1658              	.LASF37:
 1659 006f 43464752 		.ascii	"CFGR\000"
 1659      00
 1660              	.LASF12:
 1661 0074 75696E74 		.ascii	"uint8_t\000"
 1661      385F7400 
 1662              	.LASF42:
 1663 007c 41504231 		.ascii	"APB1ENR\000"
 1663      454E5200 
 1664              	.LASF2:
 1665 0084 73686F72 		.ascii	"short int\000"
 1665      7420696E 
 1665      7400
 1666              	.LASF16:
 1667 008e 49435352 		.ascii	"ICSR\000"
 1667      00
 1668              	.LASF33:
 1669 0093 4F50544B 		.ascii	"OPTKEYR\000"
 1669      45595200 
 1670              	.LASF52:
 1671 009b 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 1671      616B615C 
 1671      4B414B41 
 1671      4F535C43 
 1671      5C77696E 
 1672 00c3 757635A3 		.ascii	"uv5\243\251\000"
 1672      A900
 1673              	.LASF9:
 1674 00c9 6C6F6E67 		.ascii	"long long int\000"
 1674      206C6F6E 
 1674      6720696E 
 1674      7400
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 50


 1675              	.LASF24:
 1676 00d7 42464152 		.ascii	"BFAR\000"
 1676      00
 1677              	.LASF6:
 1678 00dc 6C6F6E67 		.ascii	"long int\000"
 1678      20696E74 
 1678      00
 1679              	.LASF48:
 1680 00e5 706C6C6D 		.ascii	"pllmull\000"
 1680      756C6C00 
 1681              	.LASF40:
 1682 00ed 41484245 		.ascii	"AHBENR\000"
 1682      4E5200
 1683              	.LASF38:
 1684 00f4 41504232 		.ascii	"APB2RSTR\000"
 1684      52535452 
 1684      00
 1685              	.LASF3:
 1686 00fd 5F5F7569 		.ascii	"__uint8_t\000"
 1686      6E74385F 
 1686      7400
 1687              	.LASF35:
 1688 0107 57525052 		.ascii	"WRPR\000"
 1688      00
 1689              	.LASF20:
 1690 010c 43465352 		.ascii	"CFSR\000"
 1690      00
 1691              	.LASF53:
 1692 0111 53657453 		.ascii	"SetSysClockTo72\000"
 1692      7973436C 
 1692      6F636B54 
 1692      6F373200 
 1693              	.LASF49:
 1694 0121 706C6C73 		.ascii	"pllsource\000"
 1694      6F757263 
 1694      6500
 1695              	.LASF1:
 1696 012b 756E7369 		.ascii	"unsigned char\000"
 1696      676E6564 
 1696      20636861 
 1696      7200
 1697              	.LASF18:
 1698 0139 41495243 		.ascii	"AIRCR\000"
 1698      5200
 1699              	.LASF28:
 1700 013f 5343425F 		.ascii	"SCB_Type\000"
 1700      54797065 
 1700      00
 1701              	.LASF50:
 1702 0148 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 1702      43313120 
 1702      372E332E 
 1702      31203230 
 1702      31383036 
 1703 017b 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 1703      20726576 
 1703      6973696F 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 51


 1703      6E203236 
 1703      31393037 
 1704 01ae 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 1704      616D6520 
 1704      2D6D7468 
 1704      756D622D 
 1704      696E7465 
 1705 01e1 67647761 		.ascii	"gdwarf-2 -O0\000"
 1705      72662D32 
 1705      202D4F30 
 1705      00
 1706              	.LASF41:
 1707 01ee 41504232 		.ascii	"APB2ENR\000"
 1707      454E5200 
 1708              	.LASF46:
 1709 01f6 53746172 		.ascii	"StartUpCounter\000"
 1709      74557043 
 1709      6F756E74 
 1709      657200
 1710              	.LASF0:
 1711 0205 7369676E 		.ascii	"signed char\000"
 1711      65642063 
 1711      68617200 
 1712              	.LASF10:
 1713 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 1713      206C6F6E 
 1713      6720756E 
 1713      7369676E 
 1713      65642069 
 1714              	.LASF14:
 1715 0228 75696E74 		.ascii	"uint32_t\000"
 1715      33325F74 
 1715      00
 1716              	.LASF11:
 1717 0231 756E7369 		.ascii	"unsigned int\000"
 1717      676E6564 
 1717      20696E74 
 1717      00
 1718              	.LASF13:
 1719 023e 75696E74 		.ascii	"uint16_t\000"
 1719      31365F74 
 1719      00
 1720              	.LASF19:
 1721 0247 53484353 		.ascii	"SHCSR\000"
 1721      5200
 1722              	.LASF23:
 1723 024d 4D4D4641 		.ascii	"MMFAR\000"
 1723      5200
 1724              	.LASF56:
 1725 0253 53797374 		.ascii	"SystemInit\000"
 1725      656D496E 
 1725      697400
 1726              	.LASF5:
 1727 025e 73686F72 		.ascii	"short unsigned int\000"
 1727      7420756E 
 1727      7369676E 
 1727      65642069 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 52


 1727      6E7400
 1728              	.LASF17:
 1729 0271 56544F52 		.ascii	"VTOR\000"
 1729      00
 1730              	.LASF55:
 1731 0276 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1731      656D436F 
 1731      7265436C 
 1731      6F636B55 
 1731      70646174 
 1732              	.LASF27:
 1733 028c 49534152 		.ascii	"ISAR\000"
 1733      00
 1734              	.LASF22:
 1735 0291 44465352 		.ascii	"DFSR\000"
 1735      00
 1736              	.LASF30:
 1737 0296 53797374 		.ascii	"SystemCoreClock\000"
 1737      656D436F 
 1737      7265436C 
 1737      6F636B00 
 1738              	.LASF21:
 1739 02a6 48465352 		.ascii	"HFSR\000"
 1739      00
 1740              	.LASF26:
 1741 02ab 4D4D4652 		.ascii	"MMFR\000"
 1741      00
 1742              	.LASF45:
 1743 02b0 41484250 		.ascii	"AHBPrescTable\000"
 1743      72657363 
 1743      5461626C 
 1743      6500
 1744              	.LASF54:
 1745 02be 53657453 		.ascii	"SetSysClock\000"
 1745      7973436C 
 1745      6F636B00 
 1746              	.LASF8:
 1747 02ca 6C6F6E67 		.ascii	"long unsigned int\000"
 1747      20756E73 
 1747      69676E65 
 1747      6420696E 
 1747      7400
 1748              	.LASF31:
 1749 02dc 52455345 		.ascii	"RESET\000"
 1749      5400
 1750              	.LASF25:
 1751 02e2 41465352 		.ascii	"AFSR\000"
 1751      00
 1752              	.LASF34:
 1753 02e7 52455345 		.ascii	"RESERVED\000"
 1753      52564544 
 1753      00
 1754              	.LASF36:
 1755 02f0 464C4153 		.ascii	"FLASH_TypeDef\000"
 1755      485F5479 
 1755      70654465 
 1755      6600
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 53


 1756              	.LASF29:
 1757 02fe 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1757      52784275 
 1757      66666572 
 1757      00
 1758              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:20     .data:00000000 SystemCoreClock
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:17     .data:00000000 $d
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:26     .data:00000004 AHBPrescTable
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:44     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:51     .text:00000000 SystemInit
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:284    .text:00000140 SetSysClock
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:114    .text:0000005c $d
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:120    .text:00000068 $t
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:127    .text:00000068 SystemCoreClockUpdate
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:270    .text:0000012c $d
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:278    .text:00000140 $t
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:312    .text:0000014c SetSysClockTo72
G:\Users\Jaxb\AppData\Local\Temp\ccRPtXAk.s:478    .text:00000244 $d

NO UNDEFINED SYMBOLS
