ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"vector.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  17              	.LC0:
  18 0000 2E2E2F2E 		.ascii	"../../source/src/kernel/OS_LIB/vector.c\000"
  18      2E2F736F 
  18      75726365 
  18      2F737263 
  18      2F6B6572 
  19              		.text
  20              		.align	1
  21              		.global	Vector_init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  26              		.type	Vector_init, %function
  27              	Vector_init:
  28              	.LFB6:
  29              		.file 1 "../../source/src/kernel/OS_LIB/vector.c"
   1:../../source/src/kernel/OS_LIB/vector.c **** #include <vector.h>
   2:../../source/src/kernel/OS_LIB/vector.c **** #include <os_error.h>
   3:../../source/src/kernel/OS_LIB/vector.c **** #include <myMicroLIB.h>
   4:../../source/src/kernel/OS_LIB/vector.c **** #include <myassert.h>
   5:../../source/src/kernel/OS_LIB/vector.c **** #include <kakaosstdint.h>
   6:../../source/src/kernel/OS_LIB/vector.c **** 
   7:../../source/src/kernel/OS_LIB/vector.c **** /*
   8:../../source/src/kernel/OS_LIB/vector.c **** initilize the Vector entity with vector_ptr->max_len = size,vector_ptr->cur_len = 0,
   9:../../source/src/kernel/OS_LIB/vector.c **** vector_ptr->data_size = len_per_data; then use malloc() to allocate room 
  10:../../source/src/kernel/OS_LIB/vector.c ****  */
  11:../../source/src/kernel/OS_LIB/vector.c **** int Vector_init(Vector *vector_ptr,unsigned int size,int len_per_data,unsigned int extension_factor
  12:../../source/src/kernel/OS_LIB/vector.c **** {
  30              		.loc 1 12 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 2


  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 F860     		str	r0, [r7, #12]
  46 0008 B960     		str	r1, [r7, #8]
  47 000a 7A60     		str	r2, [r7, #4]
  48 000c 3B60     		str	r3, [r7]
  13:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
  49              		.loc 1 13 0
  50 000e FB68     		ldr	r3, [r7, #12]
  51 0010 002B     		cmp	r3, #0
  52 0012 03D1     		bne	.L2
  53              		.loc 1 13 0 is_stmt 0 discriminator 1
  54 0014 0D21     		movs	r1, #13
  55 0016 1748     		ldr	r0, .L6
  56 0018 FFF7FEFF 		bl	_ASSERT
  57              	.L2:
  14:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(len_per_data > 0);
  58              		.loc 1 14 0 is_stmt 1
  59 001c 7B68     		ldr	r3, [r7, #4]
  60 001e 002B     		cmp	r3, #0
  61 0020 03DC     		bgt	.L3
  62              		.loc 1 14 0 is_stmt 0 discriminator 1
  63 0022 0E21     		movs	r1, #14
  64 0024 1348     		ldr	r0, .L6
  65 0026 FFF7FEFF 		bl	_ASSERT
  66              	.L3:
  15:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->max_len = size;
  67              		.loc 1 15 0 is_stmt 1
  68 002a FB68     		ldr	r3, [r7, #12]
  69 002c BA68     		ldr	r2, [r7, #8]
  70 002e 5A60     		str	r2, [r3, #4]
  16:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->cur_len = 0;
  71              		.loc 1 16 0
  72 0030 FB68     		ldr	r3, [r7, #12]
  73 0032 0022     		movs	r2, #0
  74 0034 9A60     		str	r2, [r3, #8]
  17:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->data_size = len_per_data;
  75              		.loc 1 17 0
  76 0036 7A68     		ldr	r2, [r7, #4]
  77 0038 FB68     		ldr	r3, [r7, #12]
  78 003a DA60     		str	r2, [r3, #12]
  18:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->extension_factor = extension_factor;
  79              		.loc 1 18 0
  80 003c FB68     		ldr	r3, [r7, #12]
  81 003e 3A68     		ldr	r2, [r7]
  82 0040 1A61     		str	r2, [r3, #16]
  19:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->data_ptr = f_malloc(vector_ptr->max_len * vector_ptr->data_size);
  83              		.loc 1 19 0
  84 0042 FB68     		ldr	r3, [r7, #12]
  85 0044 5B68     		ldr	r3, [r3, #4]
  86 0046 FA68     		ldr	r2, [r7, #12]
  87 0048 D268     		ldr	r2, [r2, #12]
  88 004a 02FB03F3 		mul	r3, r2, r3
  89 004e 1846     		mov	r0, r3
  90 0050 FFF7FEFF 		bl	ka_malloc
  91 0054 0246     		mov	r2, r0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 3


  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 1A60     		str	r2, [r3]
  20:../../source/src/kernel/OS_LIB/vector.c **** 	if(NULL == vector_ptr->data_ptr)
  94              		.loc 1 20 0
  95 005a FB68     		ldr	r3, [r7, #12]
  96 005c 1B68     		ldr	r3, [r3]
  97 005e 002B     		cmp	r3, #0
  98 0060 02D1     		bne	.L4
  21:../../source/src/kernel/OS_LIB/vector.c **** 	{
  22:../../source/src/kernel/OS_LIB/vector.c **** 		return -ERROR_ALLOCATE_ROOM;
  99              		.loc 1 22 0
 100 0062 4FF0FF33 		mov	r3, #-1
 101 0066 00E0     		b	.L5
 102              	.L4:
  23:../../source/src/kernel/OS_LIB/vector.c **** 	}
  24:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 103              		.loc 1 24 0
 104 0068 0023     		movs	r3, #0
 105              	.L5:
  25:../../source/src/kernel/OS_LIB/vector.c **** }
 106              		.loc 1 25 0
 107 006a 1846     		mov	r0, r3
 108 006c 1037     		adds	r7, r7, #16
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 8
 111 006e BD46     		mov	sp, r7
 112              	.LCFI4:
 113              		.cfi_def_cfa_register 13
 114              		@ sp needed
 115 0070 80BD     		pop	{r7, pc}
 116              	.L7:
 117 0072 00BF     		.align	2
 118              	.L6:
 119 0074 00000000 		.word	.LC0
 120              		.cfi_endproc
 121              	.LFE6:
 122              		.size	Vector_init, .-Vector_init
 123              		.align	1
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 128              		.type	expand_room, %function
 129              	expand_room:
 130              	.LFB7:
  26:../../source/src/kernel/OS_LIB/vector.c **** 
  27:../../source/src/kernel/OS_LIB/vector.c **** /*
  28:../../source/src/kernel/OS_LIB/vector.c **** allocate a bigger room for vector with factor extension_factor
  29:../../source/src/kernel/OS_LIB/vector.c **** then change the attribution max_len
  30:../../source/src/kernel/OS_LIB/vector.c ****  */
  31:../../source/src/kernel/OS_LIB/vector.c **** static int expand_room(Vector *vector_ptr)
  32:../../source/src/kernel/OS_LIB/vector.c **** {
 131              		.loc 1 32 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 16
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0078 80B5     		push	{r7, lr}
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 4


 136              	.LCFI5:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 007a 84B0     		sub	sp, sp, #16
 141              	.LCFI6:
 142              		.cfi_def_cfa_offset 24
 143 007c 00AF     		add	r7, sp, #0
 144              	.LCFI7:
 145              		.cfi_def_cfa_register 7
 146 007e 7860     		str	r0, [r7, #4]
  33:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 147              		.loc 1 33 0
 148 0080 7B68     		ldr	r3, [r7, #4]
 149 0082 002B     		cmp	r3, #0
 150 0084 03D1     		bne	.L9
 151              		.loc 1 33 0 is_stmt 0 discriminator 1
 152 0086 2121     		movs	r1, #33
 153 0088 3948     		ldr	r0, .L18
 154 008a FFF7FEFF 		bl	_ASSERT
 155              	.L9:
  34:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(vector_ptr->cur_len == vector_ptr->max_len);
 156              		.loc 1 34 0 is_stmt 1
 157 008e 7B68     		ldr	r3, [r7, #4]
 158 0090 9A68     		ldr	r2, [r3, #8]
 159 0092 7B68     		ldr	r3, [r7, #4]
 160 0094 5B68     		ldr	r3, [r3, #4]
 161 0096 9A42     		cmp	r2, r3
 162 0098 03D0     		beq	.L10
 163              		.loc 1 34 0 is_stmt 0 discriminator 1
 164 009a 2221     		movs	r1, #34
 165 009c 3448     		ldr	r0, .L18
 166 009e FFF7FEFF 		bl	_ASSERT
 167              	.L10:
  35:../../source/src/kernel/OS_LIB/vector.c **** 
  36:../../source/src/kernel/OS_LIB/vector.c **** 	void *buffer_ptr = vector_ptr->data_ptr;
 168              		.loc 1 36 0 is_stmt 1
 169 00a2 7B68     		ldr	r3, [r7, #4]
 170 00a4 1B68     		ldr	r3, [r3]
 171 00a6 FB60     		str	r3, [r7, #12]
  37:../../source/src/kernel/OS_LIB/vector.c **** 	if(VFISMUL(vector_ptr->extension_factor))
 172              		.loc 1 37 0
 173 00a8 7B68     		ldr	r3, [r7, #4]
 174 00aa 1B69     		ldr	r3, [r3, #16]
 175 00ac 002B     		cmp	r3, #0
 176 00ae 12DA     		bge	.L11
  38:../../source/src/kernel/OS_LIB/vector.c **** 	{
  39:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_ptr = f_malloc(GET_EXPENSION_FACTOR(vector_ptr->extension_factor) * vector_ptr->
 177              		.loc 1 39 0
 178 00b0 7B68     		ldr	r3, [r7, #4]
 179 00b2 1B69     		ldr	r3, [r3, #16]
 180 00b4 23F00043 		bic	r3, r3, #-2147483648
 181 00b8 7A68     		ldr	r2, [r7, #4]
 182 00ba 5268     		ldr	r2, [r2, #4]
 183 00bc 02FB03F3 		mul	r3, r2, r3
 184 00c0 7A68     		ldr	r2, [r7, #4]
 185 00c2 D268     		ldr	r2, [r2, #12]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 5


 186 00c4 02FB03F3 		mul	r3, r2, r3
 187 00c8 1846     		mov	r0, r3
 188 00ca FFF7FEFF 		bl	ka_malloc
 189 00ce 0246     		mov	r2, r0
 190 00d0 7B68     		ldr	r3, [r7, #4]
 191 00d2 1A60     		str	r2, [r3]
 192 00d4 10E0     		b	.L12
 193              	.L11:
  40:../../source/src/kernel/OS_LIB/vector.c **** 	}
  41:../../source/src/kernel/OS_LIB/vector.c **** 	else
  42:../../source/src/kernel/OS_LIB/vector.c **** 	{
  43:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_ptr = f_malloc((GET_EXPENSION_FACTOR(vector_ptr->extension_factor) + vector_ptr-
 194              		.loc 1 43 0
 195 00d6 7B68     		ldr	r3, [r7, #4]
 196 00d8 1B69     		ldr	r3, [r3, #16]
 197 00da 23F00042 		bic	r2, r3, #-2147483648
 198 00de 7B68     		ldr	r3, [r7, #4]
 199 00e0 5B68     		ldr	r3, [r3, #4]
 200 00e2 1344     		add	r3, r3, r2
 201 00e4 7A68     		ldr	r2, [r7, #4]
 202 00e6 D268     		ldr	r2, [r2, #12]
 203 00e8 02FB03F3 		mul	r3, r2, r3
 204 00ec 1846     		mov	r0, r3
 205 00ee FFF7FEFF 		bl	ka_malloc
 206 00f2 0246     		mov	r2, r0
 207 00f4 7B68     		ldr	r3, [r7, #4]
 208 00f6 1A60     		str	r2, [r3]
 209              	.L12:
  44:../../source/src/kernel/OS_LIB/vector.c **** 	}
  45:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr->data_ptr);
 210              		.loc 1 45 0
 211 00f8 7B68     		ldr	r3, [r7, #4]
 212 00fa 1B68     		ldr	r3, [r3]
 213 00fc 002B     		cmp	r3, #0
 214 00fe 03D1     		bne	.L13
 215              		.loc 1 45 0 is_stmt 0 discriminator 1
 216 0100 2D21     		movs	r1, #45
 217 0102 1B48     		ldr	r0, .L18
 218 0104 FFF7FEFF 		bl	_ASSERT
 219              	.L13:
  46:../../source/src/kernel/OS_LIB/vector.c **** 	if(NULL == vector_ptr->data_ptr)
 220              		.loc 1 46 0 is_stmt 1
 221 0108 7B68     		ldr	r3, [r7, #4]
 222 010a 1B68     		ldr	r3, [r3]
 223 010c 002B     		cmp	r3, #0
 224 010e 02D1     		bne	.L14
  47:../../source/src/kernel/OS_LIB/vector.c **** 	{
  48:../../source/src/kernel/OS_LIB/vector.c **** 		return -ERROR_ALLOCATE_ROOM;
 225              		.loc 1 48 0
 226 0110 4FF0FF33 		mov	r3, #-1
 227 0114 27E0     		b	.L15
 228              	.L14:
  49:../../source/src/kernel/OS_LIB/vector.c **** 	}
  50:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy(vector_ptr->data_ptr,buffer_ptr,vector_ptr->max_len * vector_ptr->data_size);
 229              		.loc 1 50 0
 230 0116 7B68     		ldr	r3, [r7, #4]
 231 0118 1868     		ldr	r0, [r3]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 6


 232 011a 7B68     		ldr	r3, [r7, #4]
 233 011c 5B68     		ldr	r3, [r3, #4]
 234 011e 7A68     		ldr	r2, [r7, #4]
 235 0120 D268     		ldr	r2, [r2, #12]
 236 0122 02FB03F3 		mul	r3, r2, r3
 237 0126 1A46     		mov	r2, r3
 238 0128 F968     		ldr	r1, [r7, #12]
 239 012a FFF7FEFF 		bl	ka_memcpy
  51:../../source/src/kernel/OS_LIB/vector.c **** 	if(VFISMUL(vector_ptr->extension_factor))
 240              		.loc 1 51 0
 241 012e 7B68     		ldr	r3, [r7, #4]
 242 0130 1B69     		ldr	r3, [r3, #16]
 243 0132 002B     		cmp	r3, #0
 244 0134 0ADA     		bge	.L16
  52:../../source/src/kernel/OS_LIB/vector.c **** 	{
  53:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->max_len *= GET_EXPENSION_FACTOR(vector_ptr->extension_factor);
 245              		.loc 1 53 0
 246 0136 7B68     		ldr	r3, [r7, #4]
 247 0138 5B68     		ldr	r3, [r3, #4]
 248 013a 7A68     		ldr	r2, [r7, #4]
 249 013c 1269     		ldr	r2, [r2, #16]
 250 013e 22F00042 		bic	r2, r2, #-2147483648
 251 0142 02FB03F2 		mul	r2, r2, r3
 252 0146 7B68     		ldr	r3, [r7, #4]
 253 0148 5A60     		str	r2, [r3, #4]
 254 014a 08E0     		b	.L17
 255              	.L16:
  54:../../source/src/kernel/OS_LIB/vector.c **** 	}
  55:../../source/src/kernel/OS_LIB/vector.c **** 	else
  56:../../source/src/kernel/OS_LIB/vector.c **** 	{
  57:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->max_len += GET_EXPENSION_FACTOR(vector_ptr->extension_factor);
 256              		.loc 1 57 0
 257 014c 7B68     		ldr	r3, [r7, #4]
 258 014e 5A68     		ldr	r2, [r3, #4]
 259 0150 7B68     		ldr	r3, [r7, #4]
 260 0152 1B69     		ldr	r3, [r3, #16]
 261 0154 23F00043 		bic	r3, r3, #-2147483648
 262 0158 1A44     		add	r2, r2, r3
 263 015a 7B68     		ldr	r3, [r7, #4]
 264 015c 5A60     		str	r2, [r3, #4]
 265              	.L17:
  58:../../source/src/kernel/OS_LIB/vector.c **** 	}
  59:../../source/src/kernel/OS_LIB/vector.c **** 	
  60:../../source/src/kernel/OS_LIB/vector.c **** 	f_free(buffer_ptr);
 266              		.loc 1 60 0
 267 015e F868     		ldr	r0, [r7, #12]
 268 0160 FFF7FEFF 		bl	ka_free
  61:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 269              		.loc 1 61 0
 270 0164 0023     		movs	r3, #0
 271              	.L15:
  62:../../source/src/kernel/OS_LIB/vector.c **** }
 272              		.loc 1 62 0
 273 0166 1846     		mov	r0, r3
 274 0168 1037     		adds	r7, r7, #16
 275              	.LCFI8:
 276              		.cfi_def_cfa_offset 8
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 7


 277 016a BD46     		mov	sp, r7
 278              	.LCFI9:
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 016c 80BD     		pop	{r7, pc}
 282              	.L19:
 283 016e 00BF     		.align	2
 284              	.L18:
 285 0170 00000000 		.word	.LC0
 286              		.cfi_endproc
 287              	.LFE7:
 288              		.size	expand_room, .-expand_room
 289              		.align	1
 290              		.global	Vector_push_back
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 295              		.type	Vector_push_back, %function
 296              	Vector_push_back:
 297              	.LFB8:
  63:../../source/src/kernel/OS_LIB/vector.c **** 
  64:../../source/src/kernel/OS_LIB/vector.c **** /*
  65:../../source/src/kernel/OS_LIB/vector.c **** add a data at tail
  66:../../source/src/kernel/OS_LIB/vector.c ****  */
  67:../../source/src/kernel/OS_LIB/vector.c **** int Vector_push_back(Vector *vector_ptr,void *push_data_ptr)
  68:../../source/src/kernel/OS_LIB/vector.c **** {
 298              		.loc 1 68 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0174 80B5     		push	{r7, lr}
 303              	.LCFI10:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0176 82B0     		sub	sp, sp, #8
 308              	.LCFI11:
 309              		.cfi_def_cfa_offset 16
 310 0178 00AF     		add	r7, sp, #0
 311              	.LCFI12:
 312              		.cfi_def_cfa_register 7
 313 017a 7860     		str	r0, [r7, #4]
 314 017c 3960     		str	r1, [r7]
  69:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 315              		.loc 1 69 0
 316 017e 7B68     		ldr	r3, [r7, #4]
 317 0180 002B     		cmp	r3, #0
 318 0182 03D1     		bne	.L21
 319              		.loc 1 69 0 is_stmt 0 discriminator 1
 320 0184 4521     		movs	r1, #69
 321 0186 2848     		ldr	r0, .L28
 322 0188 FFF7FEFF 		bl	_ASSERT
 323              	.L21:
  70:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != push_data_ptr);
 324              		.loc 1 70 0 is_stmt 1
 325 018c 3B68     		ldr	r3, [r7]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 8


 326 018e 002B     		cmp	r3, #0
 327 0190 03D1     		bne	.L22
 328              		.loc 1 70 0 is_stmt 0 discriminator 1
 329 0192 4621     		movs	r1, #70
 330 0194 2448     		ldr	r0, .L28
 331 0196 FFF7FEFF 		bl	_ASSERT
 332              	.L22:
  71:../../source/src/kernel/OS_LIB/vector.c **** 	if(vector_ptr->cur_len < vector_ptr->max_len)
 333              		.loc 1 71 0 is_stmt 1
 334 019a 7B68     		ldr	r3, [r7, #4]
 335 019c 9A68     		ldr	r2, [r3, #8]
 336 019e 7B68     		ldr	r3, [r7, #4]
 337 01a0 5B68     		ldr	r3, [r3, #4]
 338 01a2 9A42     		cmp	r2, r3
 339 01a4 14D2     		bcs	.L23
  72:../../source/src/kernel/OS_LIB/vector.c **** 	{
  73:../../source/src/kernel/OS_LIB/vector.c **** 		f_memcpy((char*)(vector_ptr->data_ptr) + vector_ptr->cur_len * vector_ptr->data_size,push_data_pt
 340              		.loc 1 73 0
 341 01a6 7B68     		ldr	r3, [r7, #4]
 342 01a8 1A68     		ldr	r2, [r3]
 343 01aa 7B68     		ldr	r3, [r7, #4]
 344 01ac 9B68     		ldr	r3, [r3, #8]
 345 01ae 7968     		ldr	r1, [r7, #4]
 346 01b0 C968     		ldr	r1, [r1, #12]
 347 01b2 01FB03F3 		mul	r3, r1, r3
 348 01b6 D018     		adds	r0, r2, r3
 349 01b8 7B68     		ldr	r3, [r7, #4]
 350 01ba DB68     		ldr	r3, [r3, #12]
 351 01bc 1A46     		mov	r2, r3
 352 01be 3968     		ldr	r1, [r7]
 353 01c0 FFF7FEFF 		bl	ka_memcpy
  74:../../source/src/kernel/OS_LIB/vector.c **** 		++(vector_ptr->cur_len);
 354              		.loc 1 74 0
 355 01c4 7B68     		ldr	r3, [r7, #4]
 356 01c6 9B68     		ldr	r3, [r3, #8]
 357 01c8 5A1C     		adds	r2, r3, #1
 358 01ca 7B68     		ldr	r3, [r7, #4]
 359 01cc 9A60     		str	r2, [r3, #8]
 360 01ce 26E0     		b	.L24
 361              	.L23:
  75:../../source/src/kernel/OS_LIB/vector.c **** 	}
  76:../../source/src/kernel/OS_LIB/vector.c **** 	else
  77:../../source/src/kernel/OS_LIB/vector.c **** 	{
  78:../../source/src/kernel/OS_LIB/vector.c **** 		ASSERT(vector_ptr->cur_len == vector_ptr->max_len);
 362              		.loc 1 78 0
 363 01d0 7B68     		ldr	r3, [r7, #4]
 364 01d2 9A68     		ldr	r2, [r3, #8]
 365 01d4 7B68     		ldr	r3, [r7, #4]
 366 01d6 5B68     		ldr	r3, [r3, #4]
 367 01d8 9A42     		cmp	r2, r3
 368 01da 03D0     		beq	.L25
 369              		.loc 1 78 0 is_stmt 0 discriminator 1
 370 01dc 4E21     		movs	r1, #78
 371 01de 1248     		ldr	r0, .L28
 372 01e0 FFF7FEFF 		bl	_ASSERT
 373              	.L25:
  79:../../source/src/kernel/OS_LIB/vector.c **** 		if(expand_room(vector_ptr) < 0)
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 9


 374              		.loc 1 79 0 is_stmt 1
 375 01e4 7868     		ldr	r0, [r7, #4]
 376 01e6 FFF747FF 		bl	expand_room
 377 01ea 0346     		mov	r3, r0
 378 01ec 002B     		cmp	r3, #0
 379 01ee 02DA     		bge	.L26
  80:../../source/src/kernel/OS_LIB/vector.c **** 		{
  81:../../source/src/kernel/OS_LIB/vector.c **** 			return -ERROR_ALLOCATE_ROOM;
 380              		.loc 1 81 0
 381 01f0 4FF0FF33 		mov	r3, #-1
 382 01f4 14E0     		b	.L27
 383              	.L26:
  82:../../source/src/kernel/OS_LIB/vector.c **** 		}
  83:../../source/src/kernel/OS_LIB/vector.c **** 		f_memcpy((char*)(vector_ptr->data_ptr) + vector_ptr->cur_len * vector_ptr->data_size,push_data_pt
 384              		.loc 1 83 0
 385 01f6 7B68     		ldr	r3, [r7, #4]
 386 01f8 1A68     		ldr	r2, [r3]
 387 01fa 7B68     		ldr	r3, [r7, #4]
 388 01fc 9B68     		ldr	r3, [r3, #8]
 389 01fe 7968     		ldr	r1, [r7, #4]
 390 0200 C968     		ldr	r1, [r1, #12]
 391 0202 01FB03F3 		mul	r3, r1, r3
 392 0206 D018     		adds	r0, r2, r3
 393 0208 7B68     		ldr	r3, [r7, #4]
 394 020a DB68     		ldr	r3, [r3, #12]
 395 020c 1A46     		mov	r2, r3
 396 020e 3968     		ldr	r1, [r7]
 397 0210 FFF7FEFF 		bl	ka_memcpy
  84:../../source/src/kernel/OS_LIB/vector.c **** 		++(vector_ptr->cur_len);
 398              		.loc 1 84 0
 399 0214 7B68     		ldr	r3, [r7, #4]
 400 0216 9B68     		ldr	r3, [r3, #8]
 401 0218 5A1C     		adds	r2, r3, #1
 402 021a 7B68     		ldr	r3, [r7, #4]
 403 021c 9A60     		str	r2, [r3, #8]
 404              	.L24:
  85:../../source/src/kernel/OS_LIB/vector.c **** 	}
  86:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 405              		.loc 1 86 0
 406 021e 0023     		movs	r3, #0
 407              	.L27:
  87:../../source/src/kernel/OS_LIB/vector.c **** }
 408              		.loc 1 87 0
 409 0220 1846     		mov	r0, r3
 410 0222 0837     		adds	r7, r7, #8
 411              	.LCFI13:
 412              		.cfi_def_cfa_offset 8
 413 0224 BD46     		mov	sp, r7
 414              	.LCFI14:
 415              		.cfi_def_cfa_register 13
 416              		@ sp needed
 417 0226 80BD     		pop	{r7, pc}
 418              	.L29:
 419              		.align	2
 420              	.L28:
 421 0228 00000000 		.word	.LC0
 422              		.cfi_endproc
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 10


 423              	.LFE8:
 424              		.size	Vector_push_back, .-Vector_push_back
 425              		.align	1
 426              		.global	Vector_pop_back
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 431              		.type	Vector_pop_back, %function
 432              	Vector_pop_back:
 433              	.LFB9:
  88:../../source/src/kernel/OS_LIB/vector.c **** 
  89:../../source/src/kernel/OS_LIB/vector.c **** /*
  90:../../source/src/kernel/OS_LIB/vector.c **** pop the tail datta and store it into pop_data_ptr
  91:../../source/src/kernel/OS_LIB/vector.c ****  */
  92:../../source/src/kernel/OS_LIB/vector.c **** int Vector_pop_back(Vector *vector_ptr,void *pop_data_ptr)
  93:../../source/src/kernel/OS_LIB/vector.c **** {
 434              		.loc 1 93 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 8
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438 022c 80B5     		push	{r7, lr}
 439              	.LCFI15:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 022e 82B0     		sub	sp, sp, #8
 444              	.LCFI16:
 445              		.cfi_def_cfa_offset 16
 446 0230 00AF     		add	r7, sp, #0
 447              	.LCFI17:
 448              		.cfi_def_cfa_register 7
 449 0232 7860     		str	r0, [r7, #4]
 450 0234 3960     		str	r1, [r7]
  94:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 451              		.loc 1 94 0
 452 0236 7B68     		ldr	r3, [r7, #4]
 453 0238 002B     		cmp	r3, #0
 454 023a 03D1     		bne	.L31
 455              		.loc 1 94 0 is_stmt 0 discriminator 1
 456 023c 5E21     		movs	r1, #94
 457 023e 1348     		ldr	r0, .L35
 458 0240 FFF7FEFF 		bl	_ASSERT
 459              	.L31:
  95:../../source/src/kernel/OS_LIB/vector.c **** 	if(0 == vector_ptr->cur_len)
 460              		.loc 1 95 0 is_stmt 1
 461 0244 7B68     		ldr	r3, [r7, #4]
 462 0246 9B68     		ldr	r3, [r3, #8]
 463 0248 002B     		cmp	r3, #0
 464 024a 02D1     		bne	.L32
  96:../../source/src/kernel/OS_LIB/vector.c **** 	{
  97:../../source/src/kernel/OS_LIB/vector.c **** 		return -ERROR_DATA_EMPTY;
 465              		.loc 1 97 0
 466 024c 6FF00103 		mvn	r3, #1
 467 0250 17E0     		b	.L33
 468              	.L32:
  98:../../source/src/kernel/OS_LIB/vector.c **** 	}
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 11


  99:../../source/src/kernel/OS_LIB/vector.c **** 	--(vector_ptr->cur_len);
 469              		.loc 1 99 0
 470 0252 7B68     		ldr	r3, [r7, #4]
 471 0254 9B68     		ldr	r3, [r3, #8]
 472 0256 5A1E     		subs	r2, r3, #1
 473 0258 7B68     		ldr	r3, [r7, #4]
 474 025a 9A60     		str	r2, [r3, #8]
 100:../../source/src/kernel/OS_LIB/vector.c **** 	if(pop_data_ptr) /* if NULL != pop_data_ptr*/
 475              		.loc 1 100 0
 476 025c 3B68     		ldr	r3, [r7]
 477 025e 002B     		cmp	r3, #0
 478 0260 0ED0     		beq	.L34
 101:../../source/src/kernel/OS_LIB/vector.c **** 		f_memcpy(pop_data_ptr,(char*)(vector_ptr->data_ptr) + vector_ptr->cur_len * vector_ptr->data_size
 479              		.loc 1 101 0
 480 0262 7B68     		ldr	r3, [r7, #4]
 481 0264 1A68     		ldr	r2, [r3]
 482 0266 7B68     		ldr	r3, [r7, #4]
 483 0268 9B68     		ldr	r3, [r3, #8]
 484 026a 7968     		ldr	r1, [r7, #4]
 485 026c C968     		ldr	r1, [r1, #12]
 486 026e 01FB03F3 		mul	r3, r1, r3
 487 0272 D118     		adds	r1, r2, r3
 488 0274 7B68     		ldr	r3, [r7, #4]
 489 0276 DB68     		ldr	r3, [r3, #12]
 490 0278 1A46     		mov	r2, r3
 491 027a 3868     		ldr	r0, [r7]
 492 027c FFF7FEFF 		bl	ka_memcpy
 493              	.L34:
 102:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 494              		.loc 1 102 0
 495 0280 0023     		movs	r3, #0
 496              	.L33:
 103:../../source/src/kernel/OS_LIB/vector.c **** }
 497              		.loc 1 103 0
 498 0282 1846     		mov	r0, r3
 499 0284 0837     		adds	r7, r7, #8
 500              	.LCFI18:
 501              		.cfi_def_cfa_offset 8
 502 0286 BD46     		mov	sp, r7
 503              	.LCFI19:
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 0288 80BD     		pop	{r7, pc}
 507              	.L36:
 508 028a 00BF     		.align	2
 509              	.L35:
 510 028c 00000000 		.word	.LC0
 511              		.cfi_endproc
 512              	.LFE9:
 513              		.size	Vector_pop_back, .-Vector_pop_back
 514              		.align	1
 515              		.global	Vector_erase_data
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu softvfp
 520              		.type	Vector_erase_data, %function
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 12


 521              	Vector_erase_data:
 522              	.LFB10:
 104:../../source/src/kernel/OS_LIB/vector.c **** 
 105:../../source/src/kernel/OS_LIB/vector.c **** /*
 106:../../source/src/kernel/OS_LIB/vector.c **** delete the data between index "from" to "to"
 107:../../source/src/kernel/OS_LIB/vector.c ****  */
 108:../../source/src/kernel/OS_LIB/vector.c **** int Vector_erase_data(Vector *vector_ptr,unsigned int from,unsigned int to)
 109:../../source/src/kernel/OS_LIB/vector.c **** {
 523              		.loc 1 109 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0290 80B5     		push	{r7, lr}
 528              	.LCFI20:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0292 84B0     		sub	sp, sp, #16
 533              	.LCFI21:
 534              		.cfi_def_cfa_offset 24
 535 0294 00AF     		add	r7, sp, #0
 536              	.LCFI22:
 537              		.cfi_def_cfa_register 7
 538 0296 F860     		str	r0, [r7, #12]
 539 0298 B960     		str	r1, [r7, #8]
 540 029a 7A60     		str	r2, [r7, #4]
 110:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 541              		.loc 1 110 0
 542 029c FB68     		ldr	r3, [r7, #12]
 543 029e 002B     		cmp	r3, #0
 544 02a0 03D1     		bne	.L38
 545              		.loc 1 110 0 is_stmt 0 discriminator 1
 546 02a2 6E21     		movs	r1, #110
 547 02a4 1F48     		ldr	r0, .L42
 548 02a6 FFF7FEFF 		bl	_ASSERT
 549              	.L38:
 111:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(from <= to);
 550              		.loc 1 111 0 is_stmt 1
 551 02aa BA68     		ldr	r2, [r7, #8]
 552 02ac 7B68     		ldr	r3, [r7, #4]
 553 02ae 9A42     		cmp	r2, r3
 554 02b0 03D9     		bls	.L39
 555              		.loc 1 111 0 is_stmt 0 discriminator 1
 556 02b2 6F21     		movs	r1, #111
 557 02b4 1B48     		ldr	r0, .L42
 558 02b6 FFF7FEFF 		bl	_ASSERT
 559              	.L39:
 112:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(to < vector_ptr->cur_len);
 560              		.loc 1 112 0 is_stmt 1
 561 02ba FB68     		ldr	r3, [r7, #12]
 562 02bc 9B68     		ldr	r3, [r3, #8]
 563 02be 7A68     		ldr	r2, [r7, #4]
 564 02c0 9A42     		cmp	r2, r3
 565 02c2 03D3     		bcc	.L40
 566              		.loc 1 112 0 is_stmt 0 discriminator 1
 567 02c4 7021     		movs	r1, #112
 568 02c6 1748     		ldr	r0, .L42
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 13


 569 02c8 FFF7FEFF 		bl	_ASSERT
 570              	.L40:
 113:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy((char*)(vector_ptr->data_ptr) + from * vector_ptr->data_size,
 571              		.loc 1 113 0 is_stmt 1
 572 02cc FB68     		ldr	r3, [r7, #12]
 573 02ce 1A68     		ldr	r2, [r3]
 574 02d0 FB68     		ldr	r3, [r7, #12]
 575 02d2 DB68     		ldr	r3, [r3, #12]
 576 02d4 B968     		ldr	r1, [r7, #8]
 577 02d6 01FB03F3 		mul	r3, r1, r3
 578 02da D018     		adds	r0, r2, r3
 579 02dc FB68     		ldr	r3, [r7, #12]
 580 02de 1A68     		ldr	r2, [r3]
 581 02e0 7B68     		ldr	r3, [r7, #4]
 582 02e2 0133     		adds	r3, r3, #1
 583 02e4 F968     		ldr	r1, [r7, #12]
 584 02e6 C968     		ldr	r1, [r1, #12]
 585 02e8 01FB03F3 		mul	r3, r1, r3
 586 02ec D118     		adds	r1, r2, r3
 587 02ee FB68     		ldr	r3, [r7, #12]
 588 02f0 9A68     		ldr	r2, [r3, #8]
 589 02f2 7B68     		ldr	r3, [r7, #4]
 590 02f4 D31A     		subs	r3, r2, r3
 591 02f6 013B     		subs	r3, r3, #1
 592 02f8 FA68     		ldr	r2, [r7, #12]
 593 02fa D268     		ldr	r2, [r2, #12]
 594 02fc 02FB03F3 		mul	r3, r2, r3
 595 0300 1A46     		mov	r2, r3
 596 0302 FFF7FEFF 		bl	ka_memcpy
 114:../../source/src/kernel/OS_LIB/vector.c **** 		(char*)(vector_ptr->data_ptr) + (to + 1) * vector_ptr->data_size,
 115:../../source/src/kernel/OS_LIB/vector.c **** 		(vector_ptr->cur_len - to - 1)*vector_ptr->data_size);
 116:../../source/src/kernel/OS_LIB/vector.c **** 	vector_ptr->cur_len -= to - from + 1;
 597              		.loc 1 116 0
 598 0306 FB68     		ldr	r3, [r7, #12]
 599 0308 9A68     		ldr	r2, [r3, #8]
 600 030a B968     		ldr	r1, [r7, #8]
 601 030c 7B68     		ldr	r3, [r7, #4]
 602 030e CB1A     		subs	r3, r1, r3
 603 0310 1344     		add	r3, r3, r2
 604 0312 5A1E     		subs	r2, r3, #1
 605 0314 FB68     		ldr	r3, [r7, #12]
 606 0316 9A60     		str	r2, [r3, #8]
 117:../../source/src/kernel/OS_LIB/vector.c **** 	/*add memory management here*/
 118:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 607              		.loc 1 118 0
 608 0318 0023     		movs	r3, #0
 119:../../source/src/kernel/OS_LIB/vector.c **** }
 609              		.loc 1 119 0
 610 031a 1846     		mov	r0, r3
 611 031c 1037     		adds	r7, r7, #16
 612              	.LCFI23:
 613              		.cfi_def_cfa_offset 8
 614 031e BD46     		mov	sp, r7
 615              	.LCFI24:
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 0320 80BD     		pop	{r7, pc}
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 14


 619              	.L43:
 620 0322 00BF     		.align	2
 621              	.L42:
 622 0324 00000000 		.word	.LC0
 623              		.cfi_endproc
 624              	.LFE10:
 625              		.size	Vector_erase_data, .-Vector_erase_data
 626              		.align	1
 627              		.global	Vector_remove_index_data
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu softvfp
 632              		.type	Vector_remove_index_data, %function
 633              	Vector_remove_index_data:
 634              	.LFB11:
 120:../../source/src/kernel/OS_LIB/vector.c **** 
 121:../../source/src/kernel/OS_LIB/vector.c **** /*
 122:../../source/src/kernel/OS_LIB/vector.c **** remove the data Vector[index] and store it into *data_store_ptrs
 123:../../source/src/kernel/OS_LIB/vector.c ****  */
 124:../../source/src/kernel/OS_LIB/vector.c **** /*if data_store_ptr is NULL,do not store*/
 125:../../source/src/kernel/OS_LIB/vector.c **** int Vector_remove_index_data(Vector *vector_ptr,unsigned int index,void *data_store_ptr)
 126:../../source/src/kernel/OS_LIB/vector.c **** {
 635              		.loc 1 126 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 16
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0328 80B5     		push	{r7, lr}
 640              	.LCFI25:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 032a 84B0     		sub	sp, sp, #16
 645              	.LCFI26:
 646              		.cfi_def_cfa_offset 24
 647 032c 00AF     		add	r7, sp, #0
 648              	.LCFI27:
 649              		.cfi_def_cfa_register 7
 650 032e F860     		str	r0, [r7, #12]
 651 0330 B960     		str	r1, [r7, #8]
 652 0332 7A60     		str	r2, [r7, #4]
 127:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 653              		.loc 1 127 0
 654 0334 FB68     		ldr	r3, [r7, #12]
 655 0336 002B     		cmp	r3, #0
 656 0338 03D1     		bne	.L45
 657              		.loc 1 127 0 is_stmt 0 discriminator 1
 658 033a 7F21     		movs	r1, #127
 659 033c 2148     		ldr	r0, .L49
 660 033e FFF7FEFF 		bl	_ASSERT
 661              	.L45:
 128:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(index < vector_ptr->cur_len);
 662              		.loc 1 128 0 is_stmt 1
 663 0342 FB68     		ldr	r3, [r7, #12]
 664 0344 9B68     		ldr	r3, [r3, #8]
 665 0346 BA68     		ldr	r2, [r7, #8]
 666 0348 9A42     		cmp	r2, r3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 15


 667 034a 03D3     		bcc	.L46
 668              		.loc 1 128 0 is_stmt 0 discriminator 1
 669 034c 8021     		movs	r1, #128
 670 034e 1D48     		ldr	r0, .L49
 671 0350 FFF7FEFF 		bl	_ASSERT
 672              	.L46:
 129:../../source/src/kernel/OS_LIB/vector.c **** 	if(data_store_ptr)
 673              		.loc 1 129 0 is_stmt 1
 674 0354 7B68     		ldr	r3, [r7, #4]
 675 0356 002B     		cmp	r3, #0
 676 0358 0DD0     		beq	.L47
 130:../../source/src/kernel/OS_LIB/vector.c **** 	{
 131:../../source/src/kernel/OS_LIB/vector.c **** 		f_memcpy(data_store_ptr,(char*)(vector_ptr->data_ptr) + index * vector_ptr->data_size,vector_ptr-
 677              		.loc 1 131 0
 678 035a FB68     		ldr	r3, [r7, #12]
 679 035c 1A68     		ldr	r2, [r3]
 680 035e FB68     		ldr	r3, [r7, #12]
 681 0360 DB68     		ldr	r3, [r3, #12]
 682 0362 B968     		ldr	r1, [r7, #8]
 683 0364 01FB03F3 		mul	r3, r1, r3
 684 0368 D118     		adds	r1, r2, r3
 685 036a FB68     		ldr	r3, [r7, #12]
 686 036c DB68     		ldr	r3, [r3, #12]
 687 036e 1A46     		mov	r2, r3
 688 0370 7868     		ldr	r0, [r7, #4]
 689 0372 FFF7FEFF 		bl	ka_memcpy
 690              	.L47:
 132:../../source/src/kernel/OS_LIB/vector.c **** 	}
 133:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy((char*)(vector_ptr->data_ptr) + index * vector_ptr->data_size,
 691              		.loc 1 133 0
 692 0376 FB68     		ldr	r3, [r7, #12]
 693 0378 1A68     		ldr	r2, [r3]
 694 037a FB68     		ldr	r3, [r7, #12]
 695 037c DB68     		ldr	r3, [r3, #12]
 696 037e B968     		ldr	r1, [r7, #8]
 697 0380 01FB03F3 		mul	r3, r1, r3
 698 0384 D018     		adds	r0, r2, r3
 699 0386 FB68     		ldr	r3, [r7, #12]
 700 0388 1A68     		ldr	r2, [r3]
 701 038a BB68     		ldr	r3, [r7, #8]
 702 038c 0133     		adds	r3, r3, #1
 703 038e F968     		ldr	r1, [r7, #12]
 704 0390 C968     		ldr	r1, [r1, #12]
 705 0392 01FB03F3 		mul	r3, r1, r3
 706 0396 D118     		adds	r1, r2, r3
 707 0398 FB68     		ldr	r3, [r7, #12]
 708 039a 9A68     		ldr	r2, [r3, #8]
 709 039c BB68     		ldr	r3, [r7, #8]
 710 039e D31A     		subs	r3, r2, r3
 711 03a0 013B     		subs	r3, r3, #1
 712 03a2 FA68     		ldr	r2, [r7, #12]
 713 03a4 D268     		ldr	r2, [r2, #12]
 714 03a6 02FB03F3 		mul	r3, r2, r3
 715 03aa 1A46     		mov	r2, r3
 716 03ac FFF7FEFF 		bl	ka_memcpy
 134:../../source/src/kernel/OS_LIB/vector.c **** 		(char*)(vector_ptr->data_ptr) + (index + 1) * vector_ptr->data_size,
 135:../../source/src/kernel/OS_LIB/vector.c **** 		(vector_ptr->cur_len - index - 1)*vector_ptr->data_size);
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 16


 136:../../source/src/kernel/OS_LIB/vector.c **** 	--vector_ptr->cur_len;
 717              		.loc 1 136 0
 718 03b0 FB68     		ldr	r3, [r7, #12]
 719 03b2 9B68     		ldr	r3, [r3, #8]
 720 03b4 5A1E     		subs	r2, r3, #1
 721 03b6 FB68     		ldr	r3, [r7, #12]
 722 03b8 9A60     		str	r2, [r3, #8]
 137:../../source/src/kernel/OS_LIB/vector.c **** 	/*add memory management here*/
 138:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 723              		.loc 1 138 0
 724 03ba 0023     		movs	r3, #0
 139:../../source/src/kernel/OS_LIB/vector.c **** }
 725              		.loc 1 139 0
 726 03bc 1846     		mov	r0, r3
 727 03be 1037     		adds	r7, r7, #16
 728              	.LCFI28:
 729              		.cfi_def_cfa_offset 8
 730 03c0 BD46     		mov	sp, r7
 731              	.LCFI29:
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 03c2 80BD     		pop	{r7, pc}
 735              	.L50:
 736              		.align	2
 737              	.L49:
 738 03c4 00000000 		.word	.LC0
 739              		.cfi_endproc
 740              	.LFE11:
 741              		.size	Vector_remove_index_data, .-Vector_remove_index_data
 742              		.align	1
 743              		.global	Vector_set_inner
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu softvfp
 748              		.type	Vector_set_inner, %function
 749              	Vector_set_inner:
 750              	.LFB12:
 140:../../source/src/kernel/OS_LIB/vector.c **** 
 141:../../source/src/kernel/OS_LIB/vector.c **** /*
 142:../../source/src/kernel/OS_LIB/vector.c **** 	set Vector[dest_index] = Vector[src_index]
 143:../../source/src/kernel/OS_LIB/vector.c ****  */ 
 144:../../source/src/kernel/OS_LIB/vector.c **** int Vector_set_inner(Vector *vector_ptr,unsigned int dest_index,unsigned int src_index)
 145:../../source/src/kernel/OS_LIB/vector.c **** {
 751              		.loc 1 145 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 16
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755 03c8 80B5     		push	{r7, lr}
 756              	.LCFI30:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 03ca 84B0     		sub	sp, sp, #16
 761              	.LCFI31:
 762              		.cfi_def_cfa_offset 24
 763 03cc 00AF     		add	r7, sp, #0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 17


 764              	.LCFI32:
 765              		.cfi_def_cfa_register 7
 766 03ce F860     		str	r0, [r7, #12]
 767 03d0 B960     		str	r1, [r7, #8]
 768 03d2 7A60     		str	r2, [r7, #4]
 146:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 769              		.loc 1 146 0
 770 03d4 FB68     		ldr	r3, [r7, #12]
 771 03d6 002B     		cmp	r3, #0
 772 03d8 03D1     		bne	.L52
 773              		.loc 1 146 0 is_stmt 0 discriminator 1
 774 03da 9221     		movs	r1, #146
 775 03dc 1848     		ldr	r0, .L57
 776 03de FFF7FEFF 		bl	_ASSERT
 777              	.L52:
 147:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT((dest_index < vector_ptr->cur_len) && (src_index < vector_ptr->cur_len));
 778              		.loc 1 147 0 is_stmt 1
 779 03e2 FB68     		ldr	r3, [r7, #12]
 780 03e4 9B68     		ldr	r3, [r3, #8]
 781 03e6 BA68     		ldr	r2, [r7, #8]
 782 03e8 9A42     		cmp	r2, r3
 783 03ea 04D2     		bcs	.L53
 784              		.loc 1 147 0 is_stmt 0 discriminator 1
 785 03ec FB68     		ldr	r3, [r7, #12]
 786 03ee 9B68     		ldr	r3, [r3, #8]
 787 03f0 7A68     		ldr	r2, [r7, #4]
 788 03f2 9A42     		cmp	r2, r3
 789 03f4 03D3     		bcc	.L54
 790              	.L53:
 791              		.loc 1 147 0 discriminator 3
 792 03f6 9321     		movs	r1, #147
 793 03f8 1148     		ldr	r0, .L57
 794 03fa FFF7FEFF 		bl	_ASSERT
 795              	.L54:
 148:../../source/src/kernel/OS_LIB/vector.c **** 	if(dest_index == src_index)
 796              		.loc 1 148 0 is_stmt 1
 797 03fe BA68     		ldr	r2, [r7, #8]
 798 0400 7B68     		ldr	r3, [r7, #4]
 799 0402 9A42     		cmp	r2, r3
 800 0404 01D1     		bne	.L55
 149:../../source/src/kernel/OS_LIB/vector.c **** 	{
 150:../../source/src/kernel/OS_LIB/vector.c **** 		return FUN_EXECUTE_SUCCESSFULLY;
 801              		.loc 1 150 0
 802 0406 0023     		movs	r3, #0
 803 0408 15E0     		b	.L56
 804              	.L55:
 151:../../source/src/kernel/OS_LIB/vector.c **** 	}
 152:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy((char*)(vector_ptr->data_ptr) + dest_index * vector_ptr->data_size,
 805              		.loc 1 152 0
 806 040a FB68     		ldr	r3, [r7, #12]
 807 040c 1A68     		ldr	r2, [r3]
 808 040e FB68     		ldr	r3, [r7, #12]
 809 0410 DB68     		ldr	r3, [r3, #12]
 810 0412 B968     		ldr	r1, [r7, #8]
 811 0414 01FB03F3 		mul	r3, r1, r3
 812 0418 D018     		adds	r0, r2, r3
 813 041a FB68     		ldr	r3, [r7, #12]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 18


 814 041c 1A68     		ldr	r2, [r3]
 815 041e FB68     		ldr	r3, [r7, #12]
 816 0420 DB68     		ldr	r3, [r3, #12]
 817 0422 7968     		ldr	r1, [r7, #4]
 818 0424 01FB03F3 		mul	r3, r1, r3
 819 0428 D118     		adds	r1, r2, r3
 820 042a FB68     		ldr	r3, [r7, #12]
 821 042c DB68     		ldr	r3, [r3, #12]
 822 042e 1A46     		mov	r2, r3
 823 0430 FFF7FEFF 		bl	ka_memcpy
 153:../../source/src/kernel/OS_LIB/vector.c **** 		(char*)(vector_ptr->data_ptr) + src_index * vector_ptr->data_size,
 154:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_size);
 155:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 824              		.loc 1 155 0
 825 0434 0023     		movs	r3, #0
 826              	.L56:
 156:../../source/src/kernel/OS_LIB/vector.c **** }
 827              		.loc 1 156 0
 828 0436 1846     		mov	r0, r3
 829 0438 1037     		adds	r7, r7, #16
 830              	.LCFI33:
 831              		.cfi_def_cfa_offset 8
 832 043a BD46     		mov	sp, r7
 833              	.LCFI34:
 834              		.cfi_def_cfa_register 13
 835              		@ sp needed
 836 043c 80BD     		pop	{r7, pc}
 837              	.L58:
 838 043e 00BF     		.align	2
 839              	.L57:
 840 0440 00000000 		.word	.LC0
 841              		.cfi_endproc
 842              	.LFE12:
 843              		.size	Vector_set_inner, .-Vector_set_inner
 844              		.align	1
 845              		.global	Vector_swap_inner
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 849              		.fpu softvfp
 850              		.type	Vector_swap_inner, %function
 851              	Vector_swap_inner:
 852              	.LFB13:
 157:../../source/src/kernel/OS_LIB/vector.c **** 
 158:../../source/src/kernel/OS_LIB/vector.c **** /*
 159:../../source/src/kernel/OS_LIB/vector.c **** swap the data between index "index1" and "index2"
 160:../../source/src/kernel/OS_LIB/vector.c ****  */
 161:../../source/src/kernel/OS_LIB/vector.c **** int Vector_swap_inner(Vector *vector_ptr,unsigned int index1,unsigned int index2)
 162:../../source/src/kernel/OS_LIB/vector.c **** {
 853              		.loc 1 162 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 24
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0444 80B5     		push	{r7, lr}
 858              	.LCFI35:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 7, -8
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 19


 861              		.cfi_offset 14, -4
 862 0446 86B0     		sub	sp, sp, #24
 863              	.LCFI36:
 864              		.cfi_def_cfa_offset 32
 865 0448 00AF     		add	r7, sp, #0
 866              	.LCFI37:
 867              		.cfi_def_cfa_register 7
 868 044a F860     		str	r0, [r7, #12]
 869 044c B960     		str	r1, [r7, #8]
 870 044e 7A60     		str	r2, [r7, #4]
 163:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT(NULL != vector_ptr);
 871              		.loc 1 163 0
 872 0450 FB68     		ldr	r3, [r7, #12]
 873 0452 002B     		cmp	r3, #0
 874 0454 03D1     		bne	.L60
 875              		.loc 1 163 0 is_stmt 0 discriminator 1
 876 0456 A321     		movs	r1, #163
 877 0458 2D48     		ldr	r0, .L66
 878 045a FFF7FEFF 		bl	_ASSERT
 879              	.L60:
 164:../../source/src/kernel/OS_LIB/vector.c **** 	ASSERT((index1 < vector_ptr->cur_len) && (index2 < vector_ptr->cur_len));
 880              		.loc 1 164 0 is_stmt 1
 881 045e FB68     		ldr	r3, [r7, #12]
 882 0460 9B68     		ldr	r3, [r3, #8]
 883 0462 BA68     		ldr	r2, [r7, #8]
 884 0464 9A42     		cmp	r2, r3
 885 0466 04D2     		bcs	.L61
 886              		.loc 1 164 0 is_stmt 0 discriminator 1
 887 0468 FB68     		ldr	r3, [r7, #12]
 888 046a 9B68     		ldr	r3, [r3, #8]
 889 046c 7A68     		ldr	r2, [r7, #4]
 890 046e 9A42     		cmp	r2, r3
 891 0470 03D3     		bcc	.L62
 892              	.L61:
 893              		.loc 1 164 0 discriminator 3
 894 0472 A421     		movs	r1, #164
 895 0474 2648     		ldr	r0, .L66
 896 0476 FFF7FEFF 		bl	_ASSERT
 897              	.L62:
 165:../../source/src/kernel/OS_LIB/vector.c **** 	if(index1 == index2)
 898              		.loc 1 165 0 is_stmt 1
 899 047a BA68     		ldr	r2, [r7, #8]
 900 047c 7B68     		ldr	r3, [r7, #4]
 901 047e 9A42     		cmp	r2, r3
 902 0480 01D1     		bne	.L63
 166:../../source/src/kernel/OS_LIB/vector.c **** 	{
 167:../../source/src/kernel/OS_LIB/vector.c **** 		return FUN_EXECUTE_SUCCESSFULLY;
 903              		.loc 1 167 0
 904 0482 0023     		movs	r3, #0
 905 0484 40E0     		b	.L64
 906              	.L63:
 168:../../source/src/kernel/OS_LIB/vector.c **** 	}
 169:../../source/src/kernel/OS_LIB/vector.c **** 	void *buffer = f_malloc(vector_ptr->data_size);
 907              		.loc 1 169 0
 908 0486 FB68     		ldr	r3, [r7, #12]
 909 0488 DB68     		ldr	r3, [r3, #12]
 910 048a 1846     		mov	r0, r3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 20


 911 048c FFF7FEFF 		bl	ka_malloc
 912 0490 7861     		str	r0, [r7, #20]
 170:../../source/src/kernel/OS_LIB/vector.c **** 	if(NULL == buffer)
 913              		.loc 1 170 0
 914 0492 7B69     		ldr	r3, [r7, #20]
 915 0494 002B     		cmp	r3, #0
 916 0496 02D1     		bne	.L65
 171:../../source/src/kernel/OS_LIB/vector.c **** 		return -ERROR_ALLOCATE_ROOM;
 917              		.loc 1 171 0
 918 0498 4FF0FF33 		mov	r3, #-1
 919 049c 34E0     		b	.L64
 920              	.L65:
 172:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy(buffer,
 921              		.loc 1 172 0
 922 049e FB68     		ldr	r3, [r7, #12]
 923 04a0 1A68     		ldr	r2, [r3]
 924 04a2 FB68     		ldr	r3, [r7, #12]
 925 04a4 DB68     		ldr	r3, [r3, #12]
 926 04a6 B968     		ldr	r1, [r7, #8]
 927 04a8 01FB03F3 		mul	r3, r1, r3
 928 04ac D118     		adds	r1, r2, r3
 929 04ae FB68     		ldr	r3, [r7, #12]
 930 04b0 DB68     		ldr	r3, [r3, #12]
 931 04b2 1A46     		mov	r2, r3
 932 04b4 7869     		ldr	r0, [r7, #20]
 933 04b6 FFF7FEFF 		bl	ka_memcpy
 173:../../source/src/kernel/OS_LIB/vector.c **** 		(char*)(vector_ptr->data_ptr) + index1 * vector_ptr->data_size,
 174:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_size);
 175:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy((char*)(vector_ptr->data_ptr) + index1 * vector_ptr->data_size,
 934              		.loc 1 175 0
 935 04ba FB68     		ldr	r3, [r7, #12]
 936 04bc 1A68     		ldr	r2, [r3]
 937 04be FB68     		ldr	r3, [r7, #12]
 938 04c0 DB68     		ldr	r3, [r3, #12]
 939 04c2 B968     		ldr	r1, [r7, #8]
 940 04c4 01FB03F3 		mul	r3, r1, r3
 941 04c8 D018     		adds	r0, r2, r3
 942 04ca FB68     		ldr	r3, [r7, #12]
 943 04cc 1A68     		ldr	r2, [r3]
 944 04ce FB68     		ldr	r3, [r7, #12]
 945 04d0 DB68     		ldr	r3, [r3, #12]
 946 04d2 7968     		ldr	r1, [r7, #4]
 947 04d4 01FB03F3 		mul	r3, r1, r3
 948 04d8 D118     		adds	r1, r2, r3
 949 04da FB68     		ldr	r3, [r7, #12]
 950 04dc DB68     		ldr	r3, [r3, #12]
 951 04de 1A46     		mov	r2, r3
 952 04e0 FFF7FEFF 		bl	ka_memcpy
 176:../../source/src/kernel/OS_LIB/vector.c **** 		(char*)(vector_ptr->data_ptr) + index2 * vector_ptr->data_size,
 177:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_size);
 178:../../source/src/kernel/OS_LIB/vector.c **** 	f_memcpy((char*)(vector_ptr->data_ptr) + index2 * vector_ptr->data_size,
 953              		.loc 1 178 0
 954 04e4 FB68     		ldr	r3, [r7, #12]
 955 04e6 1A68     		ldr	r2, [r3]
 956 04e8 FB68     		ldr	r3, [r7, #12]
 957 04ea DB68     		ldr	r3, [r3, #12]
 958 04ec 7968     		ldr	r1, [r7, #4]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 21


 959 04ee 01FB03F3 		mul	r3, r1, r3
 960 04f2 D018     		adds	r0, r2, r3
 961 04f4 FB68     		ldr	r3, [r7, #12]
 962 04f6 DB68     		ldr	r3, [r3, #12]
 963 04f8 1A46     		mov	r2, r3
 964 04fa 7969     		ldr	r1, [r7, #20]
 965 04fc FFF7FEFF 		bl	ka_memcpy
 179:../../source/src/kernel/OS_LIB/vector.c **** 		buffer,
 180:../../source/src/kernel/OS_LIB/vector.c **** 		vector_ptr->data_size);
 181:../../source/src/kernel/OS_LIB/vector.c **** 	f_free(buffer);
 966              		.loc 1 181 0
 967 0500 7869     		ldr	r0, [r7, #20]
 968 0502 FFF7FEFF 		bl	ka_free
 182:../../source/src/kernel/OS_LIB/vector.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 969              		.loc 1 182 0
 970 0506 0023     		movs	r3, #0
 971              	.L64:
 183:../../source/src/kernel/OS_LIB/vector.c **** }
 972              		.loc 1 183 0
 973 0508 1846     		mov	r0, r3
 974 050a 1837     		adds	r7, r7, #24
 975              	.LCFI38:
 976              		.cfi_def_cfa_offset 8
 977 050c BD46     		mov	sp, r7
 978              	.LCFI39:
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 050e 80BD     		pop	{r7, pc}
 982              	.L67:
 983              		.align	2
 984              	.L66:
 985 0510 00000000 		.word	.LC0
 986              		.cfi_endproc
 987              	.LFE13:
 988              		.size	Vector_swap_inner, .-Vector_swap_inner
 989              	.Letext0:
 990              		.file 2 "../../source/include/os_lib/vector.h"
 991              		.section	.debug_info,"",%progbits
 992              	.Ldebug_info0:
 993 0000 F4020000 		.4byte	0x2f4
 994 0004 0200     		.2byte	0x2
 995 0006 00000000 		.4byte	.Ldebug_abbrev0
 996 000a 04       		.byte	0x4
 997 000b 01       		.uleb128 0x1
 998 000c C3010000 		.4byte	.LASF32
 999 0010 0C       		.byte	0xc
 1000 0011 62000000 		.4byte	.LASF33
 1001 0015 87020000 		.4byte	.LASF34
 1002 0019 00000000 		.4byte	.Ltext0
 1003 001d 14050000 		.4byte	.Letext0
 1004 0021 00000000 		.4byte	.Ldebug_line0
 1005 0025 02       		.uleb128 0x2
 1006 0026 55010000 		.4byte	.LASF35
 1007 002a 14       		.byte	0x14
 1008 002b 02       		.byte	0x2
 1009 002c 0A       		.byte	0xa
 1010 002d 78000000 		.4byte	0x78
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 22


 1011 0031 03       		.uleb128 0x3
 1012 0032 F1000000 		.4byte	.LASF0
 1013 0036 02       		.byte	0x2
 1014 0037 0C       		.byte	0xc
 1015 0038 78000000 		.4byte	0x78
 1016 003c 02       		.byte	0x2
 1017 003d 23       		.byte	0x23
 1018 003e 00       		.uleb128 0
 1019 003f 03       		.uleb128 0x3
 1020 0040 E9000000 		.4byte	.LASF1
 1021 0044 02       		.byte	0x2
 1022 0045 0D       		.byte	0xd
 1023 0046 7A000000 		.4byte	0x7a
 1024 004a 02       		.byte	0x2
 1025 004b 23       		.byte	0x23
 1026 004c 04       		.uleb128 0x4
 1027 004d 03       		.uleb128 0x3
 1028 004e E1000000 		.4byte	.LASF2
 1029 0052 02       		.byte	0x2
 1030 0053 0E       		.byte	0xe
 1031 0054 7A000000 		.4byte	0x7a
 1032 0058 02       		.byte	0x2
 1033 0059 23       		.byte	0x23
 1034 005a 08       		.uleb128 0x8
 1035 005b 03       		.uleb128 0x3
 1036 005c 2E000000 		.4byte	.LASF3
 1037 0060 02       		.byte	0x2
 1038 0061 0F       		.byte	0xf
 1039 0062 7A000000 		.4byte	0x7a
 1040 0066 02       		.byte	0x2
 1041 0067 23       		.byte	0x23
 1042 0068 0C       		.uleb128 0xc
 1043 0069 03       		.uleb128 0x3
 1044 006a 83010000 		.4byte	.LASF4
 1045 006e 02       		.byte	0x2
 1046 006f 15       		.byte	0x15
 1047 0070 7A000000 		.4byte	0x7a
 1048 0074 02       		.byte	0x2
 1049 0075 23       		.byte	0x23
 1050 0076 10       		.uleb128 0x10
 1051 0077 00       		.byte	0
 1052 0078 04       		.uleb128 0x4
 1053 0079 04       		.byte	0x4
 1054 007a 05       		.uleb128 0x5
 1055 007b 04       		.byte	0x4
 1056 007c 07       		.byte	0x7
 1057 007d 38000000 		.4byte	.LASF5
 1058 0081 06       		.uleb128 0x6
 1059 0082 11010000 		.4byte	.LASF36
 1060 0086 02       		.byte	0x2
 1061 0087 16       		.byte	0x16
 1062 0088 25000000 		.4byte	0x25
 1063 008c 05       		.uleb128 0x5
 1064 008d 01       		.byte	0x1
 1065 008e 06       		.byte	0x6
 1066 008f 76020000 		.4byte	.LASF6
 1067 0093 05       		.uleb128 0x5
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 23


 1068 0094 02       		.byte	0x2
 1069 0095 05       		.byte	0x5
 1070 0096 94010000 		.4byte	.LASF7
 1071 009a 07       		.uleb128 0x7
 1072 009b 04       		.byte	0x4
 1073 009c 05       		.byte	0x5
 1074 009d 696E7400 		.ascii	"int\000"
 1075 00a1 05       		.uleb128 0x5
 1076 00a2 08       		.byte	0x8
 1077 00a3 05       		.byte	0x5
 1078 00a4 2E010000 		.4byte	.LASF8
 1079 00a8 05       		.uleb128 0x5
 1080 00a9 01       		.byte	0x1
 1081 00aa 08       		.byte	0x8
 1082 00ab A8000000 		.4byte	.LASF9
 1083 00af 05       		.uleb128 0x5
 1084 00b0 02       		.byte	0x2
 1085 00b1 07       		.byte	0x7
 1086 00b2 B6000000 		.4byte	.LASF10
 1087 00b6 05       		.uleb128 0x5
 1088 00b7 08       		.byte	0x8
 1089 00b8 07       		.byte	0x7
 1090 00b9 FA000000 		.4byte	.LASF11
 1091 00bd 08       		.uleb128 0x8
 1092 00be 01       		.byte	0x1
 1093 00bf B1010000 		.4byte	.LASF15
 1094 00c3 01       		.byte	0x1
 1095 00c4 A1       		.byte	0xa1
 1096 00c5 01       		.byte	0x1
 1097 00c6 9A000000 		.4byte	0x9a
 1098 00ca 44040000 		.4byte	.LFB13
 1099 00ce 14050000 		.4byte	.LFE13
 1100 00d2 00000000 		.4byte	.LLST7
 1101 00d6 01       		.byte	0x1
 1102 00d7 14010000 		.4byte	0x114
 1103 00db 09       		.uleb128 0x9
 1104 00dc 18010000 		.4byte	.LASF12
 1105 00e0 01       		.byte	0x1
 1106 00e1 A1       		.byte	0xa1
 1107 00e2 14010000 		.4byte	0x114
 1108 00e6 02       		.byte	0x2
 1109 00e7 91       		.byte	0x91
 1110 00e8 6C       		.sleb128 -20
 1111 00e9 09       		.uleb128 0x9
 1112 00ea 15000000 		.4byte	.LASF13
 1113 00ee 01       		.byte	0x1
 1114 00ef A1       		.byte	0xa1
 1115 00f0 7A000000 		.4byte	0x7a
 1116 00f4 02       		.byte	0x2
 1117 00f5 91       		.byte	0x91
 1118 00f6 68       		.sleb128 -24
 1119 00f7 09       		.uleb128 0x9
 1120 00f8 1C000000 		.4byte	.LASF14
 1121 00fc 01       		.byte	0x1
 1122 00fd A1       		.byte	0xa1
 1123 00fe 7A000000 		.4byte	0x7a
 1124 0102 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 24


 1125 0103 91       		.byte	0x91
 1126 0104 64       		.sleb128 -28
 1127 0105 0A       		.uleb128 0xa
 1128 0106 AA010000 		.4byte	.LASF28
 1129 010a 01       		.byte	0x1
 1130 010b A9       		.byte	0xa9
 1131 010c 78000000 		.4byte	0x78
 1132 0110 02       		.byte	0x2
 1133 0111 91       		.byte	0x91
 1134 0112 74       		.sleb128 -12
 1135 0113 00       		.byte	0
 1136 0114 0B       		.uleb128 0xb
 1137 0115 04       		.byte	0x4
 1138 0116 81000000 		.4byte	0x81
 1139 011a 08       		.uleb128 0x8
 1140 011b 01       		.byte	0x1
 1141 011c 8A000000 		.4byte	.LASF16
 1142 0120 01       		.byte	0x1
 1143 0121 90       		.byte	0x90
 1144 0122 01       		.byte	0x1
 1145 0123 9A000000 		.4byte	0x9a
 1146 0127 C8030000 		.4byte	.LFB12
 1147 012b 44040000 		.4byte	.LFE12
 1148 012f 50000000 		.4byte	.LLST6
 1149 0133 01       		.byte	0x1
 1150 0134 63010000 		.4byte	0x163
 1151 0138 09       		.uleb128 0x9
 1152 0139 18010000 		.4byte	.LASF12
 1153 013d 01       		.byte	0x1
 1154 013e 90       		.byte	0x90
 1155 013f 14010000 		.4byte	0x114
 1156 0143 02       		.byte	0x2
 1157 0144 91       		.byte	0x91
 1158 0145 74       		.sleb128 -12
 1159 0146 09       		.uleb128 0x9
 1160 0147 23000000 		.4byte	.LASF17
 1161 014b 01       		.byte	0x1
 1162 014c 90       		.byte	0x90
 1163 014d 7A000000 		.4byte	0x7a
 1164 0151 02       		.byte	0x2
 1165 0152 91       		.byte	0x91
 1166 0153 70       		.sleb128 -16
 1167 0154 09       		.uleb128 0x9
 1168 0155 D7000000 		.4byte	.LASF18
 1169 0159 01       		.byte	0x1
 1170 015a 90       		.byte	0x90
 1171 015b 7A000000 		.4byte	0x7a
 1172 015f 02       		.byte	0x2
 1173 0160 91       		.byte	0x91
 1174 0161 6C       		.sleb128 -20
 1175 0162 00       		.byte	0
 1176 0163 08       		.uleb128 0x8
 1177 0164 01       		.byte	0x1
 1178 0165 3C010000 		.4byte	.LASF19
 1179 0169 01       		.byte	0x1
 1180 016a 7D       		.byte	0x7d
 1181 016b 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 25


 1182 016c 9A000000 		.4byte	0x9a
 1183 0170 28030000 		.4byte	.LFB11
 1184 0174 C8030000 		.4byte	.LFE11
 1185 0178 A0000000 		.4byte	.LLST5
 1186 017c 01       		.byte	0x1
 1187 017d AC010000 		.4byte	0x1ac
 1188 0181 09       		.uleb128 0x9
 1189 0182 18010000 		.4byte	.LASF12
 1190 0186 01       		.byte	0x1
 1191 0187 7D       		.byte	0x7d
 1192 0188 14010000 		.4byte	0x114
 1193 018c 02       		.byte	0x2
 1194 018d 91       		.byte	0x91
 1195 018e 74       		.sleb128 -12
 1196 018f 09       		.uleb128 0x9
 1197 0190 6E010000 		.4byte	.LASF20
 1198 0194 01       		.byte	0x1
 1199 0195 7D       		.byte	0x7d
 1200 0196 7A000000 		.4byte	0x7a
 1201 019a 02       		.byte	0x2
 1202 019b 91       		.byte	0x91
 1203 019c 70       		.sleb128 -16
 1204 019d 09       		.uleb128 0x9
 1205 019e 74010000 		.4byte	.LASF21
 1206 01a2 01       		.byte	0x1
 1207 01a3 7D       		.byte	0x7d
 1208 01a4 78000000 		.4byte	0x78
 1209 01a8 02       		.byte	0x2
 1210 01a9 91       		.byte	0x91
 1211 01aa 6C       		.sleb128 -20
 1212 01ab 00       		.byte	0
 1213 01ac 08       		.uleb128 0x8
 1214 01ad 01       		.byte	0x1
 1215 01ae 5C010000 		.4byte	.LASF22
 1216 01b2 01       		.byte	0x1
 1217 01b3 6C       		.byte	0x6c
 1218 01b4 01       		.byte	0x1
 1219 01b5 9A000000 		.4byte	0x9a
 1220 01b9 90020000 		.4byte	.LFB10
 1221 01bd 28030000 		.4byte	.LFE10
 1222 01c1 F0000000 		.4byte	.LLST4
 1223 01c5 01       		.byte	0x1
 1224 01c6 F4010000 		.4byte	0x1f4
 1225 01ca 09       		.uleb128 0x9
 1226 01cb 18010000 		.4byte	.LASF12
 1227 01cf 01       		.byte	0x1
 1228 01d0 6C       		.byte	0x6c
 1229 01d1 14010000 		.4byte	0x114
 1230 01d5 02       		.byte	0x2
 1231 01d6 91       		.byte	0x91
 1232 01d7 74       		.sleb128 -12
 1233 01d8 09       		.uleb128 0x9
 1234 01d9 10000000 		.4byte	.LASF23
 1235 01dd 01       		.byte	0x1
 1236 01de 6C       		.byte	0x6c
 1237 01df 7A000000 		.4byte	0x7a
 1238 01e3 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 26


 1239 01e4 91       		.byte	0x91
 1240 01e5 70       		.sleb128 -16
 1241 01e6 0C       		.uleb128 0xc
 1242 01e7 746F00   		.ascii	"to\000"
 1243 01ea 01       		.byte	0x1
 1244 01eb 6C       		.byte	0x6c
 1245 01ec 7A000000 		.4byte	0x7a
 1246 01f0 02       		.byte	0x2
 1247 01f1 91       		.byte	0x91
 1248 01f2 6C       		.sleb128 -20
 1249 01f3 00       		.byte	0
 1250 01f4 08       		.uleb128 0x8
 1251 01f5 01       		.byte	0x1
 1252 01f6 00000000 		.4byte	.LASF24
 1253 01fa 01       		.byte	0x1
 1254 01fb 5C       		.byte	0x5c
 1255 01fc 01       		.byte	0x1
 1256 01fd 9A000000 		.4byte	0x9a
 1257 0201 2C020000 		.4byte	.LFB9
 1258 0205 90020000 		.4byte	.LFE9
 1259 0209 40010000 		.4byte	.LLST3
 1260 020d 01       		.byte	0x1
 1261 020e 2F020000 		.4byte	0x22f
 1262 0212 09       		.uleb128 0x9
 1263 0213 18010000 		.4byte	.LASF12
 1264 0217 01       		.byte	0x1
 1265 0218 5C       		.byte	0x5c
 1266 0219 14010000 		.4byte	0x114
 1267 021d 02       		.byte	0x2
 1268 021e 91       		.byte	0x91
 1269 021f 74       		.sleb128 -12
 1270 0220 09       		.uleb128 0x9
 1271 0221 69020000 		.4byte	.LASF25
 1272 0225 01       		.byte	0x1
 1273 0226 5C       		.byte	0x5c
 1274 0227 78000000 		.4byte	0x78
 1275 022b 02       		.byte	0x2
 1276 022c 91       		.byte	0x91
 1277 022d 70       		.sleb128 -16
 1278 022e 00       		.byte	0
 1279 022f 08       		.uleb128 0x8
 1280 0230 01       		.byte	0x1
 1281 0231 45000000 		.4byte	.LASF26
 1282 0235 01       		.byte	0x1
 1283 0236 43       		.byte	0x43
 1284 0237 01       		.byte	0x1
 1285 0238 9A000000 		.4byte	0x9a
 1286 023c 74010000 		.4byte	.LFB8
 1287 0240 2C020000 		.4byte	.LFE8
 1288 0244 90010000 		.4byte	.LLST2
 1289 0248 01       		.byte	0x1
 1290 0249 6A020000 		.4byte	0x26a
 1291 024d 09       		.uleb128 0x9
 1292 024e 18010000 		.4byte	.LASF12
 1293 0252 01       		.byte	0x1
 1294 0253 43       		.byte	0x43
 1295 0254 14010000 		.4byte	0x114
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 27


 1296 0258 02       		.byte	0x2
 1297 0259 91       		.byte	0x91
 1298 025a 74       		.sleb128 -12
 1299 025b 09       		.uleb128 0x9
 1300 025c C9000000 		.4byte	.LASF27
 1301 0260 01       		.byte	0x1
 1302 0261 43       		.byte	0x43
 1303 0262 78000000 		.4byte	0x78
 1304 0266 02       		.byte	0x2
 1305 0267 91       		.byte	0x91
 1306 0268 70       		.sleb128 -16
 1307 0269 00       		.byte	0
 1308 026a 0D       		.uleb128 0xd
 1309 026b 9E010000 		.4byte	.LASF37
 1310 026f 01       		.byte	0x1
 1311 0270 1F       		.byte	0x1f
 1312 0271 01       		.byte	0x1
 1313 0272 9A000000 		.4byte	0x9a
 1314 0276 78000000 		.4byte	.LFB7
 1315 027a 74010000 		.4byte	.LFE7
 1316 027e E0010000 		.4byte	.LLST1
 1317 0282 01       		.byte	0x1
 1318 0283 A4020000 		.4byte	0x2a4
 1319 0287 09       		.uleb128 0x9
 1320 0288 18010000 		.4byte	.LASF12
 1321 028c 01       		.byte	0x1
 1322 028d 1F       		.byte	0x1f
 1323 028e 14010000 		.4byte	0x114
 1324 0292 02       		.byte	0x2
 1325 0293 91       		.byte	0x91
 1326 0294 6C       		.sleb128 -20
 1327 0295 0A       		.uleb128 0xa
 1328 0296 23010000 		.4byte	.LASF29
 1329 029a 01       		.byte	0x1
 1330 029b 24       		.byte	0x24
 1331 029c 78000000 		.4byte	0x78
 1332 02a0 02       		.byte	0x2
 1333 02a1 91       		.byte	0x91
 1334 02a2 74       		.sleb128 -12
 1335 02a3 00       		.byte	0
 1336 02a4 0E       		.uleb128 0xe
 1337 02a5 01       		.byte	0x1
 1338 02a6 56000000 		.4byte	.LASF38
 1339 02aa 01       		.byte	0x1
 1340 02ab 0B       		.byte	0xb
 1341 02ac 01       		.byte	0x1
 1342 02ad 9A000000 		.4byte	0x9a
 1343 02b1 00000000 		.4byte	.LFB6
 1344 02b5 78000000 		.4byte	.LFE6
 1345 02b9 30020000 		.4byte	.LLST0
 1346 02bd 01       		.byte	0x1
 1347 02be 09       		.uleb128 0x9
 1348 02bf 18010000 		.4byte	.LASF12
 1349 02c3 01       		.byte	0x1
 1350 02c4 0B       		.byte	0xb
 1351 02c5 14010000 		.4byte	0x114
 1352 02c9 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 28


 1353 02ca 91       		.byte	0x91
 1354 02cb 74       		.sleb128 -12
 1355 02cc 09       		.uleb128 0x9
 1356 02cd 82020000 		.4byte	.LASF30
 1357 02d1 01       		.byte	0x1
 1358 02d2 0B       		.byte	0xb
 1359 02d3 7A000000 		.4byte	0x7a
 1360 02d7 02       		.byte	0x2
 1361 02d8 91       		.byte	0x91
 1362 02d9 70       		.sleb128 -16
 1363 02da 09       		.uleb128 0x9
 1364 02db 9B000000 		.4byte	.LASF31
 1365 02df 01       		.byte	0x1
 1366 02e0 0B       		.byte	0xb
 1367 02e1 9A000000 		.4byte	0x9a
 1368 02e5 02       		.byte	0x2
 1369 02e6 91       		.byte	0x91
 1370 02e7 6C       		.sleb128 -20
 1371 02e8 09       		.uleb128 0x9
 1372 02e9 83010000 		.4byte	.LASF4
 1373 02ed 01       		.byte	0x1
 1374 02ee 0B       		.byte	0xb
 1375 02ef 7A000000 		.4byte	0x7a
 1376 02f3 02       		.byte	0x2
 1377 02f4 91       		.byte	0x91
 1378 02f5 68       		.sleb128 -24
 1379 02f6 00       		.byte	0
 1380 02f7 00       		.byte	0
 1381              		.section	.debug_abbrev,"",%progbits
 1382              	.Ldebug_abbrev0:
 1383 0000 01       		.uleb128 0x1
 1384 0001 11       		.uleb128 0x11
 1385 0002 01       		.byte	0x1
 1386 0003 25       		.uleb128 0x25
 1387 0004 0E       		.uleb128 0xe
 1388 0005 13       		.uleb128 0x13
 1389 0006 0B       		.uleb128 0xb
 1390 0007 03       		.uleb128 0x3
 1391 0008 0E       		.uleb128 0xe
 1392 0009 1B       		.uleb128 0x1b
 1393 000a 0E       		.uleb128 0xe
 1394 000b 11       		.uleb128 0x11
 1395 000c 01       		.uleb128 0x1
 1396 000d 12       		.uleb128 0x12
 1397 000e 01       		.uleb128 0x1
 1398 000f 10       		.uleb128 0x10
 1399 0010 06       		.uleb128 0x6
 1400 0011 00       		.byte	0
 1401 0012 00       		.byte	0
 1402 0013 02       		.uleb128 0x2
 1403 0014 13       		.uleb128 0x13
 1404 0015 01       		.byte	0x1
 1405 0016 03       		.uleb128 0x3
 1406 0017 0E       		.uleb128 0xe
 1407 0018 0B       		.uleb128 0xb
 1408 0019 0B       		.uleb128 0xb
 1409 001a 3A       		.uleb128 0x3a
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 29


 1410 001b 0B       		.uleb128 0xb
 1411 001c 3B       		.uleb128 0x3b
 1412 001d 0B       		.uleb128 0xb
 1413 001e 01       		.uleb128 0x1
 1414 001f 13       		.uleb128 0x13
 1415 0020 00       		.byte	0
 1416 0021 00       		.byte	0
 1417 0022 03       		.uleb128 0x3
 1418 0023 0D       		.uleb128 0xd
 1419 0024 00       		.byte	0
 1420 0025 03       		.uleb128 0x3
 1421 0026 0E       		.uleb128 0xe
 1422 0027 3A       		.uleb128 0x3a
 1423 0028 0B       		.uleb128 0xb
 1424 0029 3B       		.uleb128 0x3b
 1425 002a 0B       		.uleb128 0xb
 1426 002b 49       		.uleb128 0x49
 1427 002c 13       		.uleb128 0x13
 1428 002d 38       		.uleb128 0x38
 1429 002e 0A       		.uleb128 0xa
 1430 002f 00       		.byte	0
 1431 0030 00       		.byte	0
 1432 0031 04       		.uleb128 0x4
 1433 0032 0F       		.uleb128 0xf
 1434 0033 00       		.byte	0
 1435 0034 0B       		.uleb128 0xb
 1436 0035 0B       		.uleb128 0xb
 1437 0036 00       		.byte	0
 1438 0037 00       		.byte	0
 1439 0038 05       		.uleb128 0x5
 1440 0039 24       		.uleb128 0x24
 1441 003a 00       		.byte	0
 1442 003b 0B       		.uleb128 0xb
 1443 003c 0B       		.uleb128 0xb
 1444 003d 3E       		.uleb128 0x3e
 1445 003e 0B       		.uleb128 0xb
 1446 003f 03       		.uleb128 0x3
 1447 0040 0E       		.uleb128 0xe
 1448 0041 00       		.byte	0
 1449 0042 00       		.byte	0
 1450 0043 06       		.uleb128 0x6
 1451 0044 16       		.uleb128 0x16
 1452 0045 00       		.byte	0
 1453 0046 03       		.uleb128 0x3
 1454 0047 0E       		.uleb128 0xe
 1455 0048 3A       		.uleb128 0x3a
 1456 0049 0B       		.uleb128 0xb
 1457 004a 3B       		.uleb128 0x3b
 1458 004b 0B       		.uleb128 0xb
 1459 004c 49       		.uleb128 0x49
 1460 004d 13       		.uleb128 0x13
 1461 004e 00       		.byte	0
 1462 004f 00       		.byte	0
 1463 0050 07       		.uleb128 0x7
 1464 0051 24       		.uleb128 0x24
 1465 0052 00       		.byte	0
 1466 0053 0B       		.uleb128 0xb
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 30


 1467 0054 0B       		.uleb128 0xb
 1468 0055 3E       		.uleb128 0x3e
 1469 0056 0B       		.uleb128 0xb
 1470 0057 03       		.uleb128 0x3
 1471 0058 08       		.uleb128 0x8
 1472 0059 00       		.byte	0
 1473 005a 00       		.byte	0
 1474 005b 08       		.uleb128 0x8
 1475 005c 2E       		.uleb128 0x2e
 1476 005d 01       		.byte	0x1
 1477 005e 3F       		.uleb128 0x3f
 1478 005f 0C       		.uleb128 0xc
 1479 0060 03       		.uleb128 0x3
 1480 0061 0E       		.uleb128 0xe
 1481 0062 3A       		.uleb128 0x3a
 1482 0063 0B       		.uleb128 0xb
 1483 0064 3B       		.uleb128 0x3b
 1484 0065 0B       		.uleb128 0xb
 1485 0066 27       		.uleb128 0x27
 1486 0067 0C       		.uleb128 0xc
 1487 0068 49       		.uleb128 0x49
 1488 0069 13       		.uleb128 0x13
 1489 006a 11       		.uleb128 0x11
 1490 006b 01       		.uleb128 0x1
 1491 006c 12       		.uleb128 0x12
 1492 006d 01       		.uleb128 0x1
 1493 006e 40       		.uleb128 0x40
 1494 006f 06       		.uleb128 0x6
 1495 0070 9642     		.uleb128 0x2116
 1496 0072 0C       		.uleb128 0xc
 1497 0073 01       		.uleb128 0x1
 1498 0074 13       		.uleb128 0x13
 1499 0075 00       		.byte	0
 1500 0076 00       		.byte	0
 1501 0077 09       		.uleb128 0x9
 1502 0078 05       		.uleb128 0x5
 1503 0079 00       		.byte	0
 1504 007a 03       		.uleb128 0x3
 1505 007b 0E       		.uleb128 0xe
 1506 007c 3A       		.uleb128 0x3a
 1507 007d 0B       		.uleb128 0xb
 1508 007e 3B       		.uleb128 0x3b
 1509 007f 0B       		.uleb128 0xb
 1510 0080 49       		.uleb128 0x49
 1511 0081 13       		.uleb128 0x13
 1512 0082 02       		.uleb128 0x2
 1513 0083 0A       		.uleb128 0xa
 1514 0084 00       		.byte	0
 1515 0085 00       		.byte	0
 1516 0086 0A       		.uleb128 0xa
 1517 0087 34       		.uleb128 0x34
 1518 0088 00       		.byte	0
 1519 0089 03       		.uleb128 0x3
 1520 008a 0E       		.uleb128 0xe
 1521 008b 3A       		.uleb128 0x3a
 1522 008c 0B       		.uleb128 0xb
 1523 008d 3B       		.uleb128 0x3b
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 31


 1524 008e 0B       		.uleb128 0xb
 1525 008f 49       		.uleb128 0x49
 1526 0090 13       		.uleb128 0x13
 1527 0091 02       		.uleb128 0x2
 1528 0092 0A       		.uleb128 0xa
 1529 0093 00       		.byte	0
 1530 0094 00       		.byte	0
 1531 0095 0B       		.uleb128 0xb
 1532 0096 0F       		.uleb128 0xf
 1533 0097 00       		.byte	0
 1534 0098 0B       		.uleb128 0xb
 1535 0099 0B       		.uleb128 0xb
 1536 009a 49       		.uleb128 0x49
 1537 009b 13       		.uleb128 0x13
 1538 009c 00       		.byte	0
 1539 009d 00       		.byte	0
 1540 009e 0C       		.uleb128 0xc
 1541 009f 05       		.uleb128 0x5
 1542 00a0 00       		.byte	0
 1543 00a1 03       		.uleb128 0x3
 1544 00a2 08       		.uleb128 0x8
 1545 00a3 3A       		.uleb128 0x3a
 1546 00a4 0B       		.uleb128 0xb
 1547 00a5 3B       		.uleb128 0x3b
 1548 00a6 0B       		.uleb128 0xb
 1549 00a7 49       		.uleb128 0x49
 1550 00a8 13       		.uleb128 0x13
 1551 00a9 02       		.uleb128 0x2
 1552 00aa 0A       		.uleb128 0xa
 1553 00ab 00       		.byte	0
 1554 00ac 00       		.byte	0
 1555 00ad 0D       		.uleb128 0xd
 1556 00ae 2E       		.uleb128 0x2e
 1557 00af 01       		.byte	0x1
 1558 00b0 03       		.uleb128 0x3
 1559 00b1 0E       		.uleb128 0xe
 1560 00b2 3A       		.uleb128 0x3a
 1561 00b3 0B       		.uleb128 0xb
 1562 00b4 3B       		.uleb128 0x3b
 1563 00b5 0B       		.uleb128 0xb
 1564 00b6 27       		.uleb128 0x27
 1565 00b7 0C       		.uleb128 0xc
 1566 00b8 49       		.uleb128 0x49
 1567 00b9 13       		.uleb128 0x13
 1568 00ba 11       		.uleb128 0x11
 1569 00bb 01       		.uleb128 0x1
 1570 00bc 12       		.uleb128 0x12
 1571 00bd 01       		.uleb128 0x1
 1572 00be 40       		.uleb128 0x40
 1573 00bf 06       		.uleb128 0x6
 1574 00c0 9642     		.uleb128 0x2116
 1575 00c2 0C       		.uleb128 0xc
 1576 00c3 01       		.uleb128 0x1
 1577 00c4 13       		.uleb128 0x13
 1578 00c5 00       		.byte	0
 1579 00c6 00       		.byte	0
 1580 00c7 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 32


 1581 00c8 2E       		.uleb128 0x2e
 1582 00c9 01       		.byte	0x1
 1583 00ca 3F       		.uleb128 0x3f
 1584 00cb 0C       		.uleb128 0xc
 1585 00cc 03       		.uleb128 0x3
 1586 00cd 0E       		.uleb128 0xe
 1587 00ce 3A       		.uleb128 0x3a
 1588 00cf 0B       		.uleb128 0xb
 1589 00d0 3B       		.uleb128 0x3b
 1590 00d1 0B       		.uleb128 0xb
 1591 00d2 27       		.uleb128 0x27
 1592 00d3 0C       		.uleb128 0xc
 1593 00d4 49       		.uleb128 0x49
 1594 00d5 13       		.uleb128 0x13
 1595 00d6 11       		.uleb128 0x11
 1596 00d7 01       		.uleb128 0x1
 1597 00d8 12       		.uleb128 0x12
 1598 00d9 01       		.uleb128 0x1
 1599 00da 40       		.uleb128 0x40
 1600 00db 06       		.uleb128 0x6
 1601 00dc 9642     		.uleb128 0x2116
 1602 00de 0C       		.uleb128 0xc
 1603 00df 00       		.byte	0
 1604 00e0 00       		.byte	0
 1605 00e1 00       		.byte	0
 1606              		.section	.debug_loc,"",%progbits
 1607              	.Ldebug_loc0:
 1608              	.LLST7:
 1609 0000 44040000 		.4byte	.LFB13-.Ltext0
 1610 0004 46040000 		.4byte	.LCFI35-.Ltext0
 1611 0008 0200     		.2byte	0x2
 1612 000a 7D       		.byte	0x7d
 1613 000b 00       		.sleb128 0
 1614 000c 46040000 		.4byte	.LCFI35-.Ltext0
 1615 0010 48040000 		.4byte	.LCFI36-.Ltext0
 1616 0014 0200     		.2byte	0x2
 1617 0016 7D       		.byte	0x7d
 1618 0017 08       		.sleb128 8
 1619 0018 48040000 		.4byte	.LCFI36-.Ltext0
 1620 001c 4A040000 		.4byte	.LCFI37-.Ltext0
 1621 0020 0200     		.2byte	0x2
 1622 0022 7D       		.byte	0x7d
 1623 0023 20       		.sleb128 32
 1624 0024 4A040000 		.4byte	.LCFI37-.Ltext0
 1625 0028 0C050000 		.4byte	.LCFI38-.Ltext0
 1626 002c 0200     		.2byte	0x2
 1627 002e 77       		.byte	0x77
 1628 002f 20       		.sleb128 32
 1629 0030 0C050000 		.4byte	.LCFI38-.Ltext0
 1630 0034 0E050000 		.4byte	.LCFI39-.Ltext0
 1631 0038 0200     		.2byte	0x2
 1632 003a 77       		.byte	0x77
 1633 003b 08       		.sleb128 8
 1634 003c 0E050000 		.4byte	.LCFI39-.Ltext0
 1635 0040 14050000 		.4byte	.LFE13-.Ltext0
 1636 0044 0200     		.2byte	0x2
 1637 0046 7D       		.byte	0x7d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 33


 1638 0047 08       		.sleb128 8
 1639 0048 00000000 		.4byte	0
 1640 004c 00000000 		.4byte	0
 1641              	.LLST6:
 1642 0050 C8030000 		.4byte	.LFB12-.Ltext0
 1643 0054 CA030000 		.4byte	.LCFI30-.Ltext0
 1644 0058 0200     		.2byte	0x2
 1645 005a 7D       		.byte	0x7d
 1646 005b 00       		.sleb128 0
 1647 005c CA030000 		.4byte	.LCFI30-.Ltext0
 1648 0060 CC030000 		.4byte	.LCFI31-.Ltext0
 1649 0064 0200     		.2byte	0x2
 1650 0066 7D       		.byte	0x7d
 1651 0067 08       		.sleb128 8
 1652 0068 CC030000 		.4byte	.LCFI31-.Ltext0
 1653 006c CE030000 		.4byte	.LCFI32-.Ltext0
 1654 0070 0200     		.2byte	0x2
 1655 0072 7D       		.byte	0x7d
 1656 0073 18       		.sleb128 24
 1657 0074 CE030000 		.4byte	.LCFI32-.Ltext0
 1658 0078 3A040000 		.4byte	.LCFI33-.Ltext0
 1659 007c 0200     		.2byte	0x2
 1660 007e 77       		.byte	0x77
 1661 007f 18       		.sleb128 24
 1662 0080 3A040000 		.4byte	.LCFI33-.Ltext0
 1663 0084 3C040000 		.4byte	.LCFI34-.Ltext0
 1664 0088 0200     		.2byte	0x2
 1665 008a 77       		.byte	0x77
 1666 008b 08       		.sleb128 8
 1667 008c 3C040000 		.4byte	.LCFI34-.Ltext0
 1668 0090 44040000 		.4byte	.LFE12-.Ltext0
 1669 0094 0200     		.2byte	0x2
 1670 0096 7D       		.byte	0x7d
 1671 0097 08       		.sleb128 8
 1672 0098 00000000 		.4byte	0
 1673 009c 00000000 		.4byte	0
 1674              	.LLST5:
 1675 00a0 28030000 		.4byte	.LFB11-.Ltext0
 1676 00a4 2A030000 		.4byte	.LCFI25-.Ltext0
 1677 00a8 0200     		.2byte	0x2
 1678 00aa 7D       		.byte	0x7d
 1679 00ab 00       		.sleb128 0
 1680 00ac 2A030000 		.4byte	.LCFI25-.Ltext0
 1681 00b0 2C030000 		.4byte	.LCFI26-.Ltext0
 1682 00b4 0200     		.2byte	0x2
 1683 00b6 7D       		.byte	0x7d
 1684 00b7 08       		.sleb128 8
 1685 00b8 2C030000 		.4byte	.LCFI26-.Ltext0
 1686 00bc 2E030000 		.4byte	.LCFI27-.Ltext0
 1687 00c0 0200     		.2byte	0x2
 1688 00c2 7D       		.byte	0x7d
 1689 00c3 18       		.sleb128 24
 1690 00c4 2E030000 		.4byte	.LCFI27-.Ltext0
 1691 00c8 C0030000 		.4byte	.LCFI28-.Ltext0
 1692 00cc 0200     		.2byte	0x2
 1693 00ce 77       		.byte	0x77
 1694 00cf 18       		.sleb128 24
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 34


 1695 00d0 C0030000 		.4byte	.LCFI28-.Ltext0
 1696 00d4 C2030000 		.4byte	.LCFI29-.Ltext0
 1697 00d8 0200     		.2byte	0x2
 1698 00da 77       		.byte	0x77
 1699 00db 08       		.sleb128 8
 1700 00dc C2030000 		.4byte	.LCFI29-.Ltext0
 1701 00e0 C8030000 		.4byte	.LFE11-.Ltext0
 1702 00e4 0200     		.2byte	0x2
 1703 00e6 7D       		.byte	0x7d
 1704 00e7 08       		.sleb128 8
 1705 00e8 00000000 		.4byte	0
 1706 00ec 00000000 		.4byte	0
 1707              	.LLST4:
 1708 00f0 90020000 		.4byte	.LFB10-.Ltext0
 1709 00f4 92020000 		.4byte	.LCFI20-.Ltext0
 1710 00f8 0200     		.2byte	0x2
 1711 00fa 7D       		.byte	0x7d
 1712 00fb 00       		.sleb128 0
 1713 00fc 92020000 		.4byte	.LCFI20-.Ltext0
 1714 0100 94020000 		.4byte	.LCFI21-.Ltext0
 1715 0104 0200     		.2byte	0x2
 1716 0106 7D       		.byte	0x7d
 1717 0107 08       		.sleb128 8
 1718 0108 94020000 		.4byte	.LCFI21-.Ltext0
 1719 010c 96020000 		.4byte	.LCFI22-.Ltext0
 1720 0110 0200     		.2byte	0x2
 1721 0112 7D       		.byte	0x7d
 1722 0113 18       		.sleb128 24
 1723 0114 96020000 		.4byte	.LCFI22-.Ltext0
 1724 0118 1E030000 		.4byte	.LCFI23-.Ltext0
 1725 011c 0200     		.2byte	0x2
 1726 011e 77       		.byte	0x77
 1727 011f 18       		.sleb128 24
 1728 0120 1E030000 		.4byte	.LCFI23-.Ltext0
 1729 0124 20030000 		.4byte	.LCFI24-.Ltext0
 1730 0128 0200     		.2byte	0x2
 1731 012a 77       		.byte	0x77
 1732 012b 08       		.sleb128 8
 1733 012c 20030000 		.4byte	.LCFI24-.Ltext0
 1734 0130 28030000 		.4byte	.LFE10-.Ltext0
 1735 0134 0200     		.2byte	0x2
 1736 0136 7D       		.byte	0x7d
 1737 0137 08       		.sleb128 8
 1738 0138 00000000 		.4byte	0
 1739 013c 00000000 		.4byte	0
 1740              	.LLST3:
 1741 0140 2C020000 		.4byte	.LFB9-.Ltext0
 1742 0144 2E020000 		.4byte	.LCFI15-.Ltext0
 1743 0148 0200     		.2byte	0x2
 1744 014a 7D       		.byte	0x7d
 1745 014b 00       		.sleb128 0
 1746 014c 2E020000 		.4byte	.LCFI15-.Ltext0
 1747 0150 30020000 		.4byte	.LCFI16-.Ltext0
 1748 0154 0200     		.2byte	0x2
 1749 0156 7D       		.byte	0x7d
 1750 0157 08       		.sleb128 8
 1751 0158 30020000 		.4byte	.LCFI16-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 35


 1752 015c 32020000 		.4byte	.LCFI17-.Ltext0
 1753 0160 0200     		.2byte	0x2
 1754 0162 7D       		.byte	0x7d
 1755 0163 10       		.sleb128 16
 1756 0164 32020000 		.4byte	.LCFI17-.Ltext0
 1757 0168 86020000 		.4byte	.LCFI18-.Ltext0
 1758 016c 0200     		.2byte	0x2
 1759 016e 77       		.byte	0x77
 1760 016f 10       		.sleb128 16
 1761 0170 86020000 		.4byte	.LCFI18-.Ltext0
 1762 0174 88020000 		.4byte	.LCFI19-.Ltext0
 1763 0178 0200     		.2byte	0x2
 1764 017a 77       		.byte	0x77
 1765 017b 08       		.sleb128 8
 1766 017c 88020000 		.4byte	.LCFI19-.Ltext0
 1767 0180 90020000 		.4byte	.LFE9-.Ltext0
 1768 0184 0200     		.2byte	0x2
 1769 0186 7D       		.byte	0x7d
 1770 0187 08       		.sleb128 8
 1771 0188 00000000 		.4byte	0
 1772 018c 00000000 		.4byte	0
 1773              	.LLST2:
 1774 0190 74010000 		.4byte	.LFB8-.Ltext0
 1775 0194 76010000 		.4byte	.LCFI10-.Ltext0
 1776 0198 0200     		.2byte	0x2
 1777 019a 7D       		.byte	0x7d
 1778 019b 00       		.sleb128 0
 1779 019c 76010000 		.4byte	.LCFI10-.Ltext0
 1780 01a0 78010000 		.4byte	.LCFI11-.Ltext0
 1781 01a4 0200     		.2byte	0x2
 1782 01a6 7D       		.byte	0x7d
 1783 01a7 08       		.sleb128 8
 1784 01a8 78010000 		.4byte	.LCFI11-.Ltext0
 1785 01ac 7A010000 		.4byte	.LCFI12-.Ltext0
 1786 01b0 0200     		.2byte	0x2
 1787 01b2 7D       		.byte	0x7d
 1788 01b3 10       		.sleb128 16
 1789 01b4 7A010000 		.4byte	.LCFI12-.Ltext0
 1790 01b8 24020000 		.4byte	.LCFI13-.Ltext0
 1791 01bc 0200     		.2byte	0x2
 1792 01be 77       		.byte	0x77
 1793 01bf 10       		.sleb128 16
 1794 01c0 24020000 		.4byte	.LCFI13-.Ltext0
 1795 01c4 26020000 		.4byte	.LCFI14-.Ltext0
 1796 01c8 0200     		.2byte	0x2
 1797 01ca 77       		.byte	0x77
 1798 01cb 08       		.sleb128 8
 1799 01cc 26020000 		.4byte	.LCFI14-.Ltext0
 1800 01d0 2C020000 		.4byte	.LFE8-.Ltext0
 1801 01d4 0200     		.2byte	0x2
 1802 01d6 7D       		.byte	0x7d
 1803 01d7 08       		.sleb128 8
 1804 01d8 00000000 		.4byte	0
 1805 01dc 00000000 		.4byte	0
 1806              	.LLST1:
 1807 01e0 78000000 		.4byte	.LFB7-.Ltext0
 1808 01e4 7A000000 		.4byte	.LCFI5-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 36


 1809 01e8 0200     		.2byte	0x2
 1810 01ea 7D       		.byte	0x7d
 1811 01eb 00       		.sleb128 0
 1812 01ec 7A000000 		.4byte	.LCFI5-.Ltext0
 1813 01f0 7C000000 		.4byte	.LCFI6-.Ltext0
 1814 01f4 0200     		.2byte	0x2
 1815 01f6 7D       		.byte	0x7d
 1816 01f7 08       		.sleb128 8
 1817 01f8 7C000000 		.4byte	.LCFI6-.Ltext0
 1818 01fc 7E000000 		.4byte	.LCFI7-.Ltext0
 1819 0200 0200     		.2byte	0x2
 1820 0202 7D       		.byte	0x7d
 1821 0203 18       		.sleb128 24
 1822 0204 7E000000 		.4byte	.LCFI7-.Ltext0
 1823 0208 6A010000 		.4byte	.LCFI8-.Ltext0
 1824 020c 0200     		.2byte	0x2
 1825 020e 77       		.byte	0x77
 1826 020f 18       		.sleb128 24
 1827 0210 6A010000 		.4byte	.LCFI8-.Ltext0
 1828 0214 6C010000 		.4byte	.LCFI9-.Ltext0
 1829 0218 0200     		.2byte	0x2
 1830 021a 77       		.byte	0x77
 1831 021b 08       		.sleb128 8
 1832 021c 6C010000 		.4byte	.LCFI9-.Ltext0
 1833 0220 74010000 		.4byte	.LFE7-.Ltext0
 1834 0224 0200     		.2byte	0x2
 1835 0226 7D       		.byte	0x7d
 1836 0227 08       		.sleb128 8
 1837 0228 00000000 		.4byte	0
 1838 022c 00000000 		.4byte	0
 1839              	.LLST0:
 1840 0230 00000000 		.4byte	.LFB6-.Ltext0
 1841 0234 02000000 		.4byte	.LCFI0-.Ltext0
 1842 0238 0200     		.2byte	0x2
 1843 023a 7D       		.byte	0x7d
 1844 023b 00       		.sleb128 0
 1845 023c 02000000 		.4byte	.LCFI0-.Ltext0
 1846 0240 04000000 		.4byte	.LCFI1-.Ltext0
 1847 0244 0200     		.2byte	0x2
 1848 0246 7D       		.byte	0x7d
 1849 0247 08       		.sleb128 8
 1850 0248 04000000 		.4byte	.LCFI1-.Ltext0
 1851 024c 06000000 		.4byte	.LCFI2-.Ltext0
 1852 0250 0200     		.2byte	0x2
 1853 0252 7D       		.byte	0x7d
 1854 0253 18       		.sleb128 24
 1855 0254 06000000 		.4byte	.LCFI2-.Ltext0
 1856 0258 6E000000 		.4byte	.LCFI3-.Ltext0
 1857 025c 0200     		.2byte	0x2
 1858 025e 77       		.byte	0x77
 1859 025f 18       		.sleb128 24
 1860 0260 6E000000 		.4byte	.LCFI3-.Ltext0
 1861 0264 70000000 		.4byte	.LCFI4-.Ltext0
 1862 0268 0200     		.2byte	0x2
 1863 026a 77       		.byte	0x77
 1864 026b 08       		.sleb128 8
 1865 026c 70000000 		.4byte	.LCFI4-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 37


 1866 0270 78000000 		.4byte	.LFE6-.Ltext0
 1867 0274 0200     		.2byte	0x2
 1868 0276 7D       		.byte	0x7d
 1869 0277 08       		.sleb128 8
 1870 0278 00000000 		.4byte	0
 1871 027c 00000000 		.4byte	0
 1872              		.section	.debug_aranges,"",%progbits
 1873 0000 1C000000 		.4byte	0x1c
 1874 0004 0200     		.2byte	0x2
 1875 0006 00000000 		.4byte	.Ldebug_info0
 1876 000a 04       		.byte	0x4
 1877 000b 00       		.byte	0
 1878 000c 0000     		.2byte	0
 1879 000e 0000     		.2byte	0
 1880 0010 00000000 		.4byte	.Ltext0
 1881 0014 14050000 		.4byte	.Letext0-.Ltext0
 1882 0018 00000000 		.4byte	0
 1883 001c 00000000 		.4byte	0
 1884              		.section	.debug_line,"",%progbits
 1885              	.Ldebug_line0:
 1886 0000 62010000 		.section	.debug_str,"MS",%progbits,1
 1886      02006600 
 1886      00000201 
 1886      FB0E0D00 
 1886      01010101 
 1887              	.LASF24:
 1888 0000 56656374 		.ascii	"Vector_pop_back\000"
 1888      6F725F70 
 1888      6F705F62 
 1888      61636B00 
 1889              	.LASF23:
 1890 0010 66726F6D 		.ascii	"from\000"
 1890      00
 1891              	.LASF13:
 1892 0015 696E6465 		.ascii	"index1\000"
 1892      783100
 1893              	.LASF14:
 1894 001c 696E6465 		.ascii	"index2\000"
 1894      783200
 1895              	.LASF17:
 1896 0023 64657374 		.ascii	"dest_index\000"
 1896      5F696E64 
 1896      657800
 1897              	.LASF3:
 1898 002e 64617461 		.ascii	"data_size\000"
 1898      5F73697A 
 1898      6500
 1899              	.LASF5:
 1900 0038 756E7369 		.ascii	"unsigned int\000"
 1900      676E6564 
 1900      20696E74 
 1900      00
 1901              	.LASF26:
 1902 0045 56656374 		.ascii	"Vector_push_back\000"
 1902      6F725F70 
 1902      7573685F 
 1902      6261636B 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 38


 1902      00
 1903              	.LASF38:
 1904 0056 56656374 		.ascii	"Vector_init\000"
 1904      6F725F69 
 1904      6E697400 
 1905              	.LASF33:
 1906 0062 2E2E2F2E 		.ascii	"../../source/src/kernel/OS_LIB/vector.c\000"
 1906      2E2F736F 
 1906      75726365 
 1906      2F737263 
 1906      2F6B6572 
 1907              	.LASF16:
 1908 008a 56656374 		.ascii	"Vector_set_inner\000"
 1908      6F725F73 
 1908      65745F69 
 1908      6E6E6572 
 1908      00
 1909              	.LASF31:
 1910 009b 6C656E5F 		.ascii	"len_per_data\000"
 1910      7065725F 
 1910      64617461 
 1910      00
 1911              	.LASF9:
 1912 00a8 756E7369 		.ascii	"unsigned char\000"
 1912      676E6564 
 1912      20636861 
 1912      7200
 1913              	.LASF10:
 1914 00b6 73686F72 		.ascii	"short unsigned int\000"
 1914      7420756E 
 1914      7369676E 
 1914      65642069 
 1914      6E7400
 1915              	.LASF27:
 1916 00c9 70757368 		.ascii	"push_data_ptr\000"
 1916      5F646174 
 1916      615F7074 
 1916      7200
 1917              	.LASF18:
 1918 00d7 7372635F 		.ascii	"src_index\000"
 1918      696E6465 
 1918      7800
 1919              	.LASF2:
 1920 00e1 6375725F 		.ascii	"cur_len\000"
 1920      6C656E00 
 1921              	.LASF1:
 1922 00e9 6D61785F 		.ascii	"max_len\000"
 1922      6C656E00 
 1923              	.LASF0:
 1924 00f1 64617461 		.ascii	"data_ptr\000"
 1924      5F707472 
 1924      00
 1925              	.LASF11:
 1926 00fa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1926      206C6F6E 
 1926      6720756E 
 1926      7369676E 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 39


 1926      65642069 
 1927              	.LASF36:
 1928 0111 56656374 		.ascii	"Vector\000"
 1928      6F7200
 1929              	.LASF12:
 1930 0118 76656374 		.ascii	"vector_ptr\000"
 1930      6F725F70 
 1930      747200
 1931              	.LASF29:
 1932 0123 62756666 		.ascii	"buffer_ptr\000"
 1932      65725F70 
 1932      747200
 1933              	.LASF8:
 1934 012e 6C6F6E67 		.ascii	"long long int\000"
 1934      206C6F6E 
 1934      6720696E 
 1934      7400
 1935              	.LASF19:
 1936 013c 56656374 		.ascii	"Vector_remove_index_data\000"
 1936      6F725F72 
 1936      656D6F76 
 1936      655F696E 
 1936      6465785F 
 1937              	.LASF35:
 1938 0155 76656374 		.ascii	"vector\000"
 1938      6F7200
 1939              	.LASF22:
 1940 015c 56656374 		.ascii	"Vector_erase_data\000"
 1940      6F725F65 
 1940      72617365 
 1940      5F646174 
 1940      6100
 1941              	.LASF20:
 1942 016e 696E6465 		.ascii	"index\000"
 1942      7800
 1943              	.LASF21:
 1944 0174 64617461 		.ascii	"data_store_ptr\000"
 1944      5F73746F 
 1944      72655F70 
 1944      747200
 1945              	.LASF4:
 1946 0183 65787465 		.ascii	"extension_factor\000"
 1946      6E73696F 
 1946      6E5F6661 
 1946      63746F72 
 1946      00
 1947              	.LASF7:
 1948 0194 73686F72 		.ascii	"short int\000"
 1948      7420696E 
 1948      7400
 1949              	.LASF37:
 1950 019e 65787061 		.ascii	"expand_room\000"
 1950      6E645F72 
 1950      6F6F6D00 
 1951              	.LASF28:
 1952 01aa 62756666 		.ascii	"buffer\000"
 1952      657200
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 40


 1953              	.LASF15:
 1954 01b1 56656374 		.ascii	"Vector_swap_inner\000"
 1954      6F725F73 
 1954      7761705F 
 1954      696E6E65 
 1954      7200
 1955              	.LASF32:
 1956 01c3 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 1956      43313120 
 1956      372E332E 
 1956      31203230 
 1956      31383036 
 1957 01f6 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 1957      20726576 
 1957      6973696F 
 1957      6E203236 
 1957      31393037 
 1958 0229 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 1958      616D6520 
 1958      2D6D7468 
 1958      756D622D 
 1958      696E7465 
 1959 025c 67647761 		.ascii	"gdwarf-2 -O0\000"
 1959      72662D32 
 1959      202D4F30 
 1959      00
 1960              	.LASF25:
 1961 0269 706F705F 		.ascii	"pop_data_ptr\000"
 1961      64617461 
 1961      5F707472 
 1961      00
 1962              	.LASF6:
 1963 0276 7369676E 		.ascii	"signed char\000"
 1963      65642063 
 1963      68617200 
 1964              	.LASF30:
 1965 0282 73697A65 		.ascii	"size\000"
 1965      00
 1966              	.LASF34:
 1967 0287 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 1967      616B615C 
 1967      4B414B41 
 1967      4F535C43 
 1967      5C77696E 
 1968 02af 757635A3 		.ascii	"uv5\243\251\000"
 1968      A900
 1969              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 vector.c
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:16     .rodata:00000000 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:20     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:27     .text:00000000 Vector_init
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:119    .text:00000074 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:123    .text:00000078 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:129    .text:00000078 expand_room
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:285    .text:00000170 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:289    .text:00000174 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:296    .text:00000174 Vector_push_back
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:421    .text:00000228 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:425    .text:0000022c $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:432    .text:0000022c Vector_pop_back
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:510    .text:0000028c $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:514    .text:00000290 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:521    .text:00000290 Vector_erase_data
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:622    .text:00000324 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:626    .text:00000328 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:633    .text:00000328 Vector_remove_index_data
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:738    .text:000003c4 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:742    .text:000003c8 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:749    .text:000003c8 Vector_set_inner
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:840    .text:00000440 $d
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:844    .text:00000444 $t
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:851    .text:00000444 Vector_swap_inner
G:\Users\Jaxb\AppData\Local\Temp\ccmwGwr3.s:985    .text:00000510 $d

UNDEFINED SYMBOLS
_ASSERT
ka_malloc
ka_memcpy
ka_free
