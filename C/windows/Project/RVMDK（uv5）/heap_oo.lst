ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"heap_oo.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  20              		.type	Vector_get_index_data, %function
  21              	Vector_get_index_data:
  22              	.LFB0:
  23              		.file 1 "../../source/include/os_lib/vector.h"
   1:../../source/include/os_lib/vector.h **** #ifndef _VECTOR_H
   2:../../source/include/os_lib/vector.h **** #define _VECTOR_H
   3:../../source/include/os_lib/vector.h **** 
   4:../../source/include/os_lib/vector.h **** #include <myMicroLIB.h>
   5:../../source/include/os_lib/vector.h **** 
   6:../../source/include/os_lib/vector.h **** #define f_free(ptr)				ka_free(ptr)
   7:../../source/include/os_lib/vector.h **** #define f_memcpy(des,src,size)	ka_memcpy(des,src,size)
   8:../../source/include/os_lib/vector.h **** #define f_malloc(size)			ka_malloc(size)
   9:../../source/include/os_lib/vector.h **** 
  10:../../source/include/os_lib/vector.h **** typedef struct vector
  11:../../source/include/os_lib/vector.h **** {
  12:../../source/include/os_lib/vector.h ****     void *data_ptr;
  13:../../source/include/os_lib/vector.h ****     unsigned int max_len;
  14:../../source/include/os_lib/vector.h ****     unsigned int cur_len;
  15:../../source/include/os_lib/vector.h ****     unsigned int data_size;
  16:../../source/include/os_lib/vector.h **** /*
  17:../../source/include/os_lib/vector.h **** 	if the highest bit is 1, multiply
  18:../../source/include/os_lib/vector.h **** 	if the highest bit is 0, add
  19:../../source/include/os_lib/vector.h **** 	use the following macro to produce this member:MKVFMUL  MKVFADD
  20:../../source/include/os_lib/vector.h ****  */
  21:../../source/include/os_lib/vector.h ****     unsigned int extension_factor;
  22:../../source/include/os_lib/vector.h **** }Vector;
  23:../../source/include/os_lib/vector.h **** 
  24:../../source/include/os_lib/vector.h **** #define ERROR_ALLOCATE_ROOM 1
  25:../../source/include/os_lib/vector.h **** #define ERROR_DATA_EMPTY    2
  26:../../source/include/os_lib/vector.h **** 
  27:../../source/include/os_lib/vector.h **** /*
  28:../../source/include/os_lib/vector.h **** get vector[index] data into *data_store_ptr
  29:../../source/include/os_lib/vector.h ****  */
  30:../../source/include/os_lib/vector.h **** static inline void Vector_get_index_data(Vector *vector_ptr,unsigned int index,void *data_store_ptr
  31:../../source/include/os_lib/vector.h **** {
  24              		.loc 1 31 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 16
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 2


  27              		@ frame_needed = 1, uses_anonymous_args = 0
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 84B0     		sub	sp, sp, #16
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 24
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  32:../../source/include/os_lib/vector.h **** 	f_memcpy(data_store_ptr,(char*)(vector_ptr->data_ptr) + index * vector_ptr->data_size,vector_ptr->
  42              		.loc 1 32 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e 1A68     		ldr	r2, [r3]
  45 0010 FB68     		ldr	r3, [r7, #12]
  46 0012 DB68     		ldr	r3, [r3, #12]
  47 0014 B968     		ldr	r1, [r7, #8]
  48 0016 01FB03F3 		mul	r3, r1, r3
  49 001a D118     		adds	r1, r2, r3
  50 001c FB68     		ldr	r3, [r7, #12]
  51 001e DB68     		ldr	r3, [r3, #12]
  52 0020 1A46     		mov	r2, r3
  53 0022 7868     		ldr	r0, [r7, #4]
  54 0024 FFF7FEFF 		bl	ka_memcpy
  33:../../source/include/os_lib/vector.h **** }
  55              		.loc 1 33 0
  56 0028 00BF     		nop
  57 002a 1037     		adds	r7, r7, #16
  58              	.LCFI3:
  59              		.cfi_def_cfa_offset 8
  60 002c BD46     		mov	sp, r7
  61              	.LCFI4:
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 002e 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	Vector_get_index_data, .-Vector_get_index_data
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu softvfp
  73              		.type	Vector_set_index_data, %function
  74              	Vector_set_index_data:
  75              	.LFB1:
  34:../../source/include/os_lib/vector.h **** 
  35:../../source/include/os_lib/vector.h **** /*
  36:../../source/include/os_lib/vector.h **** set vector[index] data with *data_store_ptr
  37:../../source/include/os_lib/vector.h ****  */
  38:../../source/include/os_lib/vector.h **** static inline void Vector_set_index_data(Vector *vector_ptr,unsigned int index,void *data_store_ptr
  39:../../source/include/os_lib/vector.h **** {
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 3


  76              		.loc 1 39 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 16
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0030 80B5     		push	{r7, lr}
  81              	.LCFI5:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0032 84B0     		sub	sp, sp, #16
  86              	.LCFI6:
  87              		.cfi_def_cfa_offset 24
  88 0034 00AF     		add	r7, sp, #0
  89              	.LCFI7:
  90              		.cfi_def_cfa_register 7
  91 0036 F860     		str	r0, [r7, #12]
  92 0038 B960     		str	r1, [r7, #8]
  93 003a 7A60     		str	r2, [r7, #4]
  40:../../source/include/os_lib/vector.h **** 	f_memcpy((char*)(vector_ptr->data_ptr) + index * vector_ptr->data_size,data_store_ptr,vector_ptr->
  94              		.loc 1 40 0
  95 003c FB68     		ldr	r3, [r7, #12]
  96 003e 1A68     		ldr	r2, [r3]
  97 0040 FB68     		ldr	r3, [r7, #12]
  98 0042 DB68     		ldr	r3, [r3, #12]
  99 0044 B968     		ldr	r1, [r7, #8]
 100 0046 01FB03F3 		mul	r3, r1, r3
 101 004a D018     		adds	r0, r2, r3
 102 004c FB68     		ldr	r3, [r7, #12]
 103 004e DB68     		ldr	r3, [r3, #12]
 104 0050 1A46     		mov	r2, r3
 105 0052 7968     		ldr	r1, [r7, #4]
 106 0054 FFF7FEFF 		bl	ka_memcpy
  41:../../source/include/os_lib/vector.h **** }
 107              		.loc 1 41 0
 108 0058 00BF     		nop
 109 005a 1037     		adds	r7, r7, #16
 110              	.LCFI8:
 111              		.cfi_def_cfa_offset 8
 112 005c BD46     		mov	sp, r7
 113              	.LCFI9:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 005e 80BD     		pop	{r7, pc}
 117              		.cfi_endproc
 118              	.LFE1:
 119              		.size	Vector_set_index_data, .-Vector_set_index_data
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 125              		.type	get_Vector_cur_len, %function
 126              	get_Vector_cur_len:
 127              	.LFB5:
  42:../../source/include/os_lib/vector.h **** 
  43:../../source/include/os_lib/vector.h **** /*
  44:../../source/include/os_lib/vector.h **** delete vector
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 4


  45:../../source/include/os_lib/vector.h ****  */
  46:../../source/include/os_lib/vector.h **** static inline void Vector_delete(Vector *vector_ptr)
  47:../../source/include/os_lib/vector.h **** {
  48:../../source/include/os_lib/vector.h **** 	f_free(vector_ptr->data_ptr);
  49:../../source/include/os_lib/vector.h **** }
  50:../../source/include/os_lib/vector.h **** 
  51:../../source/include/os_lib/vector.h **** static inline void Vector_get_index_address(Vector *vector_ptr,unsigned int index,void **data_add_p
  52:../../source/include/os_lib/vector.h **** {
  53:../../source/include/os_lib/vector.h **** 	*data_add_ptr = (void *)((char*)(vector_ptr->data_ptr) + index * vector_ptr->data_size);
  54:../../source/include/os_lib/vector.h **** }
  55:../../source/include/os_lib/vector.h **** 
  56:../../source/include/os_lib/vector.h **** int Vector_init(Vector *vector_ptr,unsigned int size,int len_per_data,unsigned int extension_factor
  57:../../source/include/os_lib/vector.h **** int Vector_push_back(Vector *vector_ptr,void *push_data_ptr);
  58:../../source/include/os_lib/vector.h **** int Vector_pop_back(Vector *vector_ptr,void *pop_data_ptr);
  59:../../source/include/os_lib/vector.h **** void Vector_set_index_data(Vector *vector_ptr,unsigned int index,void *data_store_ptr);
  60:../../source/include/os_lib/vector.h **** int Vector_erase_data(Vector *vector_ptr,unsigned int from,unsigned int to);
  61:../../source/include/os_lib/vector.h **** int Vector_remove_index_data(Vector *vector_ptr,unsigned int index,void *data_store_ptr);/*if data_
  62:../../source/include/os_lib/vector.h **** int Vector_set_inner(Vector *vector_ptr,unsigned int dest_index,unsigned int src_index);
  63:../../source/include/os_lib/vector.h **** int Vector_swap_inner(Vector *vector_ptr,unsigned int index1,unsigned int index2);
  64:../../source/include/os_lib/vector.h **** 
  65:../../source/include/os_lib/vector.h **** 
  66:../../source/include/os_lib/vector.h **** #define MKVFMUL(x) (0x80000000 | (x))
  67:../../source/include/os_lib/vector.h **** #define MKVFADD(x) (~0x80000000 & (x))
  68:../../source/include/os_lib/vector.h **** #define VFISMUL(x) (0x80000000 & (x))
  69:../../source/include/os_lib/vector.h **** #define VFISADD(x) (!(VFISMUL(x)))
  70:../../source/include/os_lib/vector.h **** #define GET_EXPENSION_FACTOR(x) (~0x80000000 & (x))
  71:../../source/include/os_lib/vector.h **** #define DECLARE_VECTOR(name,type,len,extension_factor) \
  72:../../source/include/os_lib/vector.h **** Vector name; \
  73:../../source/include/os_lib/vector.h **** do{ \
  74:../../source/include/os_lib/vector.h **** 	Vector_init(&(name),len,sizeof(type),extension_factor); \
  75:../../source/include/os_lib/vector.h **** }while(0)
  76:../../source/include/os_lib/vector.h **** 
  77:../../source/include/os_lib/vector.h **** static inline unsigned int get_Vector_size(Vector *vector_ptr)
  78:../../source/include/os_lib/vector.h **** {
  79:../../source/include/os_lib/vector.h **** 	return vector_ptr->max_len;
  80:../../source/include/os_lib/vector.h **** }
  81:../../source/include/os_lib/vector.h **** static inline unsigned int get_Vector_cur_len(Vector *vector_ptr)
  82:../../source/include/os_lib/vector.h **** {
 128              		.loc 1 82 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0060 80B4     		push	{r7}
 134              	.LCFI10:
 135              		.cfi_def_cfa_offset 4
 136              		.cfi_offset 7, -4
 137 0062 83B0     		sub	sp, sp, #12
 138              	.LCFI11:
 139              		.cfi_def_cfa_offset 16
 140 0064 00AF     		add	r7, sp, #0
 141              	.LCFI12:
 142              		.cfi_def_cfa_register 7
 143 0066 7860     		str	r0, [r7, #4]
  83:../../source/include/os_lib/vector.h **** 	return vector_ptr->cur_len;
 144              		.loc 1 83 0
 145 0068 7B68     		ldr	r3, [r7, #4]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 5


 146 006a 9B68     		ldr	r3, [r3, #8]
  84:../../source/include/os_lib/vector.h **** }
 147              		.loc 1 84 0
 148 006c 1846     		mov	r0, r3
 149 006e 0C37     		adds	r7, r7, #12
 150              	.LCFI13:
 151              		.cfi_def_cfa_offset 4
 152 0070 BD46     		mov	sp, r7
 153              	.LCFI14:
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 0072 80BC     		pop	{r7}
 157              	.LCFI15:
 158              		.cfi_restore 7
 159              		.cfi_def_cfa_offset 0
 160 0074 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE5:
 163              		.size	get_Vector_cur_len, .-get_Vector_cur_len
 164              		.align	1
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu softvfp
 169              		.type	heap_get_cur_len, %function
 170              	heap_get_cur_len:
 171              	.LFB8:
 172              		.file 2 "../../source/include/os_lib/heap_oo.h"
   1:../../source/include/os_lib/heap_oo.h **** #ifndef _HEAP_OO_H
   2:../../source/include/os_lib/heap_oo.h **** #define _HEAP_OO_H
   3:../../source/include/os_lib/heap_oo.h **** 
   4:../../source/include/os_lib/heap_oo.h **** #include <vector.h>
   5:../../source/include/os_lib/heap_oo.h **** 
   6:../../source/include/os_lib/heap_oo.h **** #define heap_remove_top(little_heap_ptr,data_store_ptr)  heap_remove_index_data((little_heap_ptr),1
   7:../../source/include/os_lib/heap_oo.h **** #define heap_get_top(little_heap_ptr,data_store_ptr)  heap_get_index_data((little_heap_ptr),(data_s
   8:../../source/include/os_lib/heap_oo.h **** #define heap_get_top_safe(little_heap_ptr,data_store_ptr)  heap_get_index_data_safe((little_heap_pt
   9:../../source/include/os_lib/heap_oo.h **** 
  10:../../source/include/os_lib/heap_oo.h **** struct little_heap
  11:../../source/include/os_lib/heap_oo.h **** {
  12:../../source/include/os_lib/heap_oo.h **** /*private*/
  13:../../source/include/os_lib/heap_oo.h **** 	Vector data;   /* use array to store the data , index start is 1*/
  14:../../source/include/os_lib/heap_oo.h **** 	/* return value <0 means data[index1] < data[index2] */
  15:../../source/include/os_lib/heap_oo.h **** 	int (*cmp)(Vector *Vector_ptr,unsigned int index1,unsigned int index2); /* object oriented*/
  16:../../source/include/os_lib/heap_oo.h **** 	/*auto used by heap_adjust(),if you do not need if,give a empty function to it*/
  17:../../source/include/os_lib/heap_oo.h **** 	void (*index_change_record)(Vector *Vector_ptr,int index);/* object oriented*/
  18:../../source/include/os_lib/heap_oo.h **** };
  19:../../source/include/os_lib/heap_oo.h **** 
  20:../../source/include/os_lib/heap_oo.h **** int heap_init(struct little_heap *const little_heap_ptr,
  21:../../source/include/os_lib/heap_oo.h **** 	unsigned int size,
  22:../../source/include/os_lib/heap_oo.h **** 	unsigned int len_per_data,
  23:../../source/include/os_lib/heap_oo.h **** 	int (*cmp)(Vector *Vector_ptr,unsigned int index1,unsigned int index2),
  24:../../source/include/os_lib/heap_oo.h **** 	void (*index_change_record)(Vector *Vector_ptr,int index));
  25:../../source/include/os_lib/heap_oo.h **** 
  26:../../source/include/os_lib/heap_oo.h **** static inline void heap_delete(struct little_heap *little_heap_ptr)
  27:../../source/include/os_lib/heap_oo.h **** {
  28:../../source/include/os_lib/heap_oo.h **** 	Vector_delete(&little_heap_ptr->data);
  29:../../source/include/os_lib/heap_oo.h **** }
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 6


  30:../../source/include/os_lib/heap_oo.h **** 
  31:../../source/include/os_lib/heap_oo.h **** /*get the data with index "index" and store it into *data_store_ptr*/
  32:../../source/include/os_lib/heap_oo.h **** static inline void heap_get_index_data(struct little_heap *little_heap_ptr,void *data_store_ptr,uns
  33:../../source/include/os_lib/heap_oo.h **** {
  34:../../source/include/os_lib/heap_oo.h **** 	Vector_get_index_data(&little_heap_ptr->data,index,data_store_ptr);
  35:../../source/include/os_lib/heap_oo.h **** }
  36:../../source/include/os_lib/heap_oo.h **** 
  37:../../source/include/os_lib/heap_oo.h **** static inline unsigned int heap_get_cur_len(struct little_heap *little_heap_ptr)
  38:../../source/include/os_lib/heap_oo.h **** {
 173              		.loc 2 38 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0076 80B5     		push	{r7, lr}
 178              	.LCFI16:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0078 82B0     		sub	sp, sp, #8
 183              	.LCFI17:
 184              		.cfi_def_cfa_offset 16
 185 007a 00AF     		add	r7, sp, #0
 186              	.LCFI18:
 187              		.cfi_def_cfa_register 7
 188 007c 7860     		str	r0, [r7, #4]
  39:../../source/include/os_lib/heap_oo.h **** 	return get_Vector_cur_len(&little_heap_ptr->data);
 189              		.loc 2 39 0
 190 007e 7B68     		ldr	r3, [r7, #4]
 191 0080 1846     		mov	r0, r3
 192 0082 FFF7EDFF 		bl	get_Vector_cur_len
 193 0086 0346     		mov	r3, r0
  40:../../source/include/os_lib/heap_oo.h **** }
 194              		.loc 2 40 0
 195 0088 1846     		mov	r0, r3
 196 008a 0837     		adds	r7, r7, #8
 197              	.LCFI19:
 198              		.cfi_def_cfa_offset 8
 199 008c BD46     		mov	sp, r7
 200              	.LCFI20:
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 008e 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE8:
 206              		.size	heap_get_cur_len, .-heap_get_cur_len
 207              		.section	.rodata
 208              		.align	2
 209              	.LC0:
 210 0000 2E2E2F2E 		.ascii	"../../source/src/kernel/OS_LIB/heap_oo.c\000"
 210      2E2F736F 
 210      75726365 
 210      2F737263 
 210      2F6B6572 
 211              		.text
 212              		.align	1
 213              		.global	heap_init
 214              		.syntax unified
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 7


 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 218              		.type	heap_init, %function
 219              	heap_init:
 220              	.LFB9:
 221              		.file 3 "../../source/src/kernel/OS_LIB/heap_oo.c"
   1:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <heap_oo.h>
   2:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <myassert.h>
   3:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <os_error.h>
   4:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <myMicroLIB.h>
   5:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <ka_configuration.h>
   6:../../source/src/kernel/OS_LIB/heap_oo.c **** #include <kakaosstdint.h>
   7:../../source/src/kernel/OS_LIB/heap_oo.c **** 
   8:../../source/src/kernel/OS_LIB/heap_oo.c **** #define MIN(a,b) ((a) < (b) ? (a) : (b))
   9:../../source/src/kernel/OS_LIB/heap_oo.c **** 
  10:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_init(struct little_heap *const little_heap_ptr,
  11:../../source/src/kernel/OS_LIB/heap_oo.c **** 	unsigned int size, /* parameter for vector*/
  12:../../source/src/kernel/OS_LIB/heap_oo.c **** 	unsigned int len_per_data, /* parameter for vector*/
  13:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int (*cmp)(Vector *Vector_ptr,unsigned int index1,unsigned int index2),
  14:../../source/src/kernel/OS_LIB/heap_oo.c **** 	void (*index_change_record)(Vector *Vector_ptr,int index))
  15:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 222              		.loc 3 15 0
 223              		.cfi_startproc
 224              		@ args = 4, pretend = 0, frame = 24
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0090 80B5     		push	{r7, lr}
 227              	.LCFI21:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0092 86B0     		sub	sp, sp, #24
 232              	.LCFI22:
 233              		.cfi_def_cfa_offset 32
 234 0094 00AF     		add	r7, sp, #0
 235              	.LCFI23:
 236              		.cfi_def_cfa_register 7
 237 0096 F860     		str	r0, [r7, #12]
 238 0098 B960     		str	r1, [r7, #8]
 239 009a 7A60     		str	r2, [r7, #4]
 240 009c 3B60     		str	r3, [r7]
  16:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int ret;
  17:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT((NULL != little_heap_ptr) && (NULL != cmp));
 241              		.loc 3 17 0
 242 009e FB68     		ldr	r3, [r7, #12]
 243 00a0 002B     		cmp	r3, #0
 244 00a2 02D0     		beq	.L8
 245              		.loc 3 17 0 is_stmt 0 discriminator 1
 246 00a4 3B68     		ldr	r3, [r7]
 247 00a6 002B     		cmp	r3, #0
 248 00a8 03D1     		bne	.L9
 249              	.L8:
 250              		.loc 3 17 0 discriminator 3
 251 00aa 1121     		movs	r1, #17
 252 00ac 1148     		ldr	r0, .L13
 253 00ae FFF7FEFF 		bl	_ASSERT
 254              	.L9:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 8


  18:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT(len_per_data <= sizeof(long long));/* need consideration*/
 255              		.loc 3 18 0 is_stmt 1
 256 00b2 7B68     		ldr	r3, [r7, #4]
 257 00b4 082B     		cmp	r3, #8
 258 00b6 03D9     		bls	.L10
 259              		.loc 3 18 0 is_stmt 0 discriminator 1
 260 00b8 1221     		movs	r1, #18
 261 00ba 0E48     		ldr	r0, .L13
 262 00bc FFF7FEFF 		bl	_ASSERT
 263              	.L10:
  19:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ret = Vector_init(&little_heap_ptr->data,size,len_per_data,MKVFMUL(2));
 264              		.loc 3 19 0 is_stmt 1
 265 00c0 F868     		ldr	r0, [r7, #12]
 266 00c2 7A68     		ldr	r2, [r7, #4]
 267 00c4 0C4B     		ldr	r3, .L13+4
 268 00c6 B968     		ldr	r1, [r7, #8]
 269 00c8 FFF7FEFF 		bl	Vector_init
 270 00cc 7861     		str	r0, [r7, #20]
  20:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(ret < 0)
 271              		.loc 3 20 0
 272 00ce 7B69     		ldr	r3, [r7, #20]
 273 00d0 002B     		cmp	r3, #0
 274 00d2 01DA     		bge	.L11
  21:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  22:../../source/src/kernel/OS_LIB/heap_oo.c **** 		return ret;
 275              		.loc 3 22 0
 276 00d4 7B69     		ldr	r3, [r7, #20]
 277 00d6 09E0     		b	.L12
 278              	.L11:
  23:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  24:../../source/src/kernel/OS_LIB/heap_oo.c **** 	little_heap_ptr->data.cur_len = 1;
 279              		.loc 3 24 0
 280 00d8 FB68     		ldr	r3, [r7, #12]
 281 00da 0122     		movs	r2, #1
 282 00dc 9A60     		str	r2, [r3, #8]
  25:../../source/src/kernel/OS_LIB/heap_oo.c **** 	little_heap_ptr->cmp = cmp;
 283              		.loc 3 25 0
 284 00de FB68     		ldr	r3, [r7, #12]
 285 00e0 3A68     		ldr	r2, [r7]
 286 00e2 5A61     		str	r2, [r3, #20]
  26:../../source/src/kernel/OS_LIB/heap_oo.c **** 	little_heap_ptr->index_change_record = index_change_record;
 287              		.loc 3 26 0
 288 00e4 FB68     		ldr	r3, [r7, #12]
 289 00e6 3A6A     		ldr	r2, [r7, #32]
 290 00e8 9A61     		str	r2, [r3, #24]
  27:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 291              		.loc 3 27 0
 292 00ea 0023     		movs	r3, #0
 293              	.L12:
  28:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 294              		.loc 3 28 0
 295 00ec 1846     		mov	r0, r3
 296 00ee 1837     		adds	r7, r7, #24
 297              	.LCFI24:
 298              		.cfi_def_cfa_offset 8
 299 00f0 BD46     		mov	sp, r7
 300              	.LCFI25:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 9


 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 00f2 80BD     		pop	{r7, pc}
 304              	.L14:
 305              		.align	2
 306              	.L13:
 307 00f4 00000000 		.word	.LC0
 308 00f8 02000080 		.word	-2147483646
 309              		.cfi_endproc
 310              	.LFE9:
 311              		.size	heap_init, .-heap_init
 312              		.align	1
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu softvfp
 317              		.type	heap_adjust, %function
 318              	heap_adjust:
 319              	.LFB10:
  29:../../source/src/kernel/OS_LIB/heap_oo.c **** 
  30:../../source/src/kernel/OS_LIB/heap_oo.c **** /*subfunction for heap sort*/
  31:../../source/src/kernel/OS_LIB/heap_oo.c **** static void heap_adjust(struct little_heap *little_heap_ptr,int index,int size)
  32:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 320              		.loc 3 32 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 24
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324 00fc 80B5     		push	{r7, lr}
 325              	.LCFI26:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 00fe 86B0     		sub	sp, sp, #24
 330              	.LCFI27:
 331              		.cfi_def_cfa_offset 32
 332 0100 00AF     		add	r7, sp, #0
 333              	.LCFI28:
 334              		.cfi_def_cfa_register 7
 335 0102 F860     		str	r0, [r7, #12]
 336 0104 B960     		str	r1, [r7, #8]
 337 0106 7A60     		str	r2, [r7, #4]
  33:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int j;
  34:../../source/src/kernel/OS_LIB/heap_oo.c **** 	Vector *Vector_ptr = &little_heap_ptr->data;
 338              		.loc 3 34 0
 339 0108 FB68     		ldr	r3, [r7, #12]
 340 010a 3B61     		str	r3, [r7, #16]
  35:../../source/src/kernel/OS_LIB/heap_oo.c **** 	Vector_set_inner(Vector_ptr,0,index);
 341              		.loc 3 35 0
 342 010c BB68     		ldr	r3, [r7, #8]
 343 010e 1A46     		mov	r2, r3
 344 0110 0021     		movs	r1, #0
 345 0112 3869     		ldr	r0, [r7, #16]
 346 0114 FFF7FEFF 		bl	Vector_set_inner
  36:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(j=2*index;j<=size;j*=2)
 347              		.loc 3 36 0
 348 0118 BB68     		ldr	r3, [r7, #8]
 349 011a 5B00     		lsls	r3, r3, #1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 10


 350 011c 7B61     		str	r3, [r7, #20]
 351 011e 2FE0     		b	.L16
 352              	.L21:
  37:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  38:../../source/src/kernel/OS_LIB/heap_oo.c **** 		if(j<size && (little_heap_ptr->cmp(Vector_ptr,j+1,j) < 0))
 353              		.loc 3 38 0
 354 0120 7A69     		ldr	r2, [r7, #20]
 355 0122 7B68     		ldr	r3, [r7, #4]
 356 0124 9A42     		cmp	r2, r3
 357 0126 0DDA     		bge	.L17
 358              		.loc 3 38 0 is_stmt 0 discriminator 1
 359 0128 FB68     		ldr	r3, [r7, #12]
 360 012a 5B69     		ldr	r3, [r3, #20]
 361 012c 7A69     		ldr	r2, [r7, #20]
 362 012e 0132     		adds	r2, r2, #1
 363 0130 1146     		mov	r1, r2
 364 0132 7A69     		ldr	r2, [r7, #20]
 365 0134 3869     		ldr	r0, [r7, #16]
 366 0136 9847     		blx	r3
 367              	.LVL0:
 368 0138 0346     		mov	r3, r0
 369 013a 002B     		cmp	r3, #0
 370 013c 02DA     		bge	.L17
  39:../../source/src/kernel/OS_LIB/heap_oo.c **** 			++j;
 371              		.loc 3 39 0 is_stmt 1
 372 013e 7B69     		ldr	r3, [r7, #20]
 373 0140 0133     		adds	r3, r3, #1
 374 0142 7B61     		str	r3, [r7, #20]
 375              	.L17:
  40:../../source/src/kernel/OS_LIB/heap_oo.c **** 		if(little_heap_ptr->cmp(Vector_ptr,0,j) <= 0)
 376              		.loc 3 40 0
 377 0144 FB68     		ldr	r3, [r7, #12]
 378 0146 5B69     		ldr	r3, [r3, #20]
 379 0148 7A69     		ldr	r2, [r7, #20]
 380 014a 0021     		movs	r1, #0
 381 014c 3869     		ldr	r0, [r7, #16]
 382 014e 9847     		blx	r3
 383              	.LVL1:
 384 0150 0346     		mov	r3, r0
 385 0152 002B     		cmp	r3, #0
 386 0154 19DD     		ble	.L23
  41:../../source/src/kernel/OS_LIB/heap_oo.c **** 			break;
  42:../../source/src/kernel/OS_LIB/heap_oo.c **** 		Vector_set_inner(Vector_ptr,index,j);
 387              		.loc 3 42 0
 388 0156 BB68     		ldr	r3, [r7, #8]
 389 0158 7A69     		ldr	r2, [r7, #20]
 390 015a 1946     		mov	r1, r3
 391 015c 3869     		ldr	r0, [r7, #16]
 392 015e FFF7FEFF 		bl	Vector_set_inner
  43:../../source/src/kernel/OS_LIB/heap_oo.c **** 		if(little_heap_ptr->index_change_record)
 393              		.loc 3 43 0
 394 0162 FB68     		ldr	r3, [r7, #12]
 395 0164 9B69     		ldr	r3, [r3, #24]
 396 0166 002B     		cmp	r3, #0
 397 0168 05D0     		beq	.L20
  44:../../source/src/kernel/OS_LIB/heap_oo.c **** 		{
  45:../../source/src/kernel/OS_LIB/heap_oo.c **** 			little_heap_ptr->index_change_record(&little_heap_ptr->data,index);
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 11


 398              		.loc 3 45 0
 399 016a FB68     		ldr	r3, [r7, #12]
 400 016c 9B69     		ldr	r3, [r3, #24]
 401 016e FA68     		ldr	r2, [r7, #12]
 402 0170 B968     		ldr	r1, [r7, #8]
 403 0172 1046     		mov	r0, r2
 404 0174 9847     		blx	r3
 405              	.LVL2:
 406              	.L20:
  46:../../source/src/kernel/OS_LIB/heap_oo.c **** 		}
  47:../../source/src/kernel/OS_LIB/heap_oo.c **** 		index = j;
 407              		.loc 3 47 0 discriminator 2
 408 0176 7B69     		ldr	r3, [r7, #20]
 409 0178 BB60     		str	r3, [r7, #8]
  36:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 410              		.loc 3 36 0 discriminator 2
 411 017a 7B69     		ldr	r3, [r7, #20]
 412 017c 5B00     		lsls	r3, r3, #1
 413 017e 7B61     		str	r3, [r7, #20]
 414              	.L16:
  36:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 415              		.loc 3 36 0 is_stmt 0 discriminator 1
 416 0180 7A69     		ldr	r2, [r7, #20]
 417 0182 7B68     		ldr	r3, [r7, #4]
 418 0184 9A42     		cmp	r2, r3
 419 0186 CBDD     		ble	.L21
 420 0188 00E0     		b	.L19
 421              	.L23:
  41:../../source/src/kernel/OS_LIB/heap_oo.c **** 		Vector_set_inner(Vector_ptr,index,j);
 422              		.loc 3 41 0 is_stmt 1
 423 018a 00BF     		nop
 424              	.L19:
  48:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  49:../../source/src/kernel/OS_LIB/heap_oo.c **** 	Vector_set_inner(Vector_ptr,index,0);
 425              		.loc 3 49 0
 426 018c BB68     		ldr	r3, [r7, #8]
 427 018e 0022     		movs	r2, #0
 428 0190 1946     		mov	r1, r3
 429 0192 3869     		ldr	r0, [r7, #16]
 430 0194 FFF7FEFF 		bl	Vector_set_inner
  50:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(little_heap_ptr->index_change_record)
 431              		.loc 3 50 0
 432 0198 FB68     		ldr	r3, [r7, #12]
 433 019a 9B69     		ldr	r3, [r3, #24]
 434 019c 002B     		cmp	r3, #0
 435 019e 05D0     		beq	.L24
  51:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  52:../../source/src/kernel/OS_LIB/heap_oo.c **** 		little_heap_ptr->index_change_record(&little_heap_ptr->data,index);
 436              		.loc 3 52 0
 437 01a0 FB68     		ldr	r3, [r7, #12]
 438 01a2 9B69     		ldr	r3, [r3, #24]
 439 01a4 FA68     		ldr	r2, [r7, #12]
 440 01a6 B968     		ldr	r1, [r7, #8]
 441 01a8 1046     		mov	r0, r2
 442 01aa 9847     		blx	r3
 443              	.LVL3:
 444              	.L24:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 12


  53:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  54:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 445              		.loc 3 54 0
 446 01ac 00BF     		nop
 447 01ae 1837     		adds	r7, r7, #24
 448              	.LCFI29:
 449              		.cfi_def_cfa_offset 8
 450 01b0 BD46     		mov	sp, r7
 451              	.LCFI30:
 452              		.cfi_def_cfa_register 13
 453              		@ sp needed
 454 01b2 80BD     		pop	{r7, pc}
 455              		.cfi_endproc
 456              	.LFE10:
 457              		.size	heap_adjust, .-heap_adjust
 458              		.align	1
 459              		.global	heap_push
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu softvfp
 464              		.type	heap_push, %function
 465              	heap_push:
 466              	.LFB11:
  55:../../source/src/kernel/OS_LIB/heap_oo.c **** 
  56:../../source/src/kernel/OS_LIB/heap_oo.c **** /*add a data with *push_data_ptr, then adjust the heap */
  57:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_push(struct little_heap *little_heap_ptr,void *push_data_ptr)
  58:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 467              		.loc 3 58 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 24
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 01b4 B0B5     		push	{r4, r5, r7, lr}
 472              	.LCFI31:
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 01b6 86B0     		sub	sp, sp, #24
 479              	.LCFI32:
 480              		.cfi_def_cfa_offset 40
 481 01b8 00AF     		add	r7, sp, #0
 482              	.LCFI33:
 483              		.cfi_def_cfa_register 7
 484 01ba 7860     		str	r0, [r7, #4]
 485 01bc 3960     		str	r1, [r7]
  59:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT((NULL != little_heap_ptr) && (NULL != push_data_ptr));
 486              		.loc 3 59 0
 487 01be 7B68     		ldr	r3, [r7, #4]
 488 01c0 002B     		cmp	r3, #0
 489 01c2 02D0     		beq	.L26
 490              		.loc 3 59 0 is_stmt 0 discriminator 1
 491 01c4 3B68     		ldr	r3, [r7]
 492 01c6 002B     		cmp	r3, #0
 493 01c8 03D1     		bne	.L27
 494              	.L26:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 13


 495              		.loc 3 59 0 discriminator 3
 496 01ca 3B21     		movs	r1, #59
 497 01cc 2148     		ldr	r0, .L34
 498 01ce FFF7FEFF 		bl	_ASSERT
 499              	.L27:
  60:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int ret,i,size;
  61:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ret = Vector_push_back(&little_heap_ptr->data,push_data_ptr);
 500              		.loc 3 61 0 is_stmt 1
 501 01d2 7B68     		ldr	r3, [r7, #4]
 502 01d4 3968     		ldr	r1, [r7]
 503 01d6 1846     		mov	r0, r3
 504 01d8 FFF7FEFF 		bl	Vector_push_back
 505 01dc 3861     		str	r0, [r7, #16]
  62:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(little_heap_ptr->index_change_record)
 506              		.loc 3 62 0
 507 01de 7B68     		ldr	r3, [r7, #4]
 508 01e0 9B69     		ldr	r3, [r3, #24]
 509 01e2 002B     		cmp	r3, #0
 510 01e4 0AD0     		beq	.L28
  63:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  64:../../source/src/kernel/OS_LIB/heap_oo.c **** 		little_heap_ptr->index_change_record(&little_heap_ptr->data,heap_get_cur_len(little_heap_ptr)-1);
 511              		.loc 3 64 0
 512 01e6 7B68     		ldr	r3, [r7, #4]
 513 01e8 9C69     		ldr	r4, [r3, #24]
 514 01ea 7D68     		ldr	r5, [r7, #4]
 515 01ec 7868     		ldr	r0, [r7, #4]
 516 01ee FFF742FF 		bl	heap_get_cur_len
 517 01f2 0346     		mov	r3, r0
 518 01f4 013B     		subs	r3, r3, #1
 519 01f6 1946     		mov	r1, r3
 520 01f8 2846     		mov	r0, r5
 521 01fa A047     		blx	r4
 522              	.LVL4:
 523              	.L28:
  65:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  66:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT(0 == ret);
 524              		.loc 3 66 0
 525 01fc 3B69     		ldr	r3, [r7, #16]
 526 01fe 002B     		cmp	r3, #0
 527 0200 03D0     		beq	.L29
 528              		.loc 3 66 0 is_stmt 0 discriminator 1
 529 0202 4221     		movs	r1, #66
 530 0204 1348     		ldr	r0, .L34
 531 0206 FFF7FEFF 		bl	_ASSERT
 532              	.L29:
  67:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(ret < 0)
 533              		.loc 3 67 0 is_stmt 1
 534 020a 3B69     		ldr	r3, [r7, #16]
 535 020c 002B     		cmp	r3, #0
 536 020e 01DA     		bge	.L30
  68:../../source/src/kernel/OS_LIB/heap_oo.c **** 		return ret;
 537              		.loc 3 68 0
 538 0210 3B69     		ldr	r3, [r7, #16]
 539 0212 1AE0     		b	.L31
 540              	.L30:
  69:../../source/src/kernel/OS_LIB/heap_oo.c **** 	size = get_Vector_cur_len(&little_heap_ptr->data) - 1;
 541              		.loc 3 69 0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 14


 542 0214 7B68     		ldr	r3, [r7, #4]
 543 0216 1846     		mov	r0, r3
 544 0218 FFF722FF 		bl	get_Vector_cur_len
 545 021c 0346     		mov	r3, r0
 546 021e 013B     		subs	r3, r3, #1
 547 0220 FB60     		str	r3, [r7, #12]
  70:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;i/=2)
 548              		.loc 3 70 0
 549 0222 FB68     		ldr	r3, [r7, #12]
 550 0224 DA0F     		lsrs	r2, r3, #31
 551 0226 1344     		add	r3, r3, r2
 552 0228 5B10     		asrs	r3, r3, #1
 553 022a 7B61     		str	r3, [r7, #20]
 554 022c 09E0     		b	.L32
 555              	.L33:
  71:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  72:../../source/src/kernel/OS_LIB/heap_oo.c **** 		heap_adjust(little_heap_ptr,i,size);
 556              		.loc 3 72 0 discriminator 3
 557 022e FA68     		ldr	r2, [r7, #12]
 558 0230 7969     		ldr	r1, [r7, #20]
 559 0232 7868     		ldr	r0, [r7, #4]
 560 0234 FFF762FF 		bl	heap_adjust
  70:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;i/=2)
 561              		.loc 3 70 0 discriminator 3
 562 0238 7B69     		ldr	r3, [r7, #20]
 563 023a DA0F     		lsrs	r2, r3, #31
 564 023c 1344     		add	r3, r3, r2
 565 023e 5B10     		asrs	r3, r3, #1
 566 0240 7B61     		str	r3, [r7, #20]
 567              	.L32:
  70:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;i/=2)
 568              		.loc 3 70 0 is_stmt 0 discriminator 1
 569 0242 7B69     		ldr	r3, [r7, #20]
 570 0244 002B     		cmp	r3, #0
 571 0246 F2DC     		bgt	.L33
  73:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  74:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 572              		.loc 3 74 0 is_stmt 1
 573 0248 0023     		movs	r3, #0
 574              	.L31:
  75:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 575              		.loc 3 75 0
 576 024a 1846     		mov	r0, r3
 577 024c 1837     		adds	r7, r7, #24
 578              	.LCFI34:
 579              		.cfi_def_cfa_offset 16
 580 024e BD46     		mov	sp, r7
 581              	.LCFI35:
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 0250 B0BD     		pop	{r4, r5, r7, pc}
 585              	.L35:
 586 0252 00BF     		.align	2
 587              	.L34:
 588 0254 00000000 		.word	.LC0
 589              		.cfi_endproc
 590              	.LFE11:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 15


 591              		.size	heap_push, .-heap_push
 592              		.align	1
 593              		.global	heap_get_index_data_safe
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu softvfp
 598              		.type	heap_get_index_data_safe, %function
 599              	heap_get_index_data_safe:
 600              	.LFB12:
  76:../../source/src/kernel/OS_LIB/heap_oo.c **** 
  77:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_get_index_data_safe(struct little_heap *little_heap_ptr,void *data_store_ptr,unsigned int 
  78:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 601              		.loc 3 78 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0258 80B5     		push	{r7, lr}
 606              	.LCFI36:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 025a 84B0     		sub	sp, sp, #16
 611              	.LCFI37:
 612              		.cfi_def_cfa_offset 24
 613 025c 00AF     		add	r7, sp, #0
 614              	.LCFI38:
 615              		.cfi_def_cfa_register 7
 616 025e F860     		str	r0, [r7, #12]
 617 0260 B960     		str	r1, [r7, #8]
 618 0262 7A60     		str	r2, [r7, #4]
  79:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT((NULL != little_heap_ptr) && (NULL != data_store_ptr));
 619              		.loc 3 79 0
 620 0264 FB68     		ldr	r3, [r7, #12]
 621 0266 002B     		cmp	r3, #0
 622 0268 02D0     		beq	.L37
 623              		.loc 3 79 0 is_stmt 0 discriminator 1
 624 026a BB68     		ldr	r3, [r7, #8]
 625 026c 002B     		cmp	r3, #0
 626 026e 03D1     		bne	.L38
 627              	.L37:
 628              		.loc 3 79 0 discriminator 3
 629 0270 4F21     		movs	r1, #79
 630 0272 0C48     		ldr	r0, .L41
 631 0274 FFF7FEFF 		bl	_ASSERT
 632              	.L38:
  80:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(get_Vector_cur_len(&little_heap_ptr->data) <= index)
 633              		.loc 3 80 0 is_stmt 1
 634 0278 FB68     		ldr	r3, [r7, #12]
 635 027a 1846     		mov	r0, r3
 636 027c FFF7F0FE 		bl	get_Vector_cur_len
 637 0280 0246     		mov	r2, r0
 638 0282 7B68     		ldr	r3, [r7, #4]
 639 0284 9342     		cmp	r3, r2
 640 0286 02D3     		bcc	.L39
  81:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  82:../../source/src/kernel/OS_LIB/heap_oo.c **** 		return -ERROR_VALUELESS_INPUT;
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 16


 641              		.loc 3 82 0
 642 0288 6FF0FD03 		mvn	r3, #253
 643 028c 06E0     		b	.L40
 644              	.L39:
  83:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  84:../../source/src/kernel/OS_LIB/heap_oo.c **** 	Vector_get_index_data(&little_heap_ptr->data,index,data_store_ptr);
 645              		.loc 3 84 0
 646 028e FB68     		ldr	r3, [r7, #12]
 647 0290 BA68     		ldr	r2, [r7, #8]
 648 0292 7968     		ldr	r1, [r7, #4]
 649 0294 1846     		mov	r0, r3
 650 0296 FFF7B3FE 		bl	Vector_get_index_data
  85:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 651              		.loc 3 85 0
 652 029a 0023     		movs	r3, #0
 653              	.L40:
  86:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 654              		.loc 3 86 0
 655 029c 1846     		mov	r0, r3
 656 029e 1037     		adds	r7, r7, #16
 657              	.LCFI39:
 658              		.cfi_def_cfa_offset 8
 659 02a0 BD46     		mov	sp, r7
 660              	.LCFI40:
 661              		.cfi_def_cfa_register 13
 662              		@ sp needed
 663 02a2 80BD     		pop	{r7, pc}
 664              	.L42:
 665              		.align	2
 666              	.L41:
 667 02a4 00000000 		.word	.LC0
 668              		.cfi_endproc
 669              	.LFE12:
 670              		.size	heap_get_index_data_safe, .-heap_get_index_data_safe
 671              		.align	1
 672              		.global	heap_set_index_data
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu softvfp
 677              		.type	heap_set_index_data, %function
 678              	heap_set_index_data:
 679              	.LFB13:
  87:../../source/src/kernel/OS_LIB/heap_oo.c **** 
  88:../../source/src/kernel/OS_LIB/heap_oo.c **** /*get the data with index "index" with data *data_store_ptr; then adjust the heap*/
  89:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_set_index_data(struct little_heap *little_heap_ptr,unsigned int index,void *data_store_ptr
  90:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 680              		.loc 3 90 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 24
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 02a8 80B5     		push	{r7, lr}
 685              	.LCFI41:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 02aa 86B0     		sub	sp, sp, #24
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 17


 690              	.LCFI42:
 691              		.cfi_def_cfa_offset 32
 692 02ac 00AF     		add	r7, sp, #0
 693              	.LCFI43:
 694              		.cfi_def_cfa_register 7
 695 02ae F860     		str	r0, [r7, #12]
 696 02b0 B960     		str	r1, [r7, #8]
 697 02b2 7A60     		str	r2, [r7, #4]
  91:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT((NULL != little_heap_ptr) && (NULL != data_store_ptr));
 698              		.loc 3 91 0
 699 02b4 FB68     		ldr	r3, [r7, #12]
 700 02b6 002B     		cmp	r3, #0
 701 02b8 02D0     		beq	.L44
 702              		.loc 3 91 0 is_stmt 0 discriminator 1
 703 02ba 7B68     		ldr	r3, [r7, #4]
 704 02bc 002B     		cmp	r3, #0
 705 02be 03D1     		bne	.L45
 706              	.L44:
 707              		.loc 3 91 0 discriminator 3
 708 02c0 5B21     		movs	r1, #91
 709 02c2 1448     		ldr	r0, .L49
 710 02c4 FFF7FEFF 		bl	_ASSERT
 711              	.L45:
  92:../../source/src/kernel/OS_LIB/heap_oo.c **** 	Vector_set_index_data(&little_heap_ptr->data,index,data_store_ptr);
 712              		.loc 3 92 0 is_stmt 1
 713 02c8 FB68     		ldr	r3, [r7, #12]
 714 02ca 7A68     		ldr	r2, [r7, #4]
 715 02cc B968     		ldr	r1, [r7, #8]
 716 02ce 1846     		mov	r0, r3
 717 02d0 FFF7AEFE 		bl	Vector_set_index_data
  93:../../source/src/kernel/OS_LIB/heap_oo.c **** 	unsigned int size = get_Vector_cur_len(&little_heap_ptr->data) - 1;
 718              		.loc 3 93 0
 719 02d4 FB68     		ldr	r3, [r7, #12]
 720 02d6 1846     		mov	r0, r3
 721 02d8 FFF7C2FE 		bl	get_Vector_cur_len
 722 02dc 0346     		mov	r3, r0
 723 02de 013B     		subs	r3, r3, #1
 724 02e0 3B61     		str	r3, [r7, #16]
  94:../../source/src/kernel/OS_LIB/heap_oo.c **** 	unsigned int i;
  95:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=MIN(index,size/2);i>0;--i)
 725              		.loc 3 95 0
 726 02e2 3B69     		ldr	r3, [r7, #16]
 727 02e4 5B08     		lsrs	r3, r3, #1
 728 02e6 BA68     		ldr	r2, [r7, #8]
 729 02e8 9342     		cmp	r3, r2
 730 02ea 28BF     		it	cs
 731 02ec 1346     		movcs	r3, r2
 732 02ee 7B61     		str	r3, [r7, #20]
 733 02f0 08E0     		b	.L46
 734              	.L47:
  96:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
  97:../../source/src/kernel/OS_LIB/heap_oo.c **** 		heap_adjust(little_heap_ptr,i,size);
 735              		.loc 3 97 0 discriminator 3
 736 02f2 7B69     		ldr	r3, [r7, #20]
 737 02f4 3A69     		ldr	r2, [r7, #16]
 738 02f6 1946     		mov	r1, r3
 739 02f8 F868     		ldr	r0, [r7, #12]
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 18


 740 02fa FFF7FFFE 		bl	heap_adjust
  95:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 741              		.loc 3 95 0 discriminator 3
 742 02fe 7B69     		ldr	r3, [r7, #20]
 743 0300 013B     		subs	r3, r3, #1
 744 0302 7B61     		str	r3, [r7, #20]
 745              	.L46:
  95:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 746              		.loc 3 95 0 is_stmt 0 discriminator 1
 747 0304 7B69     		ldr	r3, [r7, #20]
 748 0306 002B     		cmp	r3, #0
 749 0308 F3D1     		bne	.L47
  98:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
  99:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 750              		.loc 3 99 0 is_stmt 1
 751 030a 0023     		movs	r3, #0
 100:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 752              		.loc 3 100 0
 753 030c 1846     		mov	r0, r3
 754 030e 1837     		adds	r7, r7, #24
 755              	.LCFI44:
 756              		.cfi_def_cfa_offset 8
 757 0310 BD46     		mov	sp, r7
 758              	.LCFI45:
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0312 80BD     		pop	{r7, pc}
 762              	.L50:
 763              		.align	2
 764              	.L49:
 765 0314 00000000 		.word	.LC0
 766              		.cfi_endproc
 767              	.LFE13:
 768              		.size	heap_set_index_data, .-heap_set_index_data
 769              		.align	1
 770              		.global	heap_remove_index_data
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu softvfp
 775              		.type	heap_remove_index_data, %function
 776              	heap_remove_index_data:
 777              	.LFB14:
 101:../../source/src/kernel/OS_LIB/heap_oo.c **** 
 102:../../source/src/kernel/OS_LIB/heap_oo.c **** /*remove the data with index "index" and store it into *data_store_ptr; then adjust the heap*/
 103:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_remove_index_data(struct little_heap *little_heap_ptr,unsigned int index,void *data_store_
 104:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 778              		.loc 3 104 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 32
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0318 80B5     		push	{r7, lr}
 783              	.LCFI46:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 031a 88B0     		sub	sp, sp, #32
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 19


 788              	.LCFI47:
 789              		.cfi_def_cfa_offset 40
 790 031c 00AF     		add	r7, sp, #0
 791              	.LCFI48:
 792              		.cfi_def_cfa_register 7
 793 031e F860     		str	r0, [r7, #12]
 794 0320 B960     		str	r1, [r7, #8]
 795 0322 7A60     		str	r2, [r7, #4]
 105:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT(NULL != little_heap_ptr);
 796              		.loc 3 105 0
 797 0324 FB68     		ldr	r3, [r7, #12]
 798 0326 002B     		cmp	r3, #0
 799 0328 03D1     		bne	.L52
 800              		.loc 3 105 0 is_stmt 0 discriminator 1
 801 032a 6921     		movs	r1, #105
 802 032c 1948     		ldr	r0, .L58
 803 032e FFF7FEFF 		bl	_ASSERT
 804              	.L52:
 106:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT(0 != index);
 805              		.loc 3 106 0 is_stmt 1
 806 0332 BB68     		ldr	r3, [r7, #8]
 807 0334 002B     		cmp	r3, #0
 808 0336 03D1     		bne	.L53
 809              		.loc 3 106 0 is_stmt 0 discriminator 1
 810 0338 6A21     		movs	r1, #106
 811 033a 1648     		ldr	r0, .L58
 812 033c FFF7FEFF 		bl	_ASSERT
 813              	.L53:
 107:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int ret,i;
 108:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ret = Vector_remove_index_data(&little_heap_ptr->data,index,data_store_ptr);
 814              		.loc 3 108 0 is_stmt 1
 815 0340 FB68     		ldr	r3, [r7, #12]
 816 0342 7A68     		ldr	r2, [r7, #4]
 817 0344 B968     		ldr	r1, [r7, #8]
 818 0346 1846     		mov	r0, r3
 819 0348 FFF7FEFF 		bl	Vector_remove_index_data
 820 034c B861     		str	r0, [r7, #24]
 109:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(ret < 0)
 821              		.loc 3 109 0
 822 034e BB69     		ldr	r3, [r7, #24]
 823 0350 002B     		cmp	r3, #0
 824 0352 01DA     		bge	.L54
 110:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 111:../../source/src/kernel/OS_LIB/heap_oo.c **** 		return ret;
 825              		.loc 3 111 0
 826 0354 BB69     		ldr	r3, [r7, #24]
 827 0356 18E0     		b	.L55
 828              	.L54:
 112:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
 113:../../source/src/kernel/OS_LIB/heap_oo.c **** 	/*rebuild heap*/
 114:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int size = get_Vector_cur_len(&little_heap_ptr->data) - 1;
 829              		.loc 3 114 0
 830 0358 FB68     		ldr	r3, [r7, #12]
 831 035a 1846     		mov	r0, r3
 832 035c FFF780FE 		bl	get_Vector_cur_len
 833 0360 0346     		mov	r3, r0
 834 0362 013B     		subs	r3, r3, #1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 20


 835 0364 7B61     		str	r3, [r7, #20]
 115:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 836              		.loc 3 115 0
 837 0366 7B69     		ldr	r3, [r7, #20]
 838 0368 DA0F     		lsrs	r2, r3, #31
 839 036a 1344     		add	r3, r3, r2
 840 036c 5B10     		asrs	r3, r3, #1
 841 036e FB61     		str	r3, [r7, #28]
 842 0370 07E0     		b	.L56
 843              	.L57:
 116:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 117:../../source/src/kernel/OS_LIB/heap_oo.c **** 		heap_adjust(little_heap_ptr,i,size);
 844              		.loc 3 117 0 discriminator 3
 845 0372 7A69     		ldr	r2, [r7, #20]
 846 0374 F969     		ldr	r1, [r7, #28]
 847 0376 F868     		ldr	r0, [r7, #12]
 848 0378 FFF7C0FE 		bl	heap_adjust
 115:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 849              		.loc 3 115 0 discriminator 3
 850 037c FB69     		ldr	r3, [r7, #28]
 851 037e 013B     		subs	r3, r3, #1
 852 0380 FB61     		str	r3, [r7, #28]
 853              	.L56:
 115:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 854              		.loc 3 115 0 is_stmt 0 discriminator 1
 855 0382 FB69     		ldr	r3, [r7, #28]
 856 0384 002B     		cmp	r3, #0
 857 0386 F4DC     		bgt	.L57
 118:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
 119:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 858              		.loc 3 119 0 is_stmt 1
 859 0388 0023     		movs	r3, #0
 860              	.L55:
 120:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 861              		.loc 3 120 0
 862 038a 1846     		mov	r0, r3
 863 038c 2037     		adds	r7, r7, #32
 864              	.LCFI49:
 865              		.cfi_def_cfa_offset 8
 866 038e BD46     		mov	sp, r7
 867              	.LCFI50:
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 0390 80BD     		pop	{r7, pc}
 871              	.L59:
 872 0392 00BF     		.align	2
 873              	.L58:
 874 0394 00000000 		.word	.LC0
 875              		.cfi_endproc
 876              	.LFE14:
 877              		.size	heap_remove_index_data, .-heap_remove_index_data
 878              		.align	1
 879              		.global	heap_erase_data
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu softvfp
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 21


 884              		.type	heap_erase_data, %function
 885              	heap_erase_data:
 886              	.LFB15:
 121:../../source/src/kernel/OS_LIB/heap_oo.c **** 
 122:../../source/src/kernel/OS_LIB/heap_oo.c **** /*erase the data between index "from" to "to"; then adjust the heap*/
 123:../../source/src/kernel/OS_LIB/heap_oo.c **** int heap_erase_data(struct little_heap *little_heap_ptr,unsigned int from,unsigned int to)
 124:../../source/src/kernel/OS_LIB/heap_oo.c **** {
 887              		.loc 3 124 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 32
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0398 80B5     		push	{r7, lr}
 892              	.LCFI51:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 039a 88B0     		sub	sp, sp, #32
 897              	.LCFI52:
 898              		.cfi_def_cfa_offset 40
 899 039c 00AF     		add	r7, sp, #0
 900              	.LCFI53:
 901              		.cfi_def_cfa_register 7
 902 039e F860     		str	r0, [r7, #12]
 903 03a0 B960     		str	r1, [r7, #8]
 904 03a2 7A60     		str	r2, [r7, #4]
 125:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ASSERT(NULL != little_heap_ptr);
 905              		.loc 3 125 0
 906 03a4 FB68     		ldr	r3, [r7, #12]
 907 03a6 002B     		cmp	r3, #0
 908 03a8 03D1     		bne	.L61
 909              		.loc 3 125 0 is_stmt 0 discriminator 1
 910 03aa 7D21     		movs	r1, #125
 911 03ac 1548     		ldr	r0, .L66
 912 03ae FFF7FEFF 		bl	_ASSERT
 913              	.L61:
 126:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int ret,i;
 127:../../source/src/kernel/OS_LIB/heap_oo.c **** 	ret = Vector_erase_data(&little_heap_ptr->data,from,to);
 914              		.loc 3 127 0 is_stmt 1
 915 03b2 FB68     		ldr	r3, [r7, #12]
 916 03b4 7A68     		ldr	r2, [r7, #4]
 917 03b6 B968     		ldr	r1, [r7, #8]
 918 03b8 1846     		mov	r0, r3
 919 03ba FFF7FEFF 		bl	Vector_erase_data
 920 03be B861     		str	r0, [r7, #24]
 128:../../source/src/kernel/OS_LIB/heap_oo.c **** 	if(ret < 0)
 921              		.loc 3 128 0
 922 03c0 BB69     		ldr	r3, [r7, #24]
 923 03c2 002B     		cmp	r3, #0
 924 03c4 01DA     		bge	.L62
 129:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 130:../../source/src/kernel/OS_LIB/heap_oo.c **** 		return ret;
 925              		.loc 3 130 0
 926 03c6 BB69     		ldr	r3, [r7, #24]
 927 03c8 18E0     		b	.L63
 928              	.L62:
 131:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
 132:../../source/src/kernel/OS_LIB/heap_oo.c **** 	/*rebuild heap*/
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 22


 133:../../source/src/kernel/OS_LIB/heap_oo.c **** 	int size = get_Vector_cur_len(&little_heap_ptr->data) - 1;
 929              		.loc 3 133 0
 930 03ca FB68     		ldr	r3, [r7, #12]
 931 03cc 1846     		mov	r0, r3
 932 03ce FFF747FE 		bl	get_Vector_cur_len
 933 03d2 0346     		mov	r3, r0
 934 03d4 013B     		subs	r3, r3, #1
 935 03d6 7B61     		str	r3, [r7, #20]
 134:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 936              		.loc 3 134 0
 937 03d8 7B69     		ldr	r3, [r7, #20]
 938 03da DA0F     		lsrs	r2, r3, #31
 939 03dc 1344     		add	r3, r3, r2
 940 03de 5B10     		asrs	r3, r3, #1
 941 03e0 FB61     		str	r3, [r7, #28]
 942 03e2 07E0     		b	.L64
 943              	.L65:
 135:../../source/src/kernel/OS_LIB/heap_oo.c **** 	{
 136:../../source/src/kernel/OS_LIB/heap_oo.c **** 		heap_adjust(little_heap_ptr,i,size);
 944              		.loc 3 136 0 discriminator 3
 945 03e4 7A69     		ldr	r2, [r7, #20]
 946 03e6 F969     		ldr	r1, [r7, #28]
 947 03e8 F868     		ldr	r0, [r7, #12]
 948 03ea FFF787FE 		bl	heap_adjust
 134:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 949              		.loc 3 134 0 discriminator 3
 950 03ee FB69     		ldr	r3, [r7, #28]
 951 03f0 013B     		subs	r3, r3, #1
 952 03f2 FB61     		str	r3, [r7, #28]
 953              	.L64:
 134:../../source/src/kernel/OS_LIB/heap_oo.c **** 	for(i=size/2;i>0;--i)
 954              		.loc 3 134 0 is_stmt 0 discriminator 1
 955 03f4 FB69     		ldr	r3, [r7, #28]
 956 03f6 002B     		cmp	r3, #0
 957 03f8 F4DC     		bgt	.L65
 137:../../source/src/kernel/OS_LIB/heap_oo.c **** 	}
 138:../../source/src/kernel/OS_LIB/heap_oo.c **** 	return FUN_EXECUTE_SUCCESSFULLY;
 958              		.loc 3 138 0 is_stmt 1
 959 03fa 0023     		movs	r3, #0
 960              	.L63:
 139:../../source/src/kernel/OS_LIB/heap_oo.c **** }
 961              		.loc 3 139 0
 962 03fc 1846     		mov	r0, r3
 963 03fe 2037     		adds	r7, r7, #32
 964              	.LCFI54:
 965              		.cfi_def_cfa_offset 8
 966 0400 BD46     		mov	sp, r7
 967              	.LCFI55:
 968              		.cfi_def_cfa_register 13
 969              		@ sp needed
 970 0402 80BD     		pop	{r7, pc}
 971              	.L67:
 972              		.align	2
 973              	.L66:
 974 0404 00000000 		.word	.LC0
 975              		.cfi_endproc
 976              	.LFE15:
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 23


 977              		.size	heap_erase_data, .-heap_erase_data
 978              	.Letext0:
 979              		.section	.debug_info,"",%progbits
 980              	.Ldebug_info0:
 981 0000 D6040000 		.4byte	0x4d6
 982 0004 0200     		.2byte	0x2
 983 0006 00000000 		.4byte	.Ldebug_abbrev0
 984 000a 04       		.byte	0x4
 985 000b 01       		.uleb128 0x1
 986 000c C8010000 		.4byte	.LASF35
 987 0010 0C       		.byte	0xc
 988 0011 88010000 		.4byte	.LASF36
 989 0015 AC020000 		.4byte	.LASF37
 990 0019 00000000 		.4byte	.Ltext0
 991 001d 08040000 		.4byte	.Letext0
 992 0021 00000000 		.4byte	.Ldebug_line0
 993 0025 02       		.uleb128 0x2
 994 0026 51010000 		.4byte	.LASF5
 995 002a 14       		.byte	0x14
 996 002b 01       		.byte	0x1
 997 002c 0A       		.byte	0xa
 998 002d 78000000 		.4byte	0x78
 999 0031 03       		.uleb128 0x3
 1000 0032 D8000000 		.4byte	.LASF0
 1001 0036 01       		.byte	0x1
 1002 0037 0C       		.byte	0xc
 1003 0038 78000000 		.4byte	0x78
 1004 003c 02       		.byte	0x2
 1005 003d 23       		.byte	0x23
 1006 003e 00       		.uleb128 0
 1007 003f 03       		.uleb128 0x3
 1008 0040 D0000000 		.4byte	.LASF1
 1009 0044 01       		.byte	0x1
 1010 0045 0D       		.byte	0xd
 1011 0046 7A000000 		.4byte	0x7a
 1012 004a 02       		.byte	0x2
 1013 004b 23       		.byte	0x23
 1014 004c 04       		.uleb128 0x4
 1015 004d 03       		.uleb128 0x3
 1016 004e C8000000 		.4byte	.LASF2
 1017 0052 01       		.byte	0x1
 1018 0053 0E       		.byte	0xe
 1019 0054 7A000000 		.4byte	0x7a
 1020 0058 02       		.byte	0x2
 1021 0059 23       		.byte	0x23
 1022 005a 08       		.uleb128 0x8
 1023 005b 03       		.uleb128 0x3
 1024 005c 2D000000 		.4byte	.LASF3
 1025 0060 01       		.byte	0x1
 1026 0061 0F       		.byte	0xf
 1027 0062 7A000000 		.4byte	0x7a
 1028 0066 02       		.byte	0x2
 1029 0067 23       		.byte	0x23
 1030 0068 0C       		.uleb128 0xc
 1031 0069 03       		.uleb128 0x3
 1032 006a 6D010000 		.4byte	.LASF4
 1033 006e 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 24


 1034 006f 15       		.byte	0x15
 1035 0070 7A000000 		.4byte	0x7a
 1036 0074 02       		.byte	0x2
 1037 0075 23       		.byte	0x23
 1038 0076 10       		.uleb128 0x10
 1039 0077 00       		.byte	0
 1040 0078 04       		.uleb128 0x4
 1041 0079 04       		.byte	0x4
 1042 007a 05       		.uleb128 0x5
 1043 007b 04       		.byte	0x4
 1044 007c 07       		.byte	0x7
 1045 007d 37000000 		.4byte	.LASF9
 1046 0081 06       		.uleb128 0x6
 1047 0082 1B010000 		.4byte	.LASF38
 1048 0086 01       		.byte	0x1
 1049 0087 16       		.byte	0x16
 1050 0088 25000000 		.4byte	0x25
 1051 008c 02       		.uleb128 0x2
 1052 008d 54000000 		.4byte	.LASF6
 1053 0091 1C       		.byte	0x1c
 1054 0092 02       		.byte	0x2
 1055 0093 0A       		.byte	0xa
 1056 0094 C3000000 		.4byte	0xc3
 1057 0098 03       		.uleb128 0x3
 1058 0099 60000000 		.4byte	.LASF7
 1059 009d 02       		.byte	0x2
 1060 009e 0D       		.byte	0xd
 1061 009f 81000000 		.4byte	0x81
 1062 00a3 02       		.byte	0x2
 1063 00a4 23       		.byte	0x23
 1064 00a5 00       		.uleb128 0
 1065 00a6 07       		.uleb128 0x7
 1066 00a7 636D7000 		.ascii	"cmp\000"
 1067 00ab 02       		.byte	0x2
 1068 00ac 0F       		.byte	0xf
 1069 00ad EA000000 		.4byte	0xea
 1070 00b1 02       		.byte	0x2
 1071 00b2 23       		.byte	0x23
 1072 00b3 14       		.uleb128 0x14
 1073 00b4 03       		.uleb128 0x3
 1074 00b5 05000000 		.4byte	.LASF8
 1075 00b9 02       		.byte	0x2
 1076 00ba 11       		.byte	0x11
 1077 00bb 01010000 		.4byte	0x101
 1078 00bf 02       		.byte	0x2
 1079 00c0 23       		.byte	0x23
 1080 00c1 18       		.uleb128 0x18
 1081 00c2 00       		.byte	0
 1082 00c3 08       		.uleb128 0x8
 1083 00c4 01       		.byte	0x1
 1084 00c5 DD000000 		.4byte	0xdd
 1085 00c9 DD000000 		.4byte	0xdd
 1086 00cd 09       		.uleb128 0x9
 1087 00ce E4000000 		.4byte	0xe4
 1088 00d2 09       		.uleb128 0x9
 1089 00d3 7A000000 		.4byte	0x7a
 1090 00d7 09       		.uleb128 0x9
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 25


 1091 00d8 7A000000 		.4byte	0x7a
 1092 00dc 00       		.byte	0
 1093 00dd 0A       		.uleb128 0xa
 1094 00de 04       		.byte	0x4
 1095 00df 05       		.byte	0x5
 1096 00e0 696E7400 		.ascii	"int\000"
 1097 00e4 0B       		.uleb128 0xb
 1098 00e5 04       		.byte	0x4
 1099 00e6 81000000 		.4byte	0x81
 1100 00ea 0B       		.uleb128 0xb
 1101 00eb 04       		.byte	0x4
 1102 00ec C3000000 		.4byte	0xc3
 1103 00f0 0C       		.uleb128 0xc
 1104 00f1 01       		.byte	0x1
 1105 00f2 01010000 		.4byte	0x101
 1106 00f6 09       		.uleb128 0x9
 1107 00f7 E4000000 		.4byte	0xe4
 1108 00fb 09       		.uleb128 0x9
 1109 00fc DD000000 		.4byte	0xdd
 1110 0100 00       		.byte	0
 1111 0101 0B       		.uleb128 0xb
 1112 0102 04       		.byte	0x4
 1113 0103 F0000000 		.4byte	0xf0
 1114 0107 05       		.uleb128 0x5
 1115 0108 01       		.byte	0x1
 1116 0109 06       		.byte	0x6
 1117 010a 78020000 		.4byte	.LASF10
 1118 010e 05       		.uleb128 0x5
 1119 010f 02       		.byte	0x2
 1120 0110 05       		.byte	0x5
 1121 0111 7E010000 		.4byte	.LASF11
 1122 0115 05       		.uleb128 0x5
 1123 0116 08       		.byte	0x8
 1124 0117 05       		.byte	0x5
 1125 0118 43010000 		.4byte	.LASF12
 1126 011c 05       		.uleb128 0x5
 1127 011d 01       		.byte	0x1
 1128 011e 08       		.byte	0x8
 1129 011f 88000000 		.4byte	.LASF13
 1130 0123 05       		.uleb128 0x5
 1131 0124 02       		.byte	0x2
 1132 0125 07       		.byte	0x7
 1133 0126 A7000000 		.4byte	.LASF14
 1134 012a 05       		.uleb128 0x5
 1135 012b 08       		.byte	0x8
 1136 012c 07       		.byte	0x7
 1137 012d E1000000 		.4byte	.LASF15
 1138 0131 0D       		.uleb128 0xd
 1139 0132 01       		.byte	0x1
 1140 0133 9C020000 		.4byte	.LASF19
 1141 0137 03       		.byte	0x3
 1142 0138 7B       		.byte	0x7b
 1143 0139 01       		.byte	0x1
 1144 013a DD000000 		.4byte	0xdd
 1145 013e 98030000 		.4byte	.LFB15
 1146 0142 08040000 		.4byte	.LFE15
 1147 0146 00000000 		.4byte	.LLST10
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 26


 1148 014a 01       		.byte	0x1
 1149 014b A1010000 		.4byte	0x1a1
 1150 014f 0E       		.uleb128 0xe
 1151 0150 44000000 		.4byte	.LASF16
 1152 0154 03       		.byte	0x3
 1153 0155 7B       		.byte	0x7b
 1154 0156 A1010000 		.4byte	0x1a1
 1155 015a 02       		.byte	0x2
 1156 015b 91       		.byte	0x91
 1157 015c 64       		.sleb128 -28
 1158 015d 0E       		.uleb128 0xe
 1159 015e 00000000 		.4byte	.LASF17
 1160 0162 03       		.byte	0x3
 1161 0163 7B       		.byte	0x7b
 1162 0164 7A000000 		.4byte	0x7a
 1163 0168 02       		.byte	0x2
 1164 0169 91       		.byte	0x91
 1165 016a 60       		.sleb128 -32
 1166 016b 0F       		.uleb128 0xf
 1167 016c 746F00   		.ascii	"to\000"
 1168 016f 03       		.byte	0x3
 1169 0170 7B       		.byte	0x7b
 1170 0171 7A000000 		.4byte	0x7a
 1171 0175 02       		.byte	0x2
 1172 0176 91       		.byte	0x91
 1173 0177 5C       		.sleb128 -36
 1174 0178 10       		.uleb128 0x10
 1175 0179 72657400 		.ascii	"ret\000"
 1176 017d 03       		.byte	0x3
 1177 017e 7E       		.byte	0x7e
 1178 017f DD000000 		.4byte	0xdd
 1179 0183 02       		.byte	0x2
 1180 0184 91       		.byte	0x91
 1181 0185 70       		.sleb128 -16
 1182 0186 10       		.uleb128 0x10
 1183 0187 6900     		.ascii	"i\000"
 1184 0189 03       		.byte	0x3
 1185 018a 7E       		.byte	0x7e
 1186 018b DD000000 		.4byte	0xdd
 1187 018f 02       		.byte	0x2
 1188 0190 91       		.byte	0x91
 1189 0191 74       		.sleb128 -12
 1190 0192 11       		.uleb128 0x11
 1191 0193 97020000 		.4byte	.LASF18
 1192 0197 03       		.byte	0x3
 1193 0198 85       		.byte	0x85
 1194 0199 DD000000 		.4byte	0xdd
 1195 019d 02       		.byte	0x2
 1196 019e 91       		.byte	0x91
 1197 019f 6C       		.sleb128 -20
 1198 01a0 00       		.byte	0
 1199 01a1 0B       		.uleb128 0xb
 1200 01a2 04       		.byte	0x4
 1201 01a3 8C000000 		.4byte	0x8c
 1202 01a7 12       		.uleb128 0x12
 1203 01a8 A1010000 		.4byte	0x1a1
 1204 01ac 0D       		.uleb128 0xd
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 27


 1205 01ad 01       		.byte	0x1
 1206 01ae DA020000 		.4byte	.LASF20
 1207 01b2 03       		.byte	0x3
 1208 01b3 67       		.byte	0x67
 1209 01b4 01       		.byte	0x1
 1210 01b5 DD000000 		.4byte	0xdd
 1211 01b9 18030000 		.4byte	.LFB14
 1212 01bd 98030000 		.4byte	.LFE14
 1213 01c1 50000000 		.4byte	.LLST9
 1214 01c5 01       		.byte	0x1
 1215 01c6 1D020000 		.4byte	0x21d
 1216 01ca 0E       		.uleb128 0xe
 1217 01cb 44000000 		.4byte	.LASF16
 1218 01cf 03       		.byte	0x3
 1219 01d0 67       		.byte	0x67
 1220 01d1 A1010000 		.4byte	0x1a1
 1221 01d5 02       		.byte	0x2
 1222 01d6 91       		.byte	0x91
 1223 01d7 64       		.sleb128 -28
 1224 01d8 0E       		.uleb128 0xe
 1225 01d9 58010000 		.4byte	.LASF21
 1226 01dd 03       		.byte	0x3
 1227 01de 67       		.byte	0x67
 1228 01df 7A000000 		.4byte	0x7a
 1229 01e3 02       		.byte	0x2
 1230 01e4 91       		.byte	0x91
 1231 01e5 60       		.sleb128 -32
 1232 01e6 0E       		.uleb128 0xe
 1233 01e7 5E010000 		.4byte	.LASF22
 1234 01eb 03       		.byte	0x3
 1235 01ec 67       		.byte	0x67
 1236 01ed 78000000 		.4byte	0x78
 1237 01f1 02       		.byte	0x2
 1238 01f2 91       		.byte	0x91
 1239 01f3 5C       		.sleb128 -36
 1240 01f4 10       		.uleb128 0x10
 1241 01f5 72657400 		.ascii	"ret\000"
 1242 01f9 03       		.byte	0x3
 1243 01fa 6B       		.byte	0x6b
 1244 01fb DD000000 		.4byte	0xdd
 1245 01ff 02       		.byte	0x2
 1246 0200 91       		.byte	0x91
 1247 0201 70       		.sleb128 -16
 1248 0202 10       		.uleb128 0x10
 1249 0203 6900     		.ascii	"i\000"
 1250 0205 03       		.byte	0x3
 1251 0206 6B       		.byte	0x6b
 1252 0207 DD000000 		.4byte	0xdd
 1253 020b 02       		.byte	0x2
 1254 020c 91       		.byte	0x91
 1255 020d 74       		.sleb128 -12
 1256 020e 11       		.uleb128 0x11
 1257 020f 97020000 		.4byte	.LASF18
 1258 0213 03       		.byte	0x3
 1259 0214 72       		.byte	0x72
 1260 0215 DD000000 		.4byte	0xdd
 1261 0219 02       		.byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 28


 1262 021a 91       		.byte	0x91
 1263 021b 6C       		.sleb128 -20
 1264 021c 00       		.byte	0
 1265 021d 0D       		.uleb128 0xd
 1266 021e 01       		.byte	0x1
 1267 021f 19000000 		.4byte	.LASF23
 1268 0223 03       		.byte	0x3
 1269 0224 59       		.byte	0x59
 1270 0225 01       		.byte	0x1
 1271 0226 DD000000 		.4byte	0xdd
 1272 022a A8020000 		.4byte	.LFB13
 1273 022e 18030000 		.4byte	.LFE13
 1274 0232 A0000000 		.4byte	.LLST8
 1275 0236 01       		.byte	0x1
 1276 0237 80020000 		.4byte	0x280
 1277 023b 0E       		.uleb128 0xe
 1278 023c 44000000 		.4byte	.LASF16
 1279 0240 03       		.byte	0x3
 1280 0241 59       		.byte	0x59
 1281 0242 A1010000 		.4byte	0x1a1
 1282 0246 02       		.byte	0x2
 1283 0247 91       		.byte	0x91
 1284 0248 6C       		.sleb128 -20
 1285 0249 0E       		.uleb128 0xe
 1286 024a 58010000 		.4byte	.LASF21
 1287 024e 03       		.byte	0x3
 1288 024f 59       		.byte	0x59
 1289 0250 7A000000 		.4byte	0x7a
 1290 0254 02       		.byte	0x2
 1291 0255 91       		.byte	0x91
 1292 0256 68       		.sleb128 -24
 1293 0257 0E       		.uleb128 0xe
 1294 0258 5E010000 		.4byte	.LASF22
 1295 025c 03       		.byte	0x3
 1296 025d 59       		.byte	0x59
 1297 025e 78000000 		.4byte	0x78
 1298 0262 02       		.byte	0x2
 1299 0263 91       		.byte	0x91
 1300 0264 64       		.sleb128 -28
 1301 0265 11       		.uleb128 0x11
 1302 0266 97020000 		.4byte	.LASF18
 1303 026a 03       		.byte	0x3
 1304 026b 5D       		.byte	0x5d
 1305 026c 7A000000 		.4byte	0x7a
 1306 0270 02       		.byte	0x2
 1307 0271 91       		.byte	0x91
 1308 0272 70       		.sleb128 -16
 1309 0273 10       		.uleb128 0x10
 1310 0274 6900     		.ascii	"i\000"
 1311 0276 03       		.byte	0x3
 1312 0277 5E       		.byte	0x5e
 1313 0278 7A000000 		.4byte	0x7a
 1314 027c 02       		.byte	0x2
 1315 027d 91       		.byte	0x91
 1316 027e 74       		.sleb128 -12
 1317 027f 00       		.byte	0
 1318 0280 0D       		.uleb128 0xd
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 29


 1319 0281 01       		.byte	0x1
 1320 0282 F8000000 		.4byte	.LASF24
 1321 0286 03       		.byte	0x3
 1322 0287 4D       		.byte	0x4d
 1323 0288 01       		.byte	0x1
 1324 0289 DD000000 		.4byte	0xdd
 1325 028d 58020000 		.4byte	.LFB12
 1326 0291 A8020000 		.4byte	.LFE12
 1327 0295 F0000000 		.4byte	.LLST7
 1328 0299 01       		.byte	0x1
 1329 029a C9020000 		.4byte	0x2c9
 1330 029e 0E       		.uleb128 0xe
 1331 029f 44000000 		.4byte	.LASF16
 1332 02a3 03       		.byte	0x3
 1333 02a4 4D       		.byte	0x4d
 1334 02a5 A1010000 		.4byte	0x1a1
 1335 02a9 02       		.byte	0x2
 1336 02aa 91       		.byte	0x91
 1337 02ab 74       		.sleb128 -12
 1338 02ac 0E       		.uleb128 0xe
 1339 02ad 5E010000 		.4byte	.LASF22
 1340 02b1 03       		.byte	0x3
 1341 02b2 4D       		.byte	0x4d
 1342 02b3 78000000 		.4byte	0x78
 1343 02b7 02       		.byte	0x2
 1344 02b8 91       		.byte	0x91
 1345 02b9 70       		.sleb128 -16
 1346 02ba 0E       		.uleb128 0xe
 1347 02bb 58010000 		.4byte	.LASF21
 1348 02bf 03       		.byte	0x3
 1349 02c0 4D       		.byte	0x4d
 1350 02c1 7A000000 		.4byte	0x7a
 1351 02c5 02       		.byte	0x2
 1352 02c6 91       		.byte	0x91
 1353 02c7 6C       		.sleb128 -20
 1354 02c8 00       		.byte	0
 1355 02c9 0D       		.uleb128 0xd
 1356 02ca 01       		.byte	0x1
 1357 02cb 6E020000 		.4byte	.LASF25
 1358 02cf 03       		.byte	0x3
 1359 02d0 39       		.byte	0x39
 1360 02d1 01       		.byte	0x1
 1361 02d2 DD000000 		.4byte	0xdd
 1362 02d6 B4010000 		.4byte	.LFB11
 1363 02da 58020000 		.4byte	.LFE11
 1364 02de 40010000 		.4byte	.LLST6
 1365 02e2 01       		.byte	0x1
 1366 02e3 2C030000 		.4byte	0x32c
 1367 02e7 0E       		.uleb128 0xe
 1368 02e8 44000000 		.4byte	.LASF16
 1369 02ec 03       		.byte	0x3
 1370 02ed 39       		.byte	0x39
 1371 02ee A1010000 		.4byte	0x1a1
 1372 02f2 02       		.byte	0x2
 1373 02f3 91       		.byte	0x91
 1374 02f4 5C       		.sleb128 -36
 1375 02f5 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 30


 1376 02f6 BA000000 		.4byte	.LASF26
 1377 02fa 03       		.byte	0x3
 1378 02fb 39       		.byte	0x39
 1379 02fc 78000000 		.4byte	0x78
 1380 0300 02       		.byte	0x2
 1381 0301 91       		.byte	0x91
 1382 0302 58       		.sleb128 -40
 1383 0303 10       		.uleb128 0x10
 1384 0304 72657400 		.ascii	"ret\000"
 1385 0308 03       		.byte	0x3
 1386 0309 3C       		.byte	0x3c
 1387 030a DD000000 		.4byte	0xdd
 1388 030e 02       		.byte	0x2
 1389 030f 91       		.byte	0x91
 1390 0310 68       		.sleb128 -24
 1391 0311 10       		.uleb128 0x10
 1392 0312 6900     		.ascii	"i\000"
 1393 0314 03       		.byte	0x3
 1394 0315 3C       		.byte	0x3c
 1395 0316 DD000000 		.4byte	0xdd
 1396 031a 02       		.byte	0x2
 1397 031b 91       		.byte	0x91
 1398 031c 6C       		.sleb128 -20
 1399 031d 11       		.uleb128 0x11
 1400 031e 97020000 		.4byte	.LASF18
 1401 0322 03       		.byte	0x3
 1402 0323 3C       		.byte	0x3c
 1403 0324 DD000000 		.4byte	0xdd
 1404 0328 02       		.byte	0x2
 1405 0329 91       		.byte	0x91
 1406 032a 64       		.sleb128 -28
 1407 032b 00       		.byte	0
 1408 032c 13       		.uleb128 0x13
 1409 032d BC010000 		.4byte	.LASF33
 1410 0331 03       		.byte	0x3
 1411 0332 1F       		.byte	0x1f
 1412 0333 01       		.byte	0x1
 1413 0334 FC000000 		.4byte	.LFB10
 1414 0338 B4010000 		.4byte	.LFE10
 1415 033c 90010000 		.4byte	.LLST5
 1416 0340 01       		.byte	0x1
 1417 0341 8A030000 		.4byte	0x38a
 1418 0345 0E       		.uleb128 0xe
 1419 0346 44000000 		.4byte	.LASF16
 1420 034a 03       		.byte	0x3
 1421 034b 1F       		.byte	0x1f
 1422 034c A1010000 		.4byte	0x1a1
 1423 0350 02       		.byte	0x2
 1424 0351 91       		.byte	0x91
 1425 0352 6C       		.sleb128 -20
 1426 0353 0E       		.uleb128 0xe
 1427 0354 58010000 		.4byte	.LASF21
 1428 0358 03       		.byte	0x3
 1429 0359 1F       		.byte	0x1f
 1430 035a DD000000 		.4byte	0xdd
 1431 035e 02       		.byte	0x2
 1432 035f 91       		.byte	0x91
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 31


 1433 0360 68       		.sleb128 -24
 1434 0361 0E       		.uleb128 0xe
 1435 0362 97020000 		.4byte	.LASF18
 1436 0366 03       		.byte	0x3
 1437 0367 1F       		.byte	0x1f
 1438 0368 DD000000 		.4byte	0xdd
 1439 036c 02       		.byte	0x2
 1440 036d 91       		.byte	0x91
 1441 036e 64       		.sleb128 -28
 1442 036f 10       		.uleb128 0x10
 1443 0370 6A00     		.ascii	"j\000"
 1444 0372 03       		.byte	0x3
 1445 0373 21       		.byte	0x21
 1446 0374 DD000000 		.4byte	0xdd
 1447 0378 02       		.byte	0x2
 1448 0379 91       		.byte	0x91
 1449 037a 74       		.sleb128 -12
 1450 037b 11       		.uleb128 0x11
 1451 037c B1010000 		.4byte	.LASF27
 1452 0380 03       		.byte	0x3
 1453 0381 22       		.byte	0x22
 1454 0382 E4000000 		.4byte	0xe4
 1455 0386 02       		.byte	0x2
 1456 0387 91       		.byte	0x91
 1457 0388 70       		.sleb128 -16
 1458 0389 00       		.byte	0
 1459 038a 0D       		.uleb128 0xd
 1460 038b 01       		.byte	0x1
 1461 038c 11010000 		.4byte	.LASF28
 1462 0390 03       		.byte	0x3
 1463 0391 0A       		.byte	0xa
 1464 0392 01       		.byte	0x1
 1465 0393 DD000000 		.4byte	0xdd
 1466 0397 90000000 		.4byte	.LFB9
 1467 039b FC000000 		.4byte	.LFE9
 1468 039f E0010000 		.4byte	.LLST4
 1469 03a3 01       		.byte	0x1
 1470 03a4 FD030000 		.4byte	0x3fd
 1471 03a8 0E       		.uleb128 0xe
 1472 03a9 44000000 		.4byte	.LASF16
 1473 03ad 03       		.byte	0x3
 1474 03ae 0A       		.byte	0xa
 1475 03af A7010000 		.4byte	0x1a7
 1476 03b3 02       		.byte	0x2
 1477 03b4 91       		.byte	0x91
 1478 03b5 6C       		.sleb128 -20
 1479 03b6 0E       		.uleb128 0xe
 1480 03b7 97020000 		.4byte	.LASF18
 1481 03bb 03       		.byte	0x3
 1482 03bc 0B       		.byte	0xb
 1483 03bd 7A000000 		.4byte	0x7a
 1484 03c1 02       		.byte	0x2
 1485 03c2 91       		.byte	0x91
 1486 03c3 68       		.sleb128 -24
 1487 03c4 0E       		.uleb128 0xe
 1488 03c5 65000000 		.4byte	.LASF29
 1489 03c9 03       		.byte	0x3
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 32


 1490 03ca 0C       		.byte	0xc
 1491 03cb 7A000000 		.4byte	0x7a
 1492 03cf 02       		.byte	0x2
 1493 03d0 91       		.byte	0x91
 1494 03d1 64       		.sleb128 -28
 1495 03d2 0F       		.uleb128 0xf
 1496 03d3 636D7000 		.ascii	"cmp\000"
 1497 03d7 03       		.byte	0x3
 1498 03d8 0D       		.byte	0xd
 1499 03d9 EA000000 		.4byte	0xea
 1500 03dd 02       		.byte	0x2
 1501 03de 91       		.byte	0x91
 1502 03df 60       		.sleb128 -32
 1503 03e0 0E       		.uleb128 0xe
 1504 03e1 05000000 		.4byte	.LASF8
 1505 03e5 03       		.byte	0x3
 1506 03e6 0E       		.byte	0xe
 1507 03e7 01010000 		.4byte	0x101
 1508 03eb 02       		.byte	0x2
 1509 03ec 91       		.byte	0x91
 1510 03ed 00       		.sleb128 0
 1511 03ee 10       		.uleb128 0x10
 1512 03ef 72657400 		.ascii	"ret\000"
 1513 03f3 03       		.byte	0x3
 1514 03f4 10       		.byte	0x10
 1515 03f5 DD000000 		.4byte	0xdd
 1516 03f9 02       		.byte	0x2
 1517 03fa 91       		.byte	0x91
 1518 03fb 74       		.sleb128 -12
 1519 03fc 00       		.byte	0
 1520 03fd 14       		.uleb128 0x14
 1521 03fe 96000000 		.4byte	.LASF30
 1522 0402 02       		.byte	0x2
 1523 0403 25       		.byte	0x25
 1524 0404 01       		.byte	0x1
 1525 0405 7A000000 		.4byte	0x7a
 1526 0409 76000000 		.4byte	.LFB8
 1527 040d 90000000 		.4byte	.LFE8
 1528 0411 30020000 		.4byte	.LLST3
 1529 0415 01       		.byte	0x1
 1530 0416 29040000 		.4byte	0x429
 1531 041a 0E       		.uleb128 0xe
 1532 041b 44000000 		.4byte	.LASF16
 1533 041f 02       		.byte	0x2
 1534 0420 25       		.byte	0x25
 1535 0421 A1010000 		.4byte	0x1a1
 1536 0425 02       		.byte	0x2
 1537 0426 91       		.byte	0x91
 1538 0427 74       		.sleb128 -12
 1539 0428 00       		.byte	0
 1540 0429 15       		.uleb128 0x15
 1541 042a 84020000 		.4byte	.LASF31
 1542 042e 01       		.byte	0x1
 1543 042f 51       		.byte	0x51
 1544 0430 01       		.byte	0x1
 1545 0431 7A000000 		.4byte	0x7a
 1546 0435 60000000 		.4byte	.LFB5
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 33


 1547 0439 76000000 		.4byte	.LFE5
 1548 043d 80020000 		.4byte	.LLST2
 1549 0441 01       		.byte	0x1
 1550 0442 55040000 		.4byte	0x455
 1551 0446 0E       		.uleb128 0xe
 1552 0447 22010000 		.4byte	.LASF32
 1553 044b 01       		.byte	0x1
 1554 044c 51       		.byte	0x51
 1555 044d E4000000 		.4byte	0xe4
 1556 0451 02       		.byte	0x2
 1557 0452 91       		.byte	0x91
 1558 0453 74       		.sleb128 -12
 1559 0454 00       		.byte	0
 1560 0455 13       		.uleb128 0x13
 1561 0456 2D010000 		.4byte	.LASF34
 1562 045a 01       		.byte	0x1
 1563 045b 26       		.byte	0x26
 1564 045c 01       		.byte	0x1
 1565 045d 30000000 		.4byte	.LFB1
 1566 0461 60000000 		.4byte	.LFE1
 1567 0465 DC020000 		.4byte	.LLST1
 1568 0469 01       		.byte	0x1
 1569 046a 99040000 		.4byte	0x499
 1570 046e 0E       		.uleb128 0xe
 1571 046f 22010000 		.4byte	.LASF32
 1572 0473 01       		.byte	0x1
 1573 0474 26       		.byte	0x26
 1574 0475 E4000000 		.4byte	0xe4
 1575 0479 02       		.byte	0x2
 1576 047a 91       		.byte	0x91
 1577 047b 74       		.sleb128 -12
 1578 047c 0E       		.uleb128 0xe
 1579 047d 58010000 		.4byte	.LASF21
 1580 0481 01       		.byte	0x1
 1581 0482 26       		.byte	0x26
 1582 0483 7A000000 		.4byte	0x7a
 1583 0487 02       		.byte	0x2
 1584 0488 91       		.byte	0x91
 1585 0489 70       		.sleb128 -16
 1586 048a 0E       		.uleb128 0xe
 1587 048b 5E010000 		.4byte	.LASF22
 1588 048f 01       		.byte	0x1
 1589 0490 26       		.byte	0x26
 1590 0491 78000000 		.4byte	0x78
 1591 0495 02       		.byte	0x2
 1592 0496 91       		.byte	0x91
 1593 0497 6C       		.sleb128 -20
 1594 0498 00       		.byte	0
 1595 0499 16       		.uleb128 0x16
 1596 049a 72000000 		.4byte	.LASF39
 1597 049e 01       		.byte	0x1
 1598 049f 1E       		.byte	0x1e
 1599 04a0 01       		.byte	0x1
 1600 04a1 00000000 		.4byte	.LFB0
 1601 04a5 30000000 		.4byte	.LFE0
 1602 04a9 2C030000 		.4byte	.LLST0
 1603 04ad 01       		.byte	0x1
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 34


 1604 04ae 0E       		.uleb128 0xe
 1605 04af 22010000 		.4byte	.LASF32
 1606 04b3 01       		.byte	0x1
 1607 04b4 1E       		.byte	0x1e
 1608 04b5 E4000000 		.4byte	0xe4
 1609 04b9 02       		.byte	0x2
 1610 04ba 91       		.byte	0x91
 1611 04bb 74       		.sleb128 -12
 1612 04bc 0E       		.uleb128 0xe
 1613 04bd 58010000 		.4byte	.LASF21
 1614 04c1 01       		.byte	0x1
 1615 04c2 1E       		.byte	0x1e
 1616 04c3 7A000000 		.4byte	0x7a
 1617 04c7 02       		.byte	0x2
 1618 04c8 91       		.byte	0x91
 1619 04c9 70       		.sleb128 -16
 1620 04ca 0E       		.uleb128 0xe
 1621 04cb 5E010000 		.4byte	.LASF22
 1622 04cf 01       		.byte	0x1
 1623 04d0 1E       		.byte	0x1e
 1624 04d1 78000000 		.4byte	0x78
 1625 04d5 02       		.byte	0x2
 1626 04d6 91       		.byte	0x91
 1627 04d7 6C       		.sleb128 -20
 1628 04d8 00       		.byte	0
 1629 04d9 00       		.byte	0
 1630              		.section	.debug_abbrev,"",%progbits
 1631              	.Ldebug_abbrev0:
 1632 0000 01       		.uleb128 0x1
 1633 0001 11       		.uleb128 0x11
 1634 0002 01       		.byte	0x1
 1635 0003 25       		.uleb128 0x25
 1636 0004 0E       		.uleb128 0xe
 1637 0005 13       		.uleb128 0x13
 1638 0006 0B       		.uleb128 0xb
 1639 0007 03       		.uleb128 0x3
 1640 0008 0E       		.uleb128 0xe
 1641 0009 1B       		.uleb128 0x1b
 1642 000a 0E       		.uleb128 0xe
 1643 000b 11       		.uleb128 0x11
 1644 000c 01       		.uleb128 0x1
 1645 000d 12       		.uleb128 0x12
 1646 000e 01       		.uleb128 0x1
 1647 000f 10       		.uleb128 0x10
 1648 0010 06       		.uleb128 0x6
 1649 0011 00       		.byte	0
 1650 0012 00       		.byte	0
 1651 0013 02       		.uleb128 0x2
 1652 0014 13       		.uleb128 0x13
 1653 0015 01       		.byte	0x1
 1654 0016 03       		.uleb128 0x3
 1655 0017 0E       		.uleb128 0xe
 1656 0018 0B       		.uleb128 0xb
 1657 0019 0B       		.uleb128 0xb
 1658 001a 3A       		.uleb128 0x3a
 1659 001b 0B       		.uleb128 0xb
 1660 001c 3B       		.uleb128 0x3b
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 35


 1661 001d 0B       		.uleb128 0xb
 1662 001e 01       		.uleb128 0x1
 1663 001f 13       		.uleb128 0x13
 1664 0020 00       		.byte	0
 1665 0021 00       		.byte	0
 1666 0022 03       		.uleb128 0x3
 1667 0023 0D       		.uleb128 0xd
 1668 0024 00       		.byte	0
 1669 0025 03       		.uleb128 0x3
 1670 0026 0E       		.uleb128 0xe
 1671 0027 3A       		.uleb128 0x3a
 1672 0028 0B       		.uleb128 0xb
 1673 0029 3B       		.uleb128 0x3b
 1674 002a 0B       		.uleb128 0xb
 1675 002b 49       		.uleb128 0x49
 1676 002c 13       		.uleb128 0x13
 1677 002d 38       		.uleb128 0x38
 1678 002e 0A       		.uleb128 0xa
 1679 002f 00       		.byte	0
 1680 0030 00       		.byte	0
 1681 0031 04       		.uleb128 0x4
 1682 0032 0F       		.uleb128 0xf
 1683 0033 00       		.byte	0
 1684 0034 0B       		.uleb128 0xb
 1685 0035 0B       		.uleb128 0xb
 1686 0036 00       		.byte	0
 1687 0037 00       		.byte	0
 1688 0038 05       		.uleb128 0x5
 1689 0039 24       		.uleb128 0x24
 1690 003a 00       		.byte	0
 1691 003b 0B       		.uleb128 0xb
 1692 003c 0B       		.uleb128 0xb
 1693 003d 3E       		.uleb128 0x3e
 1694 003e 0B       		.uleb128 0xb
 1695 003f 03       		.uleb128 0x3
 1696 0040 0E       		.uleb128 0xe
 1697 0041 00       		.byte	0
 1698 0042 00       		.byte	0
 1699 0043 06       		.uleb128 0x6
 1700 0044 16       		.uleb128 0x16
 1701 0045 00       		.byte	0
 1702 0046 03       		.uleb128 0x3
 1703 0047 0E       		.uleb128 0xe
 1704 0048 3A       		.uleb128 0x3a
 1705 0049 0B       		.uleb128 0xb
 1706 004a 3B       		.uleb128 0x3b
 1707 004b 0B       		.uleb128 0xb
 1708 004c 49       		.uleb128 0x49
 1709 004d 13       		.uleb128 0x13
 1710 004e 00       		.byte	0
 1711 004f 00       		.byte	0
 1712 0050 07       		.uleb128 0x7
 1713 0051 0D       		.uleb128 0xd
 1714 0052 00       		.byte	0
 1715 0053 03       		.uleb128 0x3
 1716 0054 08       		.uleb128 0x8
 1717 0055 3A       		.uleb128 0x3a
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 36


 1718 0056 0B       		.uleb128 0xb
 1719 0057 3B       		.uleb128 0x3b
 1720 0058 0B       		.uleb128 0xb
 1721 0059 49       		.uleb128 0x49
 1722 005a 13       		.uleb128 0x13
 1723 005b 38       		.uleb128 0x38
 1724 005c 0A       		.uleb128 0xa
 1725 005d 00       		.byte	0
 1726 005e 00       		.byte	0
 1727 005f 08       		.uleb128 0x8
 1728 0060 15       		.uleb128 0x15
 1729 0061 01       		.byte	0x1
 1730 0062 27       		.uleb128 0x27
 1731 0063 0C       		.uleb128 0xc
 1732 0064 49       		.uleb128 0x49
 1733 0065 13       		.uleb128 0x13
 1734 0066 01       		.uleb128 0x1
 1735 0067 13       		.uleb128 0x13
 1736 0068 00       		.byte	0
 1737 0069 00       		.byte	0
 1738 006a 09       		.uleb128 0x9
 1739 006b 05       		.uleb128 0x5
 1740 006c 00       		.byte	0
 1741 006d 49       		.uleb128 0x49
 1742 006e 13       		.uleb128 0x13
 1743 006f 00       		.byte	0
 1744 0070 00       		.byte	0
 1745 0071 0A       		.uleb128 0xa
 1746 0072 24       		.uleb128 0x24
 1747 0073 00       		.byte	0
 1748 0074 0B       		.uleb128 0xb
 1749 0075 0B       		.uleb128 0xb
 1750 0076 3E       		.uleb128 0x3e
 1751 0077 0B       		.uleb128 0xb
 1752 0078 03       		.uleb128 0x3
 1753 0079 08       		.uleb128 0x8
 1754 007a 00       		.byte	0
 1755 007b 00       		.byte	0
 1756 007c 0B       		.uleb128 0xb
 1757 007d 0F       		.uleb128 0xf
 1758 007e 00       		.byte	0
 1759 007f 0B       		.uleb128 0xb
 1760 0080 0B       		.uleb128 0xb
 1761 0081 49       		.uleb128 0x49
 1762 0082 13       		.uleb128 0x13
 1763 0083 00       		.byte	0
 1764 0084 00       		.byte	0
 1765 0085 0C       		.uleb128 0xc
 1766 0086 15       		.uleb128 0x15
 1767 0087 01       		.byte	0x1
 1768 0088 27       		.uleb128 0x27
 1769 0089 0C       		.uleb128 0xc
 1770 008a 01       		.uleb128 0x1
 1771 008b 13       		.uleb128 0x13
 1772 008c 00       		.byte	0
 1773 008d 00       		.byte	0
 1774 008e 0D       		.uleb128 0xd
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 37


 1775 008f 2E       		.uleb128 0x2e
 1776 0090 01       		.byte	0x1
 1777 0091 3F       		.uleb128 0x3f
 1778 0092 0C       		.uleb128 0xc
 1779 0093 03       		.uleb128 0x3
 1780 0094 0E       		.uleb128 0xe
 1781 0095 3A       		.uleb128 0x3a
 1782 0096 0B       		.uleb128 0xb
 1783 0097 3B       		.uleb128 0x3b
 1784 0098 0B       		.uleb128 0xb
 1785 0099 27       		.uleb128 0x27
 1786 009a 0C       		.uleb128 0xc
 1787 009b 49       		.uleb128 0x49
 1788 009c 13       		.uleb128 0x13
 1789 009d 11       		.uleb128 0x11
 1790 009e 01       		.uleb128 0x1
 1791 009f 12       		.uleb128 0x12
 1792 00a0 01       		.uleb128 0x1
 1793 00a1 40       		.uleb128 0x40
 1794 00a2 06       		.uleb128 0x6
 1795 00a3 9642     		.uleb128 0x2116
 1796 00a5 0C       		.uleb128 0xc
 1797 00a6 01       		.uleb128 0x1
 1798 00a7 13       		.uleb128 0x13
 1799 00a8 00       		.byte	0
 1800 00a9 00       		.byte	0
 1801 00aa 0E       		.uleb128 0xe
 1802 00ab 05       		.uleb128 0x5
 1803 00ac 00       		.byte	0
 1804 00ad 03       		.uleb128 0x3
 1805 00ae 0E       		.uleb128 0xe
 1806 00af 3A       		.uleb128 0x3a
 1807 00b0 0B       		.uleb128 0xb
 1808 00b1 3B       		.uleb128 0x3b
 1809 00b2 0B       		.uleb128 0xb
 1810 00b3 49       		.uleb128 0x49
 1811 00b4 13       		.uleb128 0x13
 1812 00b5 02       		.uleb128 0x2
 1813 00b6 0A       		.uleb128 0xa
 1814 00b7 00       		.byte	0
 1815 00b8 00       		.byte	0
 1816 00b9 0F       		.uleb128 0xf
 1817 00ba 05       		.uleb128 0x5
 1818 00bb 00       		.byte	0
 1819 00bc 03       		.uleb128 0x3
 1820 00bd 08       		.uleb128 0x8
 1821 00be 3A       		.uleb128 0x3a
 1822 00bf 0B       		.uleb128 0xb
 1823 00c0 3B       		.uleb128 0x3b
 1824 00c1 0B       		.uleb128 0xb
 1825 00c2 49       		.uleb128 0x49
 1826 00c3 13       		.uleb128 0x13
 1827 00c4 02       		.uleb128 0x2
 1828 00c5 0A       		.uleb128 0xa
 1829 00c6 00       		.byte	0
 1830 00c7 00       		.byte	0
 1831 00c8 10       		.uleb128 0x10
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 38


 1832 00c9 34       		.uleb128 0x34
 1833 00ca 00       		.byte	0
 1834 00cb 03       		.uleb128 0x3
 1835 00cc 08       		.uleb128 0x8
 1836 00cd 3A       		.uleb128 0x3a
 1837 00ce 0B       		.uleb128 0xb
 1838 00cf 3B       		.uleb128 0x3b
 1839 00d0 0B       		.uleb128 0xb
 1840 00d1 49       		.uleb128 0x49
 1841 00d2 13       		.uleb128 0x13
 1842 00d3 02       		.uleb128 0x2
 1843 00d4 0A       		.uleb128 0xa
 1844 00d5 00       		.byte	0
 1845 00d6 00       		.byte	0
 1846 00d7 11       		.uleb128 0x11
 1847 00d8 34       		.uleb128 0x34
 1848 00d9 00       		.byte	0
 1849 00da 03       		.uleb128 0x3
 1850 00db 0E       		.uleb128 0xe
 1851 00dc 3A       		.uleb128 0x3a
 1852 00dd 0B       		.uleb128 0xb
 1853 00de 3B       		.uleb128 0x3b
 1854 00df 0B       		.uleb128 0xb
 1855 00e0 49       		.uleb128 0x49
 1856 00e1 13       		.uleb128 0x13
 1857 00e2 02       		.uleb128 0x2
 1858 00e3 0A       		.uleb128 0xa
 1859 00e4 00       		.byte	0
 1860 00e5 00       		.byte	0
 1861 00e6 12       		.uleb128 0x12
 1862 00e7 26       		.uleb128 0x26
 1863 00e8 00       		.byte	0
 1864 00e9 49       		.uleb128 0x49
 1865 00ea 13       		.uleb128 0x13
 1866 00eb 00       		.byte	0
 1867 00ec 00       		.byte	0
 1868 00ed 13       		.uleb128 0x13
 1869 00ee 2E       		.uleb128 0x2e
 1870 00ef 01       		.byte	0x1
 1871 00f0 03       		.uleb128 0x3
 1872 00f1 0E       		.uleb128 0xe
 1873 00f2 3A       		.uleb128 0x3a
 1874 00f3 0B       		.uleb128 0xb
 1875 00f4 3B       		.uleb128 0x3b
 1876 00f5 0B       		.uleb128 0xb
 1877 00f6 27       		.uleb128 0x27
 1878 00f7 0C       		.uleb128 0xc
 1879 00f8 11       		.uleb128 0x11
 1880 00f9 01       		.uleb128 0x1
 1881 00fa 12       		.uleb128 0x12
 1882 00fb 01       		.uleb128 0x1
 1883 00fc 40       		.uleb128 0x40
 1884 00fd 06       		.uleb128 0x6
 1885 00fe 9642     		.uleb128 0x2116
 1886 0100 0C       		.uleb128 0xc
 1887 0101 01       		.uleb128 0x1
 1888 0102 13       		.uleb128 0x13
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 39


 1889 0103 00       		.byte	0
 1890 0104 00       		.byte	0
 1891 0105 14       		.uleb128 0x14
 1892 0106 2E       		.uleb128 0x2e
 1893 0107 01       		.byte	0x1
 1894 0108 03       		.uleb128 0x3
 1895 0109 0E       		.uleb128 0xe
 1896 010a 3A       		.uleb128 0x3a
 1897 010b 0B       		.uleb128 0xb
 1898 010c 3B       		.uleb128 0x3b
 1899 010d 0B       		.uleb128 0xb
 1900 010e 27       		.uleb128 0x27
 1901 010f 0C       		.uleb128 0xc
 1902 0110 49       		.uleb128 0x49
 1903 0111 13       		.uleb128 0x13
 1904 0112 11       		.uleb128 0x11
 1905 0113 01       		.uleb128 0x1
 1906 0114 12       		.uleb128 0x12
 1907 0115 01       		.uleb128 0x1
 1908 0116 40       		.uleb128 0x40
 1909 0117 06       		.uleb128 0x6
 1910 0118 9642     		.uleb128 0x2116
 1911 011a 0C       		.uleb128 0xc
 1912 011b 01       		.uleb128 0x1
 1913 011c 13       		.uleb128 0x13
 1914 011d 00       		.byte	0
 1915 011e 00       		.byte	0
 1916 011f 15       		.uleb128 0x15
 1917 0120 2E       		.uleb128 0x2e
 1918 0121 01       		.byte	0x1
 1919 0122 03       		.uleb128 0x3
 1920 0123 0E       		.uleb128 0xe
 1921 0124 3A       		.uleb128 0x3a
 1922 0125 0B       		.uleb128 0xb
 1923 0126 3B       		.uleb128 0x3b
 1924 0127 0B       		.uleb128 0xb
 1925 0128 27       		.uleb128 0x27
 1926 0129 0C       		.uleb128 0xc
 1927 012a 49       		.uleb128 0x49
 1928 012b 13       		.uleb128 0x13
 1929 012c 11       		.uleb128 0x11
 1930 012d 01       		.uleb128 0x1
 1931 012e 12       		.uleb128 0x12
 1932 012f 01       		.uleb128 0x1
 1933 0130 40       		.uleb128 0x40
 1934 0131 06       		.uleb128 0x6
 1935 0132 9742     		.uleb128 0x2117
 1936 0134 0C       		.uleb128 0xc
 1937 0135 01       		.uleb128 0x1
 1938 0136 13       		.uleb128 0x13
 1939 0137 00       		.byte	0
 1940 0138 00       		.byte	0
 1941 0139 16       		.uleb128 0x16
 1942 013a 2E       		.uleb128 0x2e
 1943 013b 01       		.byte	0x1
 1944 013c 03       		.uleb128 0x3
 1945 013d 0E       		.uleb128 0xe
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 40


 1946 013e 3A       		.uleb128 0x3a
 1947 013f 0B       		.uleb128 0xb
 1948 0140 3B       		.uleb128 0x3b
 1949 0141 0B       		.uleb128 0xb
 1950 0142 27       		.uleb128 0x27
 1951 0143 0C       		.uleb128 0xc
 1952 0144 11       		.uleb128 0x11
 1953 0145 01       		.uleb128 0x1
 1954 0146 12       		.uleb128 0x12
 1955 0147 01       		.uleb128 0x1
 1956 0148 40       		.uleb128 0x40
 1957 0149 06       		.uleb128 0x6
 1958 014a 9642     		.uleb128 0x2116
 1959 014c 0C       		.uleb128 0xc
 1960 014d 00       		.byte	0
 1961 014e 00       		.byte	0
 1962 014f 00       		.byte	0
 1963              		.section	.debug_loc,"",%progbits
 1964              	.Ldebug_loc0:
 1965              	.LLST10:
 1966 0000 98030000 		.4byte	.LFB15-.Ltext0
 1967 0004 9A030000 		.4byte	.LCFI51-.Ltext0
 1968 0008 0200     		.2byte	0x2
 1969 000a 7D       		.byte	0x7d
 1970 000b 00       		.sleb128 0
 1971 000c 9A030000 		.4byte	.LCFI51-.Ltext0
 1972 0010 9C030000 		.4byte	.LCFI52-.Ltext0
 1973 0014 0200     		.2byte	0x2
 1974 0016 7D       		.byte	0x7d
 1975 0017 08       		.sleb128 8
 1976 0018 9C030000 		.4byte	.LCFI52-.Ltext0
 1977 001c 9E030000 		.4byte	.LCFI53-.Ltext0
 1978 0020 0200     		.2byte	0x2
 1979 0022 7D       		.byte	0x7d
 1980 0023 28       		.sleb128 40
 1981 0024 9E030000 		.4byte	.LCFI53-.Ltext0
 1982 0028 00040000 		.4byte	.LCFI54-.Ltext0
 1983 002c 0200     		.2byte	0x2
 1984 002e 77       		.byte	0x77
 1985 002f 28       		.sleb128 40
 1986 0030 00040000 		.4byte	.LCFI54-.Ltext0
 1987 0034 02040000 		.4byte	.LCFI55-.Ltext0
 1988 0038 0200     		.2byte	0x2
 1989 003a 77       		.byte	0x77
 1990 003b 08       		.sleb128 8
 1991 003c 02040000 		.4byte	.LCFI55-.Ltext0
 1992 0040 08040000 		.4byte	.LFE15-.Ltext0
 1993 0044 0200     		.2byte	0x2
 1994 0046 7D       		.byte	0x7d
 1995 0047 08       		.sleb128 8
 1996 0048 00000000 		.4byte	0
 1997 004c 00000000 		.4byte	0
 1998              	.LLST9:
 1999 0050 18030000 		.4byte	.LFB14-.Ltext0
 2000 0054 1A030000 		.4byte	.LCFI46-.Ltext0
 2001 0058 0200     		.2byte	0x2
 2002 005a 7D       		.byte	0x7d
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 41


 2003 005b 00       		.sleb128 0
 2004 005c 1A030000 		.4byte	.LCFI46-.Ltext0
 2005 0060 1C030000 		.4byte	.LCFI47-.Ltext0
 2006 0064 0200     		.2byte	0x2
 2007 0066 7D       		.byte	0x7d
 2008 0067 08       		.sleb128 8
 2009 0068 1C030000 		.4byte	.LCFI47-.Ltext0
 2010 006c 1E030000 		.4byte	.LCFI48-.Ltext0
 2011 0070 0200     		.2byte	0x2
 2012 0072 7D       		.byte	0x7d
 2013 0073 28       		.sleb128 40
 2014 0074 1E030000 		.4byte	.LCFI48-.Ltext0
 2015 0078 8E030000 		.4byte	.LCFI49-.Ltext0
 2016 007c 0200     		.2byte	0x2
 2017 007e 77       		.byte	0x77
 2018 007f 28       		.sleb128 40
 2019 0080 8E030000 		.4byte	.LCFI49-.Ltext0
 2020 0084 90030000 		.4byte	.LCFI50-.Ltext0
 2021 0088 0200     		.2byte	0x2
 2022 008a 77       		.byte	0x77
 2023 008b 08       		.sleb128 8
 2024 008c 90030000 		.4byte	.LCFI50-.Ltext0
 2025 0090 98030000 		.4byte	.LFE14-.Ltext0
 2026 0094 0200     		.2byte	0x2
 2027 0096 7D       		.byte	0x7d
 2028 0097 08       		.sleb128 8
 2029 0098 00000000 		.4byte	0
 2030 009c 00000000 		.4byte	0
 2031              	.LLST8:
 2032 00a0 A8020000 		.4byte	.LFB13-.Ltext0
 2033 00a4 AA020000 		.4byte	.LCFI41-.Ltext0
 2034 00a8 0200     		.2byte	0x2
 2035 00aa 7D       		.byte	0x7d
 2036 00ab 00       		.sleb128 0
 2037 00ac AA020000 		.4byte	.LCFI41-.Ltext0
 2038 00b0 AC020000 		.4byte	.LCFI42-.Ltext0
 2039 00b4 0200     		.2byte	0x2
 2040 00b6 7D       		.byte	0x7d
 2041 00b7 08       		.sleb128 8
 2042 00b8 AC020000 		.4byte	.LCFI42-.Ltext0
 2043 00bc AE020000 		.4byte	.LCFI43-.Ltext0
 2044 00c0 0200     		.2byte	0x2
 2045 00c2 7D       		.byte	0x7d
 2046 00c3 20       		.sleb128 32
 2047 00c4 AE020000 		.4byte	.LCFI43-.Ltext0
 2048 00c8 10030000 		.4byte	.LCFI44-.Ltext0
 2049 00cc 0200     		.2byte	0x2
 2050 00ce 77       		.byte	0x77
 2051 00cf 20       		.sleb128 32
 2052 00d0 10030000 		.4byte	.LCFI44-.Ltext0
 2053 00d4 12030000 		.4byte	.LCFI45-.Ltext0
 2054 00d8 0200     		.2byte	0x2
 2055 00da 77       		.byte	0x77
 2056 00db 08       		.sleb128 8
 2057 00dc 12030000 		.4byte	.LCFI45-.Ltext0
 2058 00e0 18030000 		.4byte	.LFE13-.Ltext0
 2059 00e4 0200     		.2byte	0x2
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 42


 2060 00e6 7D       		.byte	0x7d
 2061 00e7 08       		.sleb128 8
 2062 00e8 00000000 		.4byte	0
 2063 00ec 00000000 		.4byte	0
 2064              	.LLST7:
 2065 00f0 58020000 		.4byte	.LFB12-.Ltext0
 2066 00f4 5A020000 		.4byte	.LCFI36-.Ltext0
 2067 00f8 0200     		.2byte	0x2
 2068 00fa 7D       		.byte	0x7d
 2069 00fb 00       		.sleb128 0
 2070 00fc 5A020000 		.4byte	.LCFI36-.Ltext0
 2071 0100 5C020000 		.4byte	.LCFI37-.Ltext0
 2072 0104 0200     		.2byte	0x2
 2073 0106 7D       		.byte	0x7d
 2074 0107 08       		.sleb128 8
 2075 0108 5C020000 		.4byte	.LCFI37-.Ltext0
 2076 010c 5E020000 		.4byte	.LCFI38-.Ltext0
 2077 0110 0200     		.2byte	0x2
 2078 0112 7D       		.byte	0x7d
 2079 0113 18       		.sleb128 24
 2080 0114 5E020000 		.4byte	.LCFI38-.Ltext0
 2081 0118 A0020000 		.4byte	.LCFI39-.Ltext0
 2082 011c 0200     		.2byte	0x2
 2083 011e 77       		.byte	0x77
 2084 011f 18       		.sleb128 24
 2085 0120 A0020000 		.4byte	.LCFI39-.Ltext0
 2086 0124 A2020000 		.4byte	.LCFI40-.Ltext0
 2087 0128 0200     		.2byte	0x2
 2088 012a 77       		.byte	0x77
 2089 012b 08       		.sleb128 8
 2090 012c A2020000 		.4byte	.LCFI40-.Ltext0
 2091 0130 A8020000 		.4byte	.LFE12-.Ltext0
 2092 0134 0200     		.2byte	0x2
 2093 0136 7D       		.byte	0x7d
 2094 0137 08       		.sleb128 8
 2095 0138 00000000 		.4byte	0
 2096 013c 00000000 		.4byte	0
 2097              	.LLST6:
 2098 0140 B4010000 		.4byte	.LFB11-.Ltext0
 2099 0144 B6010000 		.4byte	.LCFI31-.Ltext0
 2100 0148 0200     		.2byte	0x2
 2101 014a 7D       		.byte	0x7d
 2102 014b 00       		.sleb128 0
 2103 014c B6010000 		.4byte	.LCFI31-.Ltext0
 2104 0150 B8010000 		.4byte	.LCFI32-.Ltext0
 2105 0154 0200     		.2byte	0x2
 2106 0156 7D       		.byte	0x7d
 2107 0157 10       		.sleb128 16
 2108 0158 B8010000 		.4byte	.LCFI32-.Ltext0
 2109 015c BA010000 		.4byte	.LCFI33-.Ltext0
 2110 0160 0200     		.2byte	0x2
 2111 0162 7D       		.byte	0x7d
 2112 0163 28       		.sleb128 40
 2113 0164 BA010000 		.4byte	.LCFI33-.Ltext0
 2114 0168 4E020000 		.4byte	.LCFI34-.Ltext0
 2115 016c 0200     		.2byte	0x2
 2116 016e 77       		.byte	0x77
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 43


 2117 016f 28       		.sleb128 40
 2118 0170 4E020000 		.4byte	.LCFI34-.Ltext0
 2119 0174 50020000 		.4byte	.LCFI35-.Ltext0
 2120 0178 0200     		.2byte	0x2
 2121 017a 77       		.byte	0x77
 2122 017b 10       		.sleb128 16
 2123 017c 50020000 		.4byte	.LCFI35-.Ltext0
 2124 0180 58020000 		.4byte	.LFE11-.Ltext0
 2125 0184 0200     		.2byte	0x2
 2126 0186 7D       		.byte	0x7d
 2127 0187 10       		.sleb128 16
 2128 0188 00000000 		.4byte	0
 2129 018c 00000000 		.4byte	0
 2130              	.LLST5:
 2131 0190 FC000000 		.4byte	.LFB10-.Ltext0
 2132 0194 FE000000 		.4byte	.LCFI26-.Ltext0
 2133 0198 0200     		.2byte	0x2
 2134 019a 7D       		.byte	0x7d
 2135 019b 00       		.sleb128 0
 2136 019c FE000000 		.4byte	.LCFI26-.Ltext0
 2137 01a0 00010000 		.4byte	.LCFI27-.Ltext0
 2138 01a4 0200     		.2byte	0x2
 2139 01a6 7D       		.byte	0x7d
 2140 01a7 08       		.sleb128 8
 2141 01a8 00010000 		.4byte	.LCFI27-.Ltext0
 2142 01ac 02010000 		.4byte	.LCFI28-.Ltext0
 2143 01b0 0200     		.2byte	0x2
 2144 01b2 7D       		.byte	0x7d
 2145 01b3 20       		.sleb128 32
 2146 01b4 02010000 		.4byte	.LCFI28-.Ltext0
 2147 01b8 B0010000 		.4byte	.LCFI29-.Ltext0
 2148 01bc 0200     		.2byte	0x2
 2149 01be 77       		.byte	0x77
 2150 01bf 20       		.sleb128 32
 2151 01c0 B0010000 		.4byte	.LCFI29-.Ltext0
 2152 01c4 B2010000 		.4byte	.LCFI30-.Ltext0
 2153 01c8 0200     		.2byte	0x2
 2154 01ca 77       		.byte	0x77
 2155 01cb 08       		.sleb128 8
 2156 01cc B2010000 		.4byte	.LCFI30-.Ltext0
 2157 01d0 B4010000 		.4byte	.LFE10-.Ltext0
 2158 01d4 0200     		.2byte	0x2
 2159 01d6 7D       		.byte	0x7d
 2160 01d7 08       		.sleb128 8
 2161 01d8 00000000 		.4byte	0
 2162 01dc 00000000 		.4byte	0
 2163              	.LLST4:
 2164 01e0 90000000 		.4byte	.LFB9-.Ltext0
 2165 01e4 92000000 		.4byte	.LCFI21-.Ltext0
 2166 01e8 0200     		.2byte	0x2
 2167 01ea 7D       		.byte	0x7d
 2168 01eb 00       		.sleb128 0
 2169 01ec 92000000 		.4byte	.LCFI21-.Ltext0
 2170 01f0 94000000 		.4byte	.LCFI22-.Ltext0
 2171 01f4 0200     		.2byte	0x2
 2172 01f6 7D       		.byte	0x7d
 2173 01f7 08       		.sleb128 8
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 44


 2174 01f8 94000000 		.4byte	.LCFI22-.Ltext0
 2175 01fc 96000000 		.4byte	.LCFI23-.Ltext0
 2176 0200 0200     		.2byte	0x2
 2177 0202 7D       		.byte	0x7d
 2178 0203 20       		.sleb128 32
 2179 0204 96000000 		.4byte	.LCFI23-.Ltext0
 2180 0208 F0000000 		.4byte	.LCFI24-.Ltext0
 2181 020c 0200     		.2byte	0x2
 2182 020e 77       		.byte	0x77
 2183 020f 20       		.sleb128 32
 2184 0210 F0000000 		.4byte	.LCFI24-.Ltext0
 2185 0214 F2000000 		.4byte	.LCFI25-.Ltext0
 2186 0218 0200     		.2byte	0x2
 2187 021a 77       		.byte	0x77
 2188 021b 08       		.sleb128 8
 2189 021c F2000000 		.4byte	.LCFI25-.Ltext0
 2190 0220 FC000000 		.4byte	.LFE9-.Ltext0
 2191 0224 0200     		.2byte	0x2
 2192 0226 7D       		.byte	0x7d
 2193 0227 08       		.sleb128 8
 2194 0228 00000000 		.4byte	0
 2195 022c 00000000 		.4byte	0
 2196              	.LLST3:
 2197 0230 76000000 		.4byte	.LFB8-.Ltext0
 2198 0234 78000000 		.4byte	.LCFI16-.Ltext0
 2199 0238 0200     		.2byte	0x2
 2200 023a 7D       		.byte	0x7d
 2201 023b 00       		.sleb128 0
 2202 023c 78000000 		.4byte	.LCFI16-.Ltext0
 2203 0240 7A000000 		.4byte	.LCFI17-.Ltext0
 2204 0244 0200     		.2byte	0x2
 2205 0246 7D       		.byte	0x7d
 2206 0247 08       		.sleb128 8
 2207 0248 7A000000 		.4byte	.LCFI17-.Ltext0
 2208 024c 7C000000 		.4byte	.LCFI18-.Ltext0
 2209 0250 0200     		.2byte	0x2
 2210 0252 7D       		.byte	0x7d
 2211 0253 10       		.sleb128 16
 2212 0254 7C000000 		.4byte	.LCFI18-.Ltext0
 2213 0258 8C000000 		.4byte	.LCFI19-.Ltext0
 2214 025c 0200     		.2byte	0x2
 2215 025e 77       		.byte	0x77
 2216 025f 10       		.sleb128 16
 2217 0260 8C000000 		.4byte	.LCFI19-.Ltext0
 2218 0264 8E000000 		.4byte	.LCFI20-.Ltext0
 2219 0268 0200     		.2byte	0x2
 2220 026a 77       		.byte	0x77
 2221 026b 08       		.sleb128 8
 2222 026c 8E000000 		.4byte	.LCFI20-.Ltext0
 2223 0270 90000000 		.4byte	.LFE8-.Ltext0
 2224 0274 0200     		.2byte	0x2
 2225 0276 7D       		.byte	0x7d
 2226 0277 08       		.sleb128 8
 2227 0278 00000000 		.4byte	0
 2228 027c 00000000 		.4byte	0
 2229              	.LLST2:
 2230 0280 60000000 		.4byte	.LFB5-.Ltext0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 45


 2231 0284 62000000 		.4byte	.LCFI10-.Ltext0
 2232 0288 0200     		.2byte	0x2
 2233 028a 7D       		.byte	0x7d
 2234 028b 00       		.sleb128 0
 2235 028c 62000000 		.4byte	.LCFI10-.Ltext0
 2236 0290 64000000 		.4byte	.LCFI11-.Ltext0
 2237 0294 0200     		.2byte	0x2
 2238 0296 7D       		.byte	0x7d
 2239 0297 04       		.sleb128 4
 2240 0298 64000000 		.4byte	.LCFI11-.Ltext0
 2241 029c 66000000 		.4byte	.LCFI12-.Ltext0
 2242 02a0 0200     		.2byte	0x2
 2243 02a2 7D       		.byte	0x7d
 2244 02a3 10       		.sleb128 16
 2245 02a4 66000000 		.4byte	.LCFI12-.Ltext0
 2246 02a8 70000000 		.4byte	.LCFI13-.Ltext0
 2247 02ac 0200     		.2byte	0x2
 2248 02ae 77       		.byte	0x77
 2249 02af 10       		.sleb128 16
 2250 02b0 70000000 		.4byte	.LCFI13-.Ltext0
 2251 02b4 72000000 		.4byte	.LCFI14-.Ltext0
 2252 02b8 0200     		.2byte	0x2
 2253 02ba 77       		.byte	0x77
 2254 02bb 04       		.sleb128 4
 2255 02bc 72000000 		.4byte	.LCFI14-.Ltext0
 2256 02c0 74000000 		.4byte	.LCFI15-.Ltext0
 2257 02c4 0200     		.2byte	0x2
 2258 02c6 7D       		.byte	0x7d
 2259 02c7 04       		.sleb128 4
 2260 02c8 74000000 		.4byte	.LCFI15-.Ltext0
 2261 02cc 76000000 		.4byte	.LFE5-.Ltext0
 2262 02d0 0200     		.2byte	0x2
 2263 02d2 7D       		.byte	0x7d
 2264 02d3 00       		.sleb128 0
 2265 02d4 00000000 		.4byte	0
 2266 02d8 00000000 		.4byte	0
 2267              	.LLST1:
 2268 02dc 30000000 		.4byte	.LFB1-.Ltext0
 2269 02e0 32000000 		.4byte	.LCFI5-.Ltext0
 2270 02e4 0200     		.2byte	0x2
 2271 02e6 7D       		.byte	0x7d
 2272 02e7 00       		.sleb128 0
 2273 02e8 32000000 		.4byte	.LCFI5-.Ltext0
 2274 02ec 34000000 		.4byte	.LCFI6-.Ltext0
 2275 02f0 0200     		.2byte	0x2
 2276 02f2 7D       		.byte	0x7d
 2277 02f3 08       		.sleb128 8
 2278 02f4 34000000 		.4byte	.LCFI6-.Ltext0
 2279 02f8 36000000 		.4byte	.LCFI7-.Ltext0
 2280 02fc 0200     		.2byte	0x2
 2281 02fe 7D       		.byte	0x7d
 2282 02ff 18       		.sleb128 24
 2283 0300 36000000 		.4byte	.LCFI7-.Ltext0
 2284 0304 5C000000 		.4byte	.LCFI8-.Ltext0
 2285 0308 0200     		.2byte	0x2
 2286 030a 77       		.byte	0x77
 2287 030b 18       		.sleb128 24
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 46


 2288 030c 5C000000 		.4byte	.LCFI8-.Ltext0
 2289 0310 5E000000 		.4byte	.LCFI9-.Ltext0
 2290 0314 0200     		.2byte	0x2
 2291 0316 77       		.byte	0x77
 2292 0317 08       		.sleb128 8
 2293 0318 5E000000 		.4byte	.LCFI9-.Ltext0
 2294 031c 60000000 		.4byte	.LFE1-.Ltext0
 2295 0320 0200     		.2byte	0x2
 2296 0322 7D       		.byte	0x7d
 2297 0323 08       		.sleb128 8
 2298 0324 00000000 		.4byte	0
 2299 0328 00000000 		.4byte	0
 2300              	.LLST0:
 2301 032c 00000000 		.4byte	.LFB0-.Ltext0
 2302 0330 02000000 		.4byte	.LCFI0-.Ltext0
 2303 0334 0200     		.2byte	0x2
 2304 0336 7D       		.byte	0x7d
 2305 0337 00       		.sleb128 0
 2306 0338 02000000 		.4byte	.LCFI0-.Ltext0
 2307 033c 04000000 		.4byte	.LCFI1-.Ltext0
 2308 0340 0200     		.2byte	0x2
 2309 0342 7D       		.byte	0x7d
 2310 0343 08       		.sleb128 8
 2311 0344 04000000 		.4byte	.LCFI1-.Ltext0
 2312 0348 06000000 		.4byte	.LCFI2-.Ltext0
 2313 034c 0200     		.2byte	0x2
 2314 034e 7D       		.byte	0x7d
 2315 034f 18       		.sleb128 24
 2316 0350 06000000 		.4byte	.LCFI2-.Ltext0
 2317 0354 2C000000 		.4byte	.LCFI3-.Ltext0
 2318 0358 0200     		.2byte	0x2
 2319 035a 77       		.byte	0x77
 2320 035b 18       		.sleb128 24
 2321 035c 2C000000 		.4byte	.LCFI3-.Ltext0
 2322 0360 2E000000 		.4byte	.LCFI4-.Ltext0
 2323 0364 0200     		.2byte	0x2
 2324 0366 77       		.byte	0x77
 2325 0367 08       		.sleb128 8
 2326 0368 2E000000 		.4byte	.LCFI4-.Ltext0
 2327 036c 30000000 		.4byte	.LFE0-.Ltext0
 2328 0370 0200     		.2byte	0x2
 2329 0372 7D       		.byte	0x7d
 2330 0373 08       		.sleb128 8
 2331 0374 00000000 		.4byte	0
 2332 0378 00000000 		.4byte	0
 2333              		.section	.debug_aranges,"",%progbits
 2334 0000 1C000000 		.4byte	0x1c
 2335 0004 0200     		.2byte	0x2
 2336 0006 00000000 		.4byte	.Ldebug_info0
 2337 000a 04       		.byte	0x4
 2338 000b 00       		.byte	0
 2339 000c 0000     		.2byte	0
 2340 000e 0000     		.2byte	0
 2341 0010 00000000 		.4byte	.Ltext0
 2342 0014 08040000 		.4byte	.Letext0-.Ltext0
 2343 0018 00000000 		.4byte	0
 2344 001c 00000000 		.4byte	0
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 47


 2345              		.section	.debug_line,"",%progbits
 2346              	.Ldebug_line0:
 2347 0000 96010000 		.section	.debug_str,"MS",%progbits,1
 2347      02007400 
 2347      00000201 
 2347      FB0E0D00 
 2347      01010101 
 2348              	.LASF17:
 2349 0000 66726F6D 		.ascii	"from\000"
 2349      00
 2350              	.LASF8:
 2351 0005 696E6465 		.ascii	"index_change_record\000"
 2351      785F6368 
 2351      616E6765 
 2351      5F726563 
 2351      6F726400 
 2352              	.LASF23:
 2353 0019 68656170 		.ascii	"heap_set_index_data\000"
 2353      5F736574 
 2353      5F696E64 
 2353      65785F64 
 2353      61746100 
 2354              	.LASF3:
 2355 002d 64617461 		.ascii	"data_size\000"
 2355      5F73697A 
 2355      6500
 2356              	.LASF9:
 2357 0037 756E7369 		.ascii	"unsigned int\000"
 2357      676E6564 
 2357      20696E74 
 2357      00
 2358              	.LASF16:
 2359 0044 6C697474 		.ascii	"little_heap_ptr\000"
 2359      6C655F68 
 2359      6561705F 
 2359      70747200 
 2360              	.LASF6:
 2361 0054 6C697474 		.ascii	"little_heap\000"
 2361      6C655F68 
 2361      65617000 
 2362              	.LASF7:
 2363 0060 64617461 		.ascii	"data\000"
 2363      00
 2364              	.LASF29:
 2365 0065 6C656E5F 		.ascii	"len_per_data\000"
 2365      7065725F 
 2365      64617461 
 2365      00
 2366              	.LASF39:
 2367 0072 56656374 		.ascii	"Vector_get_index_data\000"
 2367      6F725F67 
 2367      65745F69 
 2367      6E646578 
 2367      5F646174 
 2368              	.LASF13:
 2369 0088 756E7369 		.ascii	"unsigned char\000"
 2369      676E6564 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 48


 2369      20636861 
 2369      7200
 2370              	.LASF30:
 2371 0096 68656170 		.ascii	"heap_get_cur_len\000"
 2371      5F676574 
 2371      5F637572 
 2371      5F6C656E 
 2371      00
 2372              	.LASF14:
 2373 00a7 73686F72 		.ascii	"short unsigned int\000"
 2373      7420756E 
 2373      7369676E 
 2373      65642069 
 2373      6E7400
 2374              	.LASF26:
 2375 00ba 70757368 		.ascii	"push_data_ptr\000"
 2375      5F646174 
 2375      615F7074 
 2375      7200
 2376              	.LASF2:
 2377 00c8 6375725F 		.ascii	"cur_len\000"
 2377      6C656E00 
 2378              	.LASF1:
 2379 00d0 6D61785F 		.ascii	"max_len\000"
 2379      6C656E00 
 2380              	.LASF0:
 2381 00d8 64617461 		.ascii	"data_ptr\000"
 2381      5F707472 
 2381      00
 2382              	.LASF15:
 2383 00e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2383      206C6F6E 
 2383      6720756E 
 2383      7369676E 
 2383      65642069 
 2384              	.LASF24:
 2385 00f8 68656170 		.ascii	"heap_get_index_data_safe\000"
 2385      5F676574 
 2385      5F696E64 
 2385      65785F64 
 2385      6174615F 
 2386              	.LASF28:
 2387 0111 68656170 		.ascii	"heap_init\000"
 2387      5F696E69 
 2387      7400
 2388              	.LASF38:
 2389 011b 56656374 		.ascii	"Vector\000"
 2389      6F7200
 2390              	.LASF32:
 2391 0122 76656374 		.ascii	"vector_ptr\000"
 2391      6F725F70 
 2391      747200
 2392              	.LASF34:
 2393 012d 56656374 		.ascii	"Vector_set_index_data\000"
 2393      6F725F73 
 2393      65745F69 
 2393      6E646578 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 49


 2393      5F646174 
 2394              	.LASF12:
 2395 0143 6C6F6E67 		.ascii	"long long int\000"
 2395      206C6F6E 
 2395      6720696E 
 2395      7400
 2396              	.LASF5:
 2397 0151 76656374 		.ascii	"vector\000"
 2397      6F7200
 2398              	.LASF21:
 2399 0158 696E6465 		.ascii	"index\000"
 2399      7800
 2400              	.LASF22:
 2401 015e 64617461 		.ascii	"data_store_ptr\000"
 2401      5F73746F 
 2401      72655F70 
 2401      747200
 2402              	.LASF4:
 2403 016d 65787465 		.ascii	"extension_factor\000"
 2403      6E73696F 
 2403      6E5F6661 
 2403      63746F72 
 2403      00
 2404              	.LASF11:
 2405 017e 73686F72 		.ascii	"short int\000"
 2405      7420696E 
 2405      7400
 2406              	.LASF36:
 2407 0188 2E2E2F2E 		.ascii	"../../source/src/kernel/OS_LIB/heap_oo.c\000"
 2407      2E2F736F 
 2407      75726365 
 2407      2F737263 
 2407      2F6B6572 
 2408              	.LASF27:
 2409 01b1 56656374 		.ascii	"Vector_ptr\000"
 2409      6F725F70 
 2409      747200
 2410              	.LASF33:
 2411 01bc 68656170 		.ascii	"heap_adjust\000"
 2411      5F61646A 
 2411      75737400 
 2412              	.LASF35:
 2413 01c8 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 2413      43313120 
 2413      372E332E 
 2413      31203230 
 2413      31383036 
 2414 01fb 616E6368 		.ascii	"anch revision 261907] -mcpu=cortex-m3 -mthumb -mapc"
 2414      20726576 
 2414      6973696F 
 2414      6E203236 
 2414      31393037 
 2415 022e 732D6672 		.ascii	"s-frame -mthumb-interwork -mcpu=cortex-m3 -mthumb -"
 2415      616D6520 
 2415      2D6D7468 
 2415      756D622D 
 2415      696E7465 
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 50


 2416 0261 67647761 		.ascii	"gdwarf-2 -O0\000"
 2416      72662D32 
 2416      202D4F30 
 2416      00
 2417              	.LASF25:
 2418 026e 68656170 		.ascii	"heap_push\000"
 2418      5F707573 
 2418      6800
 2419              	.LASF10:
 2420 0278 7369676E 		.ascii	"signed char\000"
 2420      65642063 
 2420      68617200 
 2421              	.LASF31:
 2422 0284 6765745F 		.ascii	"get_Vector_cur_len\000"
 2422      56656374 
 2422      6F725F63 
 2422      75725F6C 
 2422      656E00
 2423              	.LASF18:
 2424 0297 73697A65 		.ascii	"size\000"
 2424      00
 2425              	.LASF19:
 2426 029c 68656170 		.ascii	"heap_erase_data\000"
 2426      5F657261 
 2426      73655F64 
 2426      61746100 
 2427              	.LASF37:
 2428 02ac 463A5C6B 		.ascii	"F:\\kaka\\KAKAOS\\C\\windows\\Project\\RVMDK\243\250"
 2428      616B615C 
 2428      4B414B41 
 2428      4F535C43 
 2428      5C77696E 
 2429 02d4 757635A3 		.ascii	"uv5\243\251\000"
 2429      A900
 2430              	.LASF20:
 2431 02da 68656170 		.ascii	"heap_remove_index_data\000"
 2431      5F72656D 
 2431      6F76655F 
 2431      696E6465 
 2431      785F6461 
 2432              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 heap_oo.c
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:15     .text:00000000 $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:21     .text:00000000 Vector_get_index_data
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:74     .text:00000030 Vector_set_index_data
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:126    .text:00000060 get_Vector_cur_len
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:170    .text:00000076 heap_get_cur_len
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:208    .rodata:00000000 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:219    .text:00000090 heap_init
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:307    .text:000000f4 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:312    .text:000000fc $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:318    .text:000000fc heap_adjust
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:465    .text:000001b4 heap_push
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:588    .text:00000254 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:592    .text:00000258 $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:599    .text:00000258 heap_get_index_data_safe
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:667    .text:000002a4 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:671    .text:000002a8 $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:678    .text:000002a8 heap_set_index_data
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:765    .text:00000314 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:769    .text:00000318 $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:776    .text:00000318 heap_remove_index_data
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:874    .text:00000394 $d
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:878    .text:00000398 $t
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:885    .text:00000398 heap_erase_data
G:\Users\Jaxb\AppData\Local\Temp\ccOPPqHN.s:974    .text:00000404 $d

UNDEFINED SYMBOLS
ka_memcpy
_ASSERT
Vector_init
Vector_set_inner
Vector_push_back
Vector_remove_index_data
Vector_erase_data
