!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
RT_EBUSY	module.c	16;"	d	file:
RT_EEMPTY	module.c	13;"	d	file:
RT_EFULL	module.c	12;"	d	file:
RT_EINTR	module.c	18;"	d	file:
RT_EINVAL	module.c	19;"	d	file:
RT_EIO	module.c	17;"	d	file:
RT_ENOMEM	module.c	14;"	d	file:
RT_ENOSYS	module.c	15;"	d	file:
RT_EOK	module.c	9;"	d	file:
RT_ERROR	module.c	10;"	d	file:
RT_ETIMEOUT	module.c	11;"	d	file:
clear_module_buffer	module.c	/^void clear_module_buffer(void)$/;"	f
dlmodule_exec	module.c	/^struct rt_dlmodule* dlmodule_exec(void)$/;"	f
dlmodule_load	module.c	/^struct rt_dlmodule* dlmodule_load(void)$/;"	f
dlmodule_load_relocated_object	module.c	/^rt_err_t dlmodule_load_relocated_object(struct rt_dlmodule* module, void *module_ptr)$/;"	f
dlmodule_load_shared_object	module.c	/^rt_err_t dlmodule_load_shared_object(struct rt_dlmodule* module, void *module_ptr)$/;"	f
dlmodule_relocate	module.c	/^int dlmodule_relocate(struct rt_dlmodule *module, Elf32_Rel *rel, Elf32_Addr sym_val)$/;"	f
dlmodule_symbol_find	module.c	/^UINT32 dlmodule_symbol_find(const char *sym_str)$/;"	f
elf_module	module.c	21;"	d	file:
module_buffer	module.c	/^static char *module_buffer = NULL;$/;"	v	file:
num	module.c	/^static unsigned int num = 0;$/;"	v	file:
put_in_module_buffer	module.c	/^void put_in_module_buffer(char c)$/;"	f
rt_err_t	module.c	/^typedef long                       rt_err_t;       \/**< Type for error number *\/$/;"	t	file:
set_module_buffer	module.c	/^void set_module_buffer(void *add)$/;"	f
show_get_size	module.c	/^void show_get_size(void)$/;"	f
